Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> funciones_structs
Rule 2     funciones_structs -> funciones_structs funcion_struct
Rule 3     funciones_structs -> funcion_struct
Rule 4     funcion_struct -> funcion
Rule 5     funcion -> FN ID PIZQ PDER bloque
Rule 6     funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque
Rule 7     funcion -> FN ID PIZQ parametros PDER bloque
Rule 8     funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque
Rule 9     parametros -> parametros COMA parametro
Rule 10    parametros -> parametro
Rule 11    parametro -> ID DOBLEPT tipo_dato
Rule 12    parametro -> ID DOBLEPT Y MUT dimensiones
Rule 13    parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR
Rule 14    llamadaF -> ID PIZQ PDER
Rule 15    llamadaF -> ID PIZQ lista_expresiones PDER
Rule 16    lista_expresiones -> lista_expresiones COMA expresion
Rule 17    lista_expresiones -> expresion
Rule 18    bloque -> LLAVEIZQ LLAVEDER
Rule 19    bloque -> LLAVEIZQ instrucciones LLAVEDER
Rule 20    instrucciones -> instrucciones instruccion
Rule 21    instrucciones -> instruccion
Rule 22    instruccion -> print PTCOMA
Rule 23    instruccion -> declaracion PTCOMA
Rule 24    instruccion -> asignacion PTCOMA
Rule 25    instruccion -> if_i
Rule 26    instruccion -> llamadaF PTCOMA
Rule 27    instruccion -> return PTCOMA
Rule 28    instruccion -> loop
Rule 29    instruccion -> break PTCOMA
Rule 30    instruccion -> while
Rule 31    instruccion -> continue PTCOMA
Rule 32    instruccion -> for
Rule 33    instruccion -> insert PTCOMA
Rule 34    instruccion -> asignacionA PTCOMA
Rule 35    instruccion -> push PTCOMA
Rule 36    print -> PRINTLN NOT PIZQ lista_expresiones PDER
Rule 37    return -> RETURN
Rule 38    return -> RETURN expresion
Rule 39    asignacionA -> ID ubicaciones IGUAL expresion
Rule 40    declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion
Rule 41    declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion
Rule 42    declaracion -> LET MUT ID IGUAL expresion
Rule 43    declaracion -> LET ID IGUAL expresion
Rule 44    declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion
Rule 45    declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion
Rule 46    declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
Rule 47    declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
Rule 48    dimensiones -> CORIZQ tipo_dato CORDER
Rule 49    dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER
Rule 50    dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
Rule 51    dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
Rule 52    asignacion -> ID IGUAL expresion
Rule 53    if_i -> IF expresion bloque
Rule 54    if_i -> IF expresion bloque ELSE bloque
Rule 55    if_i -> IF expresion bloque listaelseI
Rule 56    if_i -> IF expresion bloque listaelseI ELSE bloque
Rule 57    listaelseI -> listaelseI elseifI
Rule 58    listaelseI -> elseifI
Rule 59    elseifI -> ELSE IF expresion bloque
Rule 60    loop -> LOOP bloque
Rule 61    break -> BREAK
Rule 62    break -> BREAK expresion
Rule 63    while -> WHILE expresion bloque
Rule 64    continue -> CONTINUE
Rule 65    for -> FOR ID IN expresion PUNTO PUNTO expresion bloque
Rule 66    for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
Rule 67    for -> FOR ID IN expresion bloque
Rule 68    push -> ID PUNTO PUSH PIZQ expresion PDER
Rule 69    insert -> ID PUNTO INSERT PIZQ expresion COMA expresion PDER
Rule 70    expresion -> MENOS expresion
Rule 71    expresion -> expresion MAS expresion
Rule 72    expresion -> expresion MENOS expresion
Rule 73    expresion -> expresion MULTIPLICACION expresion
Rule 74    expresion -> expresion DIVISION expresion
Rule 75    expresion -> expresion MODULO expresion
Rule 76    expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
Rule 77    expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
Rule 78    expresion -> PIZQ expresion PDER
Rule 79    expresion -> expresion MAYOR expresion
Rule 80    expresion -> expresion MENOR expresion
Rule 81    expresion -> expresion MAYORIGUAL expresion
Rule 82    expresion -> expresion MENORIGUAL expresion
Rule 83    expresion -> expresion IGUALIGUAL expresion
Rule 84    expresion -> expresion DIFERENTE expresion
Rule 85    expresion -> expresion AND expresion
Rule 86    expresion -> expresion OR expresion
Rule 87    expresion -> NOT expresion
Rule 88    expresion -> tostring
Rule 89    expresion -> as
Rule 90    expresion -> abs
Rule 91    expresion -> sqrt
Rule 92    expresion -> if_e
Rule 93    expresion -> llamadaF
Rule 94    expresion -> loop
Rule 95    expresion -> arraycontenido
Rule 96    expresion -> accesoarray
Rule 97    expresion -> referencia
Rule 98    expresion -> len
Rule 99    expresion -> capacity
Rule 100   expresion -> contains
Rule 101   expresion -> clone
Rule 102   expresion -> vector
Rule 103   expresion -> remove
Rule 104   remove -> expresion PUNTO REMOVE PIZQ expresion PDER
Rule 105   contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER
Rule 106   vector -> VEC NOT CORIZQ lista_expresiones CORDER
Rule 107   vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER
Rule 108   vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER
Rule 109   vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
Rule 110   clone -> expresion PUNTO CLONE PIZQ PDER
Rule 111   len -> expresion PUNTO LEN PIZQ PDER
Rule 112   capacity -> expresion PUNTO CAPACITY PIZQ PDER
Rule 113   referencia -> Y MUT ID
Rule 114   accesoarray -> ID ubicaciones
Rule 115   ubicaciones -> ubicaciones ubicacion
Rule 116   ubicaciones -> ubicacion
Rule 117   ubicacion -> CORIZQ expresion CORDER
Rule 118   arraycontenido -> CORIZQ lista_expresiones CORDER
Rule 119   tostring -> expresion PUNTO TOSTRING PIZQ PDER
Rule 120   tostring -> expresion PUNTO TOOWNED PIZQ PDER
Rule 121   as -> expresion AS I64
Rule 122   as -> expresion AS F64
Rule 123   as -> expresion AS USIZE
Rule 124   abs -> expresion PUNTO ABS PIZQ PDER
Rule 125   sqrt -> expresion PUNTO SQRT PIZQ PDER
Rule 126   if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
Rule 127   if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
Rule 128   if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
Rule 129   if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
Rule 130   listaelse -> listaelse elseif
Rule 131   listaelse -> elseif
Rule 132   elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
Rule 133   expresion -> ENTERO
Rule 134   expresion -> DECIMAL
Rule 135   expresion -> ID
Rule 136   expresion -> CARACTER
Rule 137   expresion -> CADENA
Rule 138   expresion -> TRUE
Rule 139   expresion -> FALSE
Rule 140   tipo_dato -> I64
Rule 141   tipo_dato -> F64
Rule 142   tipo_dato -> BOOL
Rule 143   tipo_dato -> CHAR
Rule 144   tipo_dato -> str
Rule 145   tipo_dato -> STRING
Rule 146   tipo_dato -> USIZE
Rule 147   str -> Y STR

Terminals, with rules where they appear

ABS                  : 124
AND                  : 85
AS                   : 121 122 123
BOOL                 : 142
BREAK                : 61 62
CADENA               : 137
CAPACITY             : 112
CARACTER             : 136
CHAR                 : 143
CHARS                : 66
CLONE                : 110
COMA                 : 9 16 69 76 77
CONTAINS             : 105
CONTINUE             : 64
CORDER               : 48 49 50 50 51 51 51 106 107 117 118
CORIZQ               : 48 49 50 50 51 51 51 106 107 117 118
DECIMAL              : 134
DIFERENTE            : 84
DIVISION             : 74
DOBLEPT              : 11 12 13 40 41 44 45 46 47 76 76 77 77 108 108 109 109
ELSE                 : 54 56 59 127 129 132
ENTERO               : 133
F64                  : 77 122 141
FALSE                : 139
FLECHA               : 6 8
FN                   : 5 6 7 8
FOR                  : 65 66 67
I64                  : 76 121 140
ID                   : 5 6 7 8 11 12 13 14 15 39 40 41 42 43 44 45 46 47 52 65 66 67 68 69 113 114 135
IF                   : 53 54 55 56 59 126 127 128 129 132
IGUAL                : 39 40 41 42 43 44 45 46 47 52
IGUALIGUAL           : 83
IN                   : 65 66 67
INSERT               : 69
LEN                  : 111
LET                  : 40 41 42 43 44 45 46 47
LLAVEDER             : 18 19 126 127 127 128 129 129 132
LLAVEIZQ             : 18 19 126 127 127 128 129 129 132
LOOP                 : 60
MAS                  : 71
MAYOR                : 13 46 47 79
MAYORIGUAL           : 81
MENOR                : 13 46 47 80
MENORIGUAL           : 82
MENOS                : 70 72
MODULO               : 75
MULTIPLICACION       : 73
MUT                  : 12 13 40 42 44 46 113
NEW                  : 108
NOT                  : 36 87 106 107
OR                   : 86
PDER                 : 5 6 7 8 14 15 36 66 68 69 76 77 78 104 105 108 109 110 111 112 119 120 124 125
PIZQ                 : 5 6 7 8 14 15 36 66 68 69 76 77 78 104 105 108 109 110 111 112 119 120 124 125
POW                  : 76
POWF                 : 77
PRINTLN              : 36
PTCOMA               : 22 23 24 26 27 29 31 33 34 35 49 50 50 51 51 51 107
PUNTO                : 65 65 66 68 69 104 105 110 111 112 119 120 124 125
PUSH                 : 68
REMOVE               : 104
RETURN               : 37 38
SQRT                 : 125
STR                  : 147
STRING               : 145
TOOWNED              : 120
TOSTRING             : 119
TRUE                 : 138
USIZE                : 123 146
VEC                  : 106 107
VECM                 : 13 46 47 108 109
WCAPACITY            : 109
WHILE                : 63
Y                    : 12 13 105 113 147
error                : 

Nonterminals, with rules where they appear

abs                  : 90
accesoarray          : 96
arraycontenido       : 95
as                   : 89
asignacion           : 24
asignacionA          : 34
bloque               : 5 6 7 8 53 54 54 55 56 56 59 60 63 65 66 67
break                : 29
capacity             : 99
clone                : 101
contains             : 100
continue             : 31
declaracion          : 23
dimensiones          : 12 44 45
elseif               : 130 131
elseifI              : 57 58
expresion            : 16 17 38 39 40 41 42 43 44 45 46 47 49 50 50 51 51 51 52 53 54 55 56 59 62 63 65 65 66 67 68 69 69 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 104 104 105 105 107 107 109 110 111 112 117 119 120 121 122 123 124 125 126 126 127 127 127 128 128 129 129 129 132 132
for                  : 32
funcion              : 4
funcion_struct       : 2 3
funciones_structs    : 1 2
if_e                 : 92
if_i                 : 25
init                 : 0
insert               : 33
instruccion          : 20 21
instrucciones        : 19 20 126 127 127 128 129 129 132
len                  : 98
lista_expresiones    : 15 16 36 106 118
listaelse            : 128 129 130
listaelseI           : 55 56 57
llamadaF             : 26 93
loop                 : 28 94
parametro            : 9 10
parametros           : 7 8 9
print                : 22
push                 : 35
referencia           : 97
remove               : 103
return               : 27
sqrt                 : 91
str                  : 144
tipo_dato            : 6 8 11 13 40 41 46 47 48 49 50 51
tostring             : 88
ubicacion            : 115 116
ubicaciones          : 39 114 115
vector               : 102
while                : 30

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . funciones_structs
    (2) funciones_structs -> . funciones_structs funcion_struct
    (3) funciones_structs -> . funcion_struct
    (4) funcion_struct -> . funcion
    (5) funcion -> . FN ID PIZQ PDER bloque
    (6) funcion -> . FN ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> . FN ID PIZQ parametros PDER bloque
    (8) funcion -> . FN ID PIZQ parametros PDER FLECHA tipo_dato bloque

    FN              shift and go to state 5

    init                           shift and go to state 1
    funciones_structs              shift and go to state 2
    funcion_struct                 shift and go to state 3
    funcion                        shift and go to state 4

state 1

    (0) S' -> init .



state 2

    (1) init -> funciones_structs .
    (2) funciones_structs -> funciones_structs . funcion_struct
    (4) funcion_struct -> . funcion
    (5) funcion -> . FN ID PIZQ PDER bloque
    (6) funcion -> . FN ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> . FN ID PIZQ parametros PDER bloque
    (8) funcion -> . FN ID PIZQ parametros PDER FLECHA tipo_dato bloque

    $end            reduce using rule 1 (init -> funciones_structs .)
    FN              shift and go to state 5

    funcion_struct                 shift and go to state 6
    funcion                        shift and go to state 4

state 3

    (3) funciones_structs -> funcion_struct .

    FN              reduce using rule 3 (funciones_structs -> funcion_struct .)
    $end            reduce using rule 3 (funciones_structs -> funcion_struct .)


state 4

    (4) funcion_struct -> funcion .

    FN              reduce using rule 4 (funcion_struct -> funcion .)
    $end            reduce using rule 4 (funcion_struct -> funcion .)


state 5

    (5) funcion -> FN . ID PIZQ PDER bloque
    (6) funcion -> FN . ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> FN . ID PIZQ parametros PDER bloque
    (8) funcion -> FN . ID PIZQ parametros PDER FLECHA tipo_dato bloque

    ID              shift and go to state 7


state 6

    (2) funciones_structs -> funciones_structs funcion_struct .

    FN              reduce using rule 2 (funciones_structs -> funciones_structs funcion_struct .)
    $end            reduce using rule 2 (funciones_structs -> funciones_structs funcion_struct .)


state 7

    (5) funcion -> FN ID . PIZQ PDER bloque
    (6) funcion -> FN ID . PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> FN ID . PIZQ parametros PDER bloque
    (8) funcion -> FN ID . PIZQ parametros PDER FLECHA tipo_dato bloque

    PIZQ            shift and go to state 8


state 8

    (5) funcion -> FN ID PIZQ . PDER bloque
    (6) funcion -> FN ID PIZQ . PDER FLECHA tipo_dato bloque
    (7) funcion -> FN ID PIZQ . parametros PDER bloque
    (8) funcion -> FN ID PIZQ . parametros PDER FLECHA tipo_dato bloque
    (9) parametros -> . parametros COMA parametro
    (10) parametros -> . parametro
    (11) parametro -> . ID DOBLEPT tipo_dato
    (12) parametro -> . ID DOBLEPT Y MUT dimensiones
    (13) parametro -> . ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR

    PDER            shift and go to state 10
    ID              shift and go to state 9

    parametros                     shift and go to state 11
    parametro                      shift and go to state 12

state 9

    (11) parametro -> ID . DOBLEPT tipo_dato
    (12) parametro -> ID . DOBLEPT Y MUT dimensiones
    (13) parametro -> ID . DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR

    DOBLEPT         shift and go to state 13


state 10

    (5) funcion -> FN ID PIZQ PDER . bloque
    (6) funcion -> FN ID PIZQ PDER . FLECHA tipo_dato bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    FLECHA          shift and go to state 15
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 14

state 11

    (7) funcion -> FN ID PIZQ parametros . PDER bloque
    (8) funcion -> FN ID PIZQ parametros . PDER FLECHA tipo_dato bloque
    (9) parametros -> parametros . COMA parametro

    PDER            shift and go to state 17
    COMA            shift and go to state 18


state 12

    (10) parametros -> parametro .

    PDER            reduce using rule 10 (parametros -> parametro .)
    COMA            reduce using rule 10 (parametros -> parametro .)


state 13

    (11) parametro -> ID DOBLEPT . tipo_dato
    (12) parametro -> ID DOBLEPT . Y MUT dimensiones
    (13) parametro -> ID DOBLEPT . Y MUT VECM MENOR tipo_dato MAYOR
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (147) str -> . Y STR

    Y               shift and go to state 20
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27

    tipo_dato                      shift and go to state 19
    str                            shift and go to state 25

state 14

    (5) funcion -> FN ID PIZQ PDER bloque .

    FN              reduce using rule 5 (funcion -> FN ID PIZQ PDER bloque .)
    $end            reduce using rule 5 (funcion -> FN ID PIZQ PDER bloque .)


state 15

    (6) funcion -> FN ID PIZQ PDER FLECHA . tipo_dato bloque
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (147) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 28
    str                            shift and go to state 25

state 16

    (18) bloque -> LLAVEIZQ . LLAVEDER
    (19) bloque -> LLAVEIZQ . instrucciones LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (60) loop -> . LOOP bloque
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    LLAVEDER        shift and go to state 30
    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    ID              shift and go to state 49
    IF              shift and go to state 50
    RETURN          shift and go to state 51
    LOOP            shift and go to state 52
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    instrucciones                  shift and go to state 31
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 17

    (7) funcion -> FN ID PIZQ parametros PDER . bloque
    (8) funcion -> FN ID PIZQ parametros PDER . FLECHA tipo_dato bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    FLECHA          shift and go to state 58
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 57

state 18

    (9) parametros -> parametros COMA . parametro
    (11) parametro -> . ID DOBLEPT tipo_dato
    (12) parametro -> . ID DOBLEPT Y MUT dimensiones
    (13) parametro -> . ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR

    ID              shift and go to state 9

    parametro                      shift and go to state 59

state 19

    (11) parametro -> ID DOBLEPT tipo_dato .

    PDER            reduce using rule 11 (parametro -> ID DOBLEPT tipo_dato .)
    COMA            reduce using rule 11 (parametro -> ID DOBLEPT tipo_dato .)


state 20

    (12) parametro -> ID DOBLEPT Y . MUT dimensiones
    (13) parametro -> ID DOBLEPT Y . MUT VECM MENOR tipo_dato MAYOR
    (147) str -> Y . STR

    MUT             shift and go to state 60
    STR             shift and go to state 61


state 21

    (140) tipo_dato -> I64 .

    PDER            reduce using rule 140 (tipo_dato -> I64 .)
    COMA            reduce using rule 140 (tipo_dato -> I64 .)
    LLAVEIZQ        reduce using rule 140 (tipo_dato -> I64 .)
    CORDER          reduce using rule 140 (tipo_dato -> I64 .)
    PTCOMA          reduce using rule 140 (tipo_dato -> I64 .)
    IGUAL           reduce using rule 140 (tipo_dato -> I64 .)
    MAYOR           reduce using rule 140 (tipo_dato -> I64 .)


state 22

    (141) tipo_dato -> F64 .

    PDER            reduce using rule 141 (tipo_dato -> F64 .)
    COMA            reduce using rule 141 (tipo_dato -> F64 .)
    LLAVEIZQ        reduce using rule 141 (tipo_dato -> F64 .)
    CORDER          reduce using rule 141 (tipo_dato -> F64 .)
    PTCOMA          reduce using rule 141 (tipo_dato -> F64 .)
    IGUAL           reduce using rule 141 (tipo_dato -> F64 .)
    MAYOR           reduce using rule 141 (tipo_dato -> F64 .)


state 23

    (142) tipo_dato -> BOOL .

    PDER            reduce using rule 142 (tipo_dato -> BOOL .)
    COMA            reduce using rule 142 (tipo_dato -> BOOL .)
    LLAVEIZQ        reduce using rule 142 (tipo_dato -> BOOL .)
    CORDER          reduce using rule 142 (tipo_dato -> BOOL .)
    PTCOMA          reduce using rule 142 (tipo_dato -> BOOL .)
    IGUAL           reduce using rule 142 (tipo_dato -> BOOL .)
    MAYOR           reduce using rule 142 (tipo_dato -> BOOL .)


state 24

    (143) tipo_dato -> CHAR .

    PDER            reduce using rule 143 (tipo_dato -> CHAR .)
    COMA            reduce using rule 143 (tipo_dato -> CHAR .)
    LLAVEIZQ        reduce using rule 143 (tipo_dato -> CHAR .)
    CORDER          reduce using rule 143 (tipo_dato -> CHAR .)
    PTCOMA          reduce using rule 143 (tipo_dato -> CHAR .)
    IGUAL           reduce using rule 143 (tipo_dato -> CHAR .)
    MAYOR           reduce using rule 143 (tipo_dato -> CHAR .)


state 25

    (144) tipo_dato -> str .

    PDER            reduce using rule 144 (tipo_dato -> str .)
    COMA            reduce using rule 144 (tipo_dato -> str .)
    LLAVEIZQ        reduce using rule 144 (tipo_dato -> str .)
    CORDER          reduce using rule 144 (tipo_dato -> str .)
    PTCOMA          reduce using rule 144 (tipo_dato -> str .)
    IGUAL           reduce using rule 144 (tipo_dato -> str .)
    MAYOR           reduce using rule 144 (tipo_dato -> str .)


state 26

    (145) tipo_dato -> STRING .

    PDER            reduce using rule 145 (tipo_dato -> STRING .)
    COMA            reduce using rule 145 (tipo_dato -> STRING .)
    LLAVEIZQ        reduce using rule 145 (tipo_dato -> STRING .)
    CORDER          reduce using rule 145 (tipo_dato -> STRING .)
    PTCOMA          reduce using rule 145 (tipo_dato -> STRING .)
    IGUAL           reduce using rule 145 (tipo_dato -> STRING .)
    MAYOR           reduce using rule 145 (tipo_dato -> STRING .)


state 27

    (146) tipo_dato -> USIZE .

    PDER            reduce using rule 146 (tipo_dato -> USIZE .)
    COMA            reduce using rule 146 (tipo_dato -> USIZE .)
    LLAVEIZQ        reduce using rule 146 (tipo_dato -> USIZE .)
    CORDER          reduce using rule 146 (tipo_dato -> USIZE .)
    PTCOMA          reduce using rule 146 (tipo_dato -> USIZE .)
    IGUAL           reduce using rule 146 (tipo_dato -> USIZE .)
    MAYOR           reduce using rule 146 (tipo_dato -> USIZE .)


state 28

    (6) funcion -> FN ID PIZQ PDER FLECHA tipo_dato . bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 62

state 29

    (147) str -> Y . STR

    STR             shift and go to state 61


state 30

    (18) bloque -> LLAVEIZQ LLAVEDER .

    FN              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEDER        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PRINTLN         reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    LET             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    ID              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    IF              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    RETURN          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    LOOP            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    BREAK           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    WHILE           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CONTINUE        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    FOR             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MAS             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOS           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MULTIPLICACION  reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    DIVISION        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MODULO          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYOR           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOR           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYORIGUAL      reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MENORIGUAL      reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    IGUALIGUAL      reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    DIFERENTE       reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    AND             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    OR              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PUNTO           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    AS              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEIZQ        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PTCOMA          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PDER            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    COMA            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CORDER          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    I64             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    F64             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PIZQ            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    NOT             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    ENTERO          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    DECIMAL         reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CARACTER        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CADENA          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    TRUE            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    FALSE           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CORIZQ          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    Y               reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    VEC             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    VECM            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    ELSE            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)


state 31

    (19) bloque -> LLAVEIZQ instrucciones . LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (60) loop -> . LOOP bloque
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    LLAVEDER        shift and go to state 63
    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    ID              shift and go to state 49
    IF              shift and go to state 50
    RETURN          shift and go to state 51
    LOOP            shift and go to state 52
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    instruccion                    shift and go to state 64
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 32

    (21) instrucciones -> instruccion .

    LLAVEDER        reduce using rule 21 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 21 (instrucciones -> instruccion .)
    LET             reduce using rule 21 (instrucciones -> instruccion .)
    ID              reduce using rule 21 (instrucciones -> instruccion .)
    IF              reduce using rule 21 (instrucciones -> instruccion .)
    RETURN          reduce using rule 21 (instrucciones -> instruccion .)
    LOOP            reduce using rule 21 (instrucciones -> instruccion .)
    BREAK           reduce using rule 21 (instrucciones -> instruccion .)
    WHILE           reduce using rule 21 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 21 (instrucciones -> instruccion .)
    FOR             reduce using rule 21 (instrucciones -> instruccion .)
    MENOS           reduce using rule 21 (instrucciones -> instruccion .)
    I64             reduce using rule 21 (instrucciones -> instruccion .)
    F64             reduce using rule 21 (instrucciones -> instruccion .)
    PIZQ            reduce using rule 21 (instrucciones -> instruccion .)
    NOT             reduce using rule 21 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 21 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 21 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 21 (instrucciones -> instruccion .)
    CADENA          reduce using rule 21 (instrucciones -> instruccion .)
    TRUE            reduce using rule 21 (instrucciones -> instruccion .)
    FALSE           reduce using rule 21 (instrucciones -> instruccion .)
    CORIZQ          reduce using rule 21 (instrucciones -> instruccion .)
    Y               reduce using rule 21 (instrucciones -> instruccion .)
    VEC             reduce using rule 21 (instrucciones -> instruccion .)
    VECM            reduce using rule 21 (instrucciones -> instruccion .)


state 33

    (22) instruccion -> print . PTCOMA

    PTCOMA          shift and go to state 65


state 34

    (23) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 66


state 35

    (24) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 67


state 36

    (25) instruccion -> if_i .

    LLAVEDER        reduce using rule 25 (instruccion -> if_i .)
    PRINTLN         reduce using rule 25 (instruccion -> if_i .)
    LET             reduce using rule 25 (instruccion -> if_i .)
    ID              reduce using rule 25 (instruccion -> if_i .)
    IF              reduce using rule 25 (instruccion -> if_i .)
    RETURN          reduce using rule 25 (instruccion -> if_i .)
    LOOP            reduce using rule 25 (instruccion -> if_i .)
    BREAK           reduce using rule 25 (instruccion -> if_i .)
    WHILE           reduce using rule 25 (instruccion -> if_i .)
    CONTINUE        reduce using rule 25 (instruccion -> if_i .)
    FOR             reduce using rule 25 (instruccion -> if_i .)
    MENOS           reduce using rule 25 (instruccion -> if_i .)
    I64             reduce using rule 25 (instruccion -> if_i .)
    F64             reduce using rule 25 (instruccion -> if_i .)
    PIZQ            reduce using rule 25 (instruccion -> if_i .)
    NOT             reduce using rule 25 (instruccion -> if_i .)
    ENTERO          reduce using rule 25 (instruccion -> if_i .)
    DECIMAL         reduce using rule 25 (instruccion -> if_i .)
    CARACTER        reduce using rule 25 (instruccion -> if_i .)
    CADENA          reduce using rule 25 (instruccion -> if_i .)
    TRUE            reduce using rule 25 (instruccion -> if_i .)
    FALSE           reduce using rule 25 (instruccion -> if_i .)
    CORIZQ          reduce using rule 25 (instruccion -> if_i .)
    Y               reduce using rule 25 (instruccion -> if_i .)
    VEC             reduce using rule 25 (instruccion -> if_i .)
    VECM            reduce using rule 25 (instruccion -> if_i .)


state 37

    (26) instruccion -> llamadaF . PTCOMA

    PTCOMA          shift and go to state 68


state 38

    (27) instruccion -> return . PTCOMA

    PTCOMA          shift and go to state 69


state 39

    (28) instruccion -> loop .

    LLAVEDER        reduce using rule 28 (instruccion -> loop .)
    PRINTLN         reduce using rule 28 (instruccion -> loop .)
    LET             reduce using rule 28 (instruccion -> loop .)
    ID              reduce using rule 28 (instruccion -> loop .)
    IF              reduce using rule 28 (instruccion -> loop .)
    RETURN          reduce using rule 28 (instruccion -> loop .)
    LOOP            reduce using rule 28 (instruccion -> loop .)
    BREAK           reduce using rule 28 (instruccion -> loop .)
    WHILE           reduce using rule 28 (instruccion -> loop .)
    CONTINUE        reduce using rule 28 (instruccion -> loop .)
    FOR             reduce using rule 28 (instruccion -> loop .)
    MENOS           reduce using rule 28 (instruccion -> loop .)
    I64             reduce using rule 28 (instruccion -> loop .)
    F64             reduce using rule 28 (instruccion -> loop .)
    PIZQ            reduce using rule 28 (instruccion -> loop .)
    NOT             reduce using rule 28 (instruccion -> loop .)
    ENTERO          reduce using rule 28 (instruccion -> loop .)
    DECIMAL         reduce using rule 28 (instruccion -> loop .)
    CARACTER        reduce using rule 28 (instruccion -> loop .)
    CADENA          reduce using rule 28 (instruccion -> loop .)
    TRUE            reduce using rule 28 (instruccion -> loop .)
    FALSE           reduce using rule 28 (instruccion -> loop .)
    CORIZQ          reduce using rule 28 (instruccion -> loop .)
    Y               reduce using rule 28 (instruccion -> loop .)
    VEC             reduce using rule 28 (instruccion -> loop .)
    VECM            reduce using rule 28 (instruccion -> loop .)


state 40

    (29) instruccion -> break . PTCOMA

    PTCOMA          shift and go to state 70


state 41

    (30) instruccion -> while .

    LLAVEDER        reduce using rule 30 (instruccion -> while .)
    PRINTLN         reduce using rule 30 (instruccion -> while .)
    LET             reduce using rule 30 (instruccion -> while .)
    ID              reduce using rule 30 (instruccion -> while .)
    IF              reduce using rule 30 (instruccion -> while .)
    RETURN          reduce using rule 30 (instruccion -> while .)
    LOOP            reduce using rule 30 (instruccion -> while .)
    BREAK           reduce using rule 30 (instruccion -> while .)
    WHILE           reduce using rule 30 (instruccion -> while .)
    CONTINUE        reduce using rule 30 (instruccion -> while .)
    FOR             reduce using rule 30 (instruccion -> while .)
    MENOS           reduce using rule 30 (instruccion -> while .)
    I64             reduce using rule 30 (instruccion -> while .)
    F64             reduce using rule 30 (instruccion -> while .)
    PIZQ            reduce using rule 30 (instruccion -> while .)
    NOT             reduce using rule 30 (instruccion -> while .)
    ENTERO          reduce using rule 30 (instruccion -> while .)
    DECIMAL         reduce using rule 30 (instruccion -> while .)
    CARACTER        reduce using rule 30 (instruccion -> while .)
    CADENA          reduce using rule 30 (instruccion -> while .)
    TRUE            reduce using rule 30 (instruccion -> while .)
    FALSE           reduce using rule 30 (instruccion -> while .)
    CORIZQ          reduce using rule 30 (instruccion -> while .)
    Y               reduce using rule 30 (instruccion -> while .)
    VEC             reduce using rule 30 (instruccion -> while .)
    VECM            reduce using rule 30 (instruccion -> while .)


state 42

    (31) instruccion -> continue . PTCOMA

    PTCOMA          shift and go to state 71


state 43

    (32) instruccion -> for .

    LLAVEDER        reduce using rule 32 (instruccion -> for .)
    PRINTLN         reduce using rule 32 (instruccion -> for .)
    LET             reduce using rule 32 (instruccion -> for .)
    ID              reduce using rule 32 (instruccion -> for .)
    IF              reduce using rule 32 (instruccion -> for .)
    RETURN          reduce using rule 32 (instruccion -> for .)
    LOOP            reduce using rule 32 (instruccion -> for .)
    BREAK           reduce using rule 32 (instruccion -> for .)
    WHILE           reduce using rule 32 (instruccion -> for .)
    CONTINUE        reduce using rule 32 (instruccion -> for .)
    FOR             reduce using rule 32 (instruccion -> for .)
    MENOS           reduce using rule 32 (instruccion -> for .)
    I64             reduce using rule 32 (instruccion -> for .)
    F64             reduce using rule 32 (instruccion -> for .)
    PIZQ            reduce using rule 32 (instruccion -> for .)
    NOT             reduce using rule 32 (instruccion -> for .)
    ENTERO          reduce using rule 32 (instruccion -> for .)
    DECIMAL         reduce using rule 32 (instruccion -> for .)
    CARACTER        reduce using rule 32 (instruccion -> for .)
    CADENA          reduce using rule 32 (instruccion -> for .)
    TRUE            reduce using rule 32 (instruccion -> for .)
    FALSE           reduce using rule 32 (instruccion -> for .)
    CORIZQ          reduce using rule 32 (instruccion -> for .)
    Y               reduce using rule 32 (instruccion -> for .)
    VEC             reduce using rule 32 (instruccion -> for .)
    VECM            reduce using rule 32 (instruccion -> for .)


state 44

    (33) instruccion -> insert . PTCOMA

    PTCOMA          shift and go to state 72


state 45

    (34) instruccion -> asignacionA . PTCOMA

    PTCOMA          shift and go to state 73


state 46

    (35) instruccion -> push . PTCOMA

    PTCOMA          shift and go to state 74


state 47

    (36) print -> PRINTLN . NOT PIZQ lista_expresiones PDER

    NOT             shift and go to state 75


state 48

    (40) declaracion -> LET . MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> LET . ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> LET . MUT ID IGUAL expresion
    (43) declaracion -> LET . ID IGUAL expresion
    (44) declaracion -> LET . MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> LET . ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> LET . MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> LET . ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion

    MUT             shift and go to state 76
    ID              shift and go to state 77


state 49

    (52) asignacion -> ID . IGUAL expresion
    (14) llamadaF -> ID . PIZQ PDER
    (15) llamadaF -> ID . PIZQ lista_expresiones PDER
    (69) insert -> ID . PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> ID . ubicaciones IGUAL expresion
    (68) push -> ID . PUNTO PUSH PIZQ expresion PDER
    (115) ubicaciones -> . ubicaciones ubicacion
    (116) ubicaciones -> . ubicacion
    (117) ubicacion -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 78
    PIZQ            shift and go to state 79
    PUNTO           shift and go to state 80
    CORIZQ          shift and go to state 83

    ubicaciones                    shift and go to state 81
    ubicacion                      shift and go to state 82

state 50

    (53) if_i -> IF . expresion bloque
    (54) if_i -> IF . expresion bloque ELSE bloque
    (55) if_i -> IF . expresion bloque listaelseI
    (56) if_i -> IF . expresion bloque listaelseI ELSE bloque
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 85
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 51

    (37) return -> RETURN .
    (38) return -> RETURN . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 37 (return -> RETURN .)
    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 118
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 52

    (60) loop -> LOOP . bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 119

state 53

    (61) break -> BREAK .
    (62) break -> BREAK . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 61 (break -> BREAK .)
    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 120
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 54

    (63) while -> WHILE . expresion bloque
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 121
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 55

    (64) continue -> CONTINUE .

    PTCOMA          reduce using rule 64 (continue -> CONTINUE .)


state 56

    (65) for -> FOR . ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> FOR . ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> FOR . ID IN expresion bloque

    ID              shift and go to state 122


state 57

    (7) funcion -> FN ID PIZQ parametros PDER bloque .

    FN              reduce using rule 7 (funcion -> FN ID PIZQ parametros PDER bloque .)
    $end            reduce using rule 7 (funcion -> FN ID PIZQ parametros PDER bloque .)


state 58

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA . tipo_dato bloque
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (147) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 123
    str                            shift and go to state 25

state 59

    (9) parametros -> parametros COMA parametro .

    PDER            reduce using rule 9 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 9 (parametros -> parametros COMA parametro .)


state 60

    (12) parametro -> ID DOBLEPT Y MUT . dimensiones
    (13) parametro -> ID DOBLEPT Y MUT . VECM MENOR tipo_dato MAYOR
    (48) dimensiones -> . CORIZQ tipo_dato CORDER
    (49) dimensiones -> . CORIZQ tipo_dato PTCOMA expresion CORDER
    (50) dimensiones -> . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (51) dimensiones -> . CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER

    VECM            shift and go to state 125
    CORIZQ          shift and go to state 126

    dimensiones                    shift and go to state 124

state 61

    (147) str -> Y STR .

    PDER            reduce using rule 147 (str -> Y STR .)
    COMA            reduce using rule 147 (str -> Y STR .)
    LLAVEIZQ        reduce using rule 147 (str -> Y STR .)
    CORDER          reduce using rule 147 (str -> Y STR .)
    PTCOMA          reduce using rule 147 (str -> Y STR .)
    IGUAL           reduce using rule 147 (str -> Y STR .)
    MAYOR           reduce using rule 147 (str -> Y STR .)


state 62

    (6) funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .

    FN              reduce using rule 6 (funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .)
    $end            reduce using rule 6 (funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .)


state 63

    (19) bloque -> LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MULTIPLICACION  reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIVISION        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYOR           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOR           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIGUAL      reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENORIGUAL      reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IGUALIGUAL      reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIFERENTE       reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PUNTO           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AS              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PDER            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PIZQ            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    Y               reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    VECM            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)


state 64

    (20) instrucciones -> instrucciones instruccion .

    LLAVEDER        reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    I64             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    F64             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    PIZQ            reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CORIZQ          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    Y               reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    VEC             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    VECM            reduce using rule 20 (instrucciones -> instrucciones instruccion .)


state 65

    (22) instruccion -> print PTCOMA .

    LLAVEDER        reduce using rule 22 (instruccion -> print PTCOMA .)
    PRINTLN         reduce using rule 22 (instruccion -> print PTCOMA .)
    LET             reduce using rule 22 (instruccion -> print PTCOMA .)
    ID              reduce using rule 22 (instruccion -> print PTCOMA .)
    IF              reduce using rule 22 (instruccion -> print PTCOMA .)
    RETURN          reduce using rule 22 (instruccion -> print PTCOMA .)
    LOOP            reduce using rule 22 (instruccion -> print PTCOMA .)
    BREAK           reduce using rule 22 (instruccion -> print PTCOMA .)
    WHILE           reduce using rule 22 (instruccion -> print PTCOMA .)
    CONTINUE        reduce using rule 22 (instruccion -> print PTCOMA .)
    FOR             reduce using rule 22 (instruccion -> print PTCOMA .)
    MENOS           reduce using rule 22 (instruccion -> print PTCOMA .)
    I64             reduce using rule 22 (instruccion -> print PTCOMA .)
    F64             reduce using rule 22 (instruccion -> print PTCOMA .)
    PIZQ            reduce using rule 22 (instruccion -> print PTCOMA .)
    NOT             reduce using rule 22 (instruccion -> print PTCOMA .)
    ENTERO          reduce using rule 22 (instruccion -> print PTCOMA .)
    DECIMAL         reduce using rule 22 (instruccion -> print PTCOMA .)
    CARACTER        reduce using rule 22 (instruccion -> print PTCOMA .)
    CADENA          reduce using rule 22 (instruccion -> print PTCOMA .)
    TRUE            reduce using rule 22 (instruccion -> print PTCOMA .)
    FALSE           reduce using rule 22 (instruccion -> print PTCOMA .)
    CORIZQ          reduce using rule 22 (instruccion -> print PTCOMA .)
    Y               reduce using rule 22 (instruccion -> print PTCOMA .)
    VEC             reduce using rule 22 (instruccion -> print PTCOMA .)
    VECM            reduce using rule 22 (instruccion -> print PTCOMA .)


state 66

    (23) instruccion -> declaracion PTCOMA .

    LLAVEDER        reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    PRINTLN         reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    LET             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    IF              reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    RETURN          reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    LOOP            reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    BREAK           reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    WHILE           reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    CONTINUE        reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    FOR             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    MENOS           reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    I64             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    F64             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    PIZQ            reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    NOT             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    ENTERO          reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    DECIMAL         reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    CARACTER        reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    CADENA          reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    TRUE            reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    FALSE           reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    CORIZQ          reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    Y               reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    VEC             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    VECM            reduce using rule 23 (instruccion -> declaracion PTCOMA .)


state 67

    (24) instruccion -> asignacion PTCOMA .

    LLAVEDER        reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    PRINTLN         reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    LET             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    RETURN          reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    LOOP            reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    MENOS           reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    I64             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    F64             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    PIZQ            reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    NOT             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    ENTERO          reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    DECIMAL         reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    CARACTER        reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    CADENA          reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    TRUE            reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    FALSE           reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    CORIZQ          reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    Y               reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    VEC             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    VECM            reduce using rule 24 (instruccion -> asignacion PTCOMA .)


state 68

    (26) instruccion -> llamadaF PTCOMA .

    LLAVEDER        reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    PRINTLN         reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    LET             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    ID              reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    IF              reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    RETURN          reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    LOOP            reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    BREAK           reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    WHILE           reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    CONTINUE        reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    FOR             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    MENOS           reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    I64             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    F64             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    PIZQ            reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    NOT             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    ENTERO          reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    DECIMAL         reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    CARACTER        reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    CADENA          reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    TRUE            reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    FALSE           reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    CORIZQ          reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    Y               reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    VEC             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    VECM            reduce using rule 26 (instruccion -> llamadaF PTCOMA .)


state 69

    (27) instruccion -> return PTCOMA .

    LLAVEDER        reduce using rule 27 (instruccion -> return PTCOMA .)
    PRINTLN         reduce using rule 27 (instruccion -> return PTCOMA .)
    LET             reduce using rule 27 (instruccion -> return PTCOMA .)
    ID              reduce using rule 27 (instruccion -> return PTCOMA .)
    IF              reduce using rule 27 (instruccion -> return PTCOMA .)
    RETURN          reduce using rule 27 (instruccion -> return PTCOMA .)
    LOOP            reduce using rule 27 (instruccion -> return PTCOMA .)
    BREAK           reduce using rule 27 (instruccion -> return PTCOMA .)
    WHILE           reduce using rule 27 (instruccion -> return PTCOMA .)
    CONTINUE        reduce using rule 27 (instruccion -> return PTCOMA .)
    FOR             reduce using rule 27 (instruccion -> return PTCOMA .)
    MENOS           reduce using rule 27 (instruccion -> return PTCOMA .)
    I64             reduce using rule 27 (instruccion -> return PTCOMA .)
    F64             reduce using rule 27 (instruccion -> return PTCOMA .)
    PIZQ            reduce using rule 27 (instruccion -> return PTCOMA .)
    NOT             reduce using rule 27 (instruccion -> return PTCOMA .)
    ENTERO          reduce using rule 27 (instruccion -> return PTCOMA .)
    DECIMAL         reduce using rule 27 (instruccion -> return PTCOMA .)
    CARACTER        reduce using rule 27 (instruccion -> return PTCOMA .)
    CADENA          reduce using rule 27 (instruccion -> return PTCOMA .)
    TRUE            reduce using rule 27 (instruccion -> return PTCOMA .)
    FALSE           reduce using rule 27 (instruccion -> return PTCOMA .)
    CORIZQ          reduce using rule 27 (instruccion -> return PTCOMA .)
    Y               reduce using rule 27 (instruccion -> return PTCOMA .)
    VEC             reduce using rule 27 (instruccion -> return PTCOMA .)
    VECM            reduce using rule 27 (instruccion -> return PTCOMA .)


state 70

    (29) instruccion -> break PTCOMA .

    LLAVEDER        reduce using rule 29 (instruccion -> break PTCOMA .)
    PRINTLN         reduce using rule 29 (instruccion -> break PTCOMA .)
    LET             reduce using rule 29 (instruccion -> break PTCOMA .)
    ID              reduce using rule 29 (instruccion -> break PTCOMA .)
    IF              reduce using rule 29 (instruccion -> break PTCOMA .)
    RETURN          reduce using rule 29 (instruccion -> break PTCOMA .)
    LOOP            reduce using rule 29 (instruccion -> break PTCOMA .)
    BREAK           reduce using rule 29 (instruccion -> break PTCOMA .)
    WHILE           reduce using rule 29 (instruccion -> break PTCOMA .)
    CONTINUE        reduce using rule 29 (instruccion -> break PTCOMA .)
    FOR             reduce using rule 29 (instruccion -> break PTCOMA .)
    MENOS           reduce using rule 29 (instruccion -> break PTCOMA .)
    I64             reduce using rule 29 (instruccion -> break PTCOMA .)
    F64             reduce using rule 29 (instruccion -> break PTCOMA .)
    PIZQ            reduce using rule 29 (instruccion -> break PTCOMA .)
    NOT             reduce using rule 29 (instruccion -> break PTCOMA .)
    ENTERO          reduce using rule 29 (instruccion -> break PTCOMA .)
    DECIMAL         reduce using rule 29 (instruccion -> break PTCOMA .)
    CARACTER        reduce using rule 29 (instruccion -> break PTCOMA .)
    CADENA          reduce using rule 29 (instruccion -> break PTCOMA .)
    TRUE            reduce using rule 29 (instruccion -> break PTCOMA .)
    FALSE           reduce using rule 29 (instruccion -> break PTCOMA .)
    CORIZQ          reduce using rule 29 (instruccion -> break PTCOMA .)
    Y               reduce using rule 29 (instruccion -> break PTCOMA .)
    VEC             reduce using rule 29 (instruccion -> break PTCOMA .)
    VECM            reduce using rule 29 (instruccion -> break PTCOMA .)


state 71

    (31) instruccion -> continue PTCOMA .

    LLAVEDER        reduce using rule 31 (instruccion -> continue PTCOMA .)
    PRINTLN         reduce using rule 31 (instruccion -> continue PTCOMA .)
    LET             reduce using rule 31 (instruccion -> continue PTCOMA .)
    ID              reduce using rule 31 (instruccion -> continue PTCOMA .)
    IF              reduce using rule 31 (instruccion -> continue PTCOMA .)
    RETURN          reduce using rule 31 (instruccion -> continue PTCOMA .)
    LOOP            reduce using rule 31 (instruccion -> continue PTCOMA .)
    BREAK           reduce using rule 31 (instruccion -> continue PTCOMA .)
    WHILE           reduce using rule 31 (instruccion -> continue PTCOMA .)
    CONTINUE        reduce using rule 31 (instruccion -> continue PTCOMA .)
    FOR             reduce using rule 31 (instruccion -> continue PTCOMA .)
    MENOS           reduce using rule 31 (instruccion -> continue PTCOMA .)
    I64             reduce using rule 31 (instruccion -> continue PTCOMA .)
    F64             reduce using rule 31 (instruccion -> continue PTCOMA .)
    PIZQ            reduce using rule 31 (instruccion -> continue PTCOMA .)
    NOT             reduce using rule 31 (instruccion -> continue PTCOMA .)
    ENTERO          reduce using rule 31 (instruccion -> continue PTCOMA .)
    DECIMAL         reduce using rule 31 (instruccion -> continue PTCOMA .)
    CARACTER        reduce using rule 31 (instruccion -> continue PTCOMA .)
    CADENA          reduce using rule 31 (instruccion -> continue PTCOMA .)
    TRUE            reduce using rule 31 (instruccion -> continue PTCOMA .)
    FALSE           reduce using rule 31 (instruccion -> continue PTCOMA .)
    CORIZQ          reduce using rule 31 (instruccion -> continue PTCOMA .)
    Y               reduce using rule 31 (instruccion -> continue PTCOMA .)
    VEC             reduce using rule 31 (instruccion -> continue PTCOMA .)
    VECM            reduce using rule 31 (instruccion -> continue PTCOMA .)


state 72

    (33) instruccion -> insert PTCOMA .

    LLAVEDER        reduce using rule 33 (instruccion -> insert PTCOMA .)
    PRINTLN         reduce using rule 33 (instruccion -> insert PTCOMA .)
    LET             reduce using rule 33 (instruccion -> insert PTCOMA .)
    ID              reduce using rule 33 (instruccion -> insert PTCOMA .)
    IF              reduce using rule 33 (instruccion -> insert PTCOMA .)
    RETURN          reduce using rule 33 (instruccion -> insert PTCOMA .)
    LOOP            reduce using rule 33 (instruccion -> insert PTCOMA .)
    BREAK           reduce using rule 33 (instruccion -> insert PTCOMA .)
    WHILE           reduce using rule 33 (instruccion -> insert PTCOMA .)
    CONTINUE        reduce using rule 33 (instruccion -> insert PTCOMA .)
    FOR             reduce using rule 33 (instruccion -> insert PTCOMA .)
    MENOS           reduce using rule 33 (instruccion -> insert PTCOMA .)
    I64             reduce using rule 33 (instruccion -> insert PTCOMA .)
    F64             reduce using rule 33 (instruccion -> insert PTCOMA .)
    PIZQ            reduce using rule 33 (instruccion -> insert PTCOMA .)
    NOT             reduce using rule 33 (instruccion -> insert PTCOMA .)
    ENTERO          reduce using rule 33 (instruccion -> insert PTCOMA .)
    DECIMAL         reduce using rule 33 (instruccion -> insert PTCOMA .)
    CARACTER        reduce using rule 33 (instruccion -> insert PTCOMA .)
    CADENA          reduce using rule 33 (instruccion -> insert PTCOMA .)
    TRUE            reduce using rule 33 (instruccion -> insert PTCOMA .)
    FALSE           reduce using rule 33 (instruccion -> insert PTCOMA .)
    CORIZQ          reduce using rule 33 (instruccion -> insert PTCOMA .)
    Y               reduce using rule 33 (instruccion -> insert PTCOMA .)
    VEC             reduce using rule 33 (instruccion -> insert PTCOMA .)
    VECM            reduce using rule 33 (instruccion -> insert PTCOMA .)


state 73

    (34) instruccion -> asignacionA PTCOMA .

    LLAVEDER        reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    PRINTLN         reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    LET             reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    ID              reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    IF              reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    RETURN          reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    LOOP            reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    BREAK           reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    WHILE           reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    CONTINUE        reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    FOR             reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    MENOS           reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    I64             reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    F64             reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    PIZQ            reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    NOT             reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    ENTERO          reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    DECIMAL         reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    CARACTER        reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    CADENA          reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    TRUE            reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    FALSE           reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    CORIZQ          reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    Y               reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    VEC             reduce using rule 34 (instruccion -> asignacionA PTCOMA .)
    VECM            reduce using rule 34 (instruccion -> asignacionA PTCOMA .)


state 74

    (35) instruccion -> push PTCOMA .

    LLAVEDER        reduce using rule 35 (instruccion -> push PTCOMA .)
    PRINTLN         reduce using rule 35 (instruccion -> push PTCOMA .)
    LET             reduce using rule 35 (instruccion -> push PTCOMA .)
    ID              reduce using rule 35 (instruccion -> push PTCOMA .)
    IF              reduce using rule 35 (instruccion -> push PTCOMA .)
    RETURN          reduce using rule 35 (instruccion -> push PTCOMA .)
    LOOP            reduce using rule 35 (instruccion -> push PTCOMA .)
    BREAK           reduce using rule 35 (instruccion -> push PTCOMA .)
    WHILE           reduce using rule 35 (instruccion -> push PTCOMA .)
    CONTINUE        reduce using rule 35 (instruccion -> push PTCOMA .)
    FOR             reduce using rule 35 (instruccion -> push PTCOMA .)
    MENOS           reduce using rule 35 (instruccion -> push PTCOMA .)
    I64             reduce using rule 35 (instruccion -> push PTCOMA .)
    F64             reduce using rule 35 (instruccion -> push PTCOMA .)
    PIZQ            reduce using rule 35 (instruccion -> push PTCOMA .)
    NOT             reduce using rule 35 (instruccion -> push PTCOMA .)
    ENTERO          reduce using rule 35 (instruccion -> push PTCOMA .)
    DECIMAL         reduce using rule 35 (instruccion -> push PTCOMA .)
    CARACTER        reduce using rule 35 (instruccion -> push PTCOMA .)
    CADENA          reduce using rule 35 (instruccion -> push PTCOMA .)
    TRUE            reduce using rule 35 (instruccion -> push PTCOMA .)
    FALSE           reduce using rule 35 (instruccion -> push PTCOMA .)
    CORIZQ          reduce using rule 35 (instruccion -> push PTCOMA .)
    Y               reduce using rule 35 (instruccion -> push PTCOMA .)
    VEC             reduce using rule 35 (instruccion -> push PTCOMA .)
    VECM            reduce using rule 35 (instruccion -> push PTCOMA .)


state 75

    (36) print -> PRINTLN NOT . PIZQ lista_expresiones PDER

    PIZQ            shift and go to state 127


state 76

    (40) declaracion -> LET MUT . ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> LET MUT . ID IGUAL expresion
    (44) declaracion -> LET MUT . ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> LET MUT . ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion

    ID              shift and go to state 128


state 77

    (41) declaracion -> LET ID . DOBLEPT tipo_dato IGUAL expresion
    (43) declaracion -> LET ID . IGUAL expresion
    (45) declaracion -> LET ID . DOBLEPT dimensiones IGUAL expresion
    (47) declaracion -> LET ID . DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion

    DOBLEPT         shift and go to state 129
    IGUAL           shift and go to state 130


state 78

    (52) asignacion -> ID IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 131
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 79

    (14) llamadaF -> ID PIZQ . PDER
    (15) llamadaF -> ID PIZQ . lista_expresiones PDER
    (16) lista_expresiones -> . lista_expresiones COMA expresion
    (17) lista_expresiones -> . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 132
    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    lista_expresiones              shift and go to state 133
    expresion                      shift and go to state 134
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 80

    (69) insert -> ID PUNTO . INSERT PIZQ expresion COMA expresion PDER
    (68) push -> ID PUNTO . PUSH PIZQ expresion PDER

    INSERT          shift and go to state 135
    PUSH            shift and go to state 136


state 81

    (39) asignacionA -> ID ubicaciones . IGUAL expresion
    (115) ubicaciones -> ubicaciones . ubicacion
    (117) ubicacion -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 137
    CORIZQ          shift and go to state 83

    ubicacion                      shift and go to state 138

state 82

    (116) ubicaciones -> ubicacion .

    IGUAL           reduce using rule 116 (ubicaciones -> ubicacion .)
    CORIZQ          reduce using rule 116 (ubicaciones -> ubicacion .)
    MAS             reduce using rule 116 (ubicaciones -> ubicacion .)
    MENOS           reduce using rule 116 (ubicaciones -> ubicacion .)
    MULTIPLICACION  reduce using rule 116 (ubicaciones -> ubicacion .)
    DIVISION        reduce using rule 116 (ubicaciones -> ubicacion .)
    MODULO          reduce using rule 116 (ubicaciones -> ubicacion .)
    MAYOR           reduce using rule 116 (ubicaciones -> ubicacion .)
    MENOR           reduce using rule 116 (ubicaciones -> ubicacion .)
    MAYORIGUAL      reduce using rule 116 (ubicaciones -> ubicacion .)
    MENORIGUAL      reduce using rule 116 (ubicaciones -> ubicacion .)
    IGUALIGUAL      reduce using rule 116 (ubicaciones -> ubicacion .)
    DIFERENTE       reduce using rule 116 (ubicaciones -> ubicacion .)
    AND             reduce using rule 116 (ubicaciones -> ubicacion .)
    OR              reduce using rule 116 (ubicaciones -> ubicacion .)
    PUNTO           reduce using rule 116 (ubicaciones -> ubicacion .)
    AS              reduce using rule 116 (ubicaciones -> ubicacion .)
    LLAVEIZQ        reduce using rule 116 (ubicaciones -> ubicacion .)
    PTCOMA          reduce using rule 116 (ubicaciones -> ubicacion .)
    PDER            reduce using rule 116 (ubicaciones -> ubicacion .)
    COMA            reduce using rule 116 (ubicaciones -> ubicacion .)
    CORDER          reduce using rule 116 (ubicaciones -> ubicacion .)
    LLAVEDER        reduce using rule 116 (ubicaciones -> ubicacion .)


state 83

    (117) ubicacion -> CORIZQ . expresion CORDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 139
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 84

    (126) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 140
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 85

    (53) if_i -> IF expresion . bloque
    (54) if_i -> IF expresion . bloque ELSE bloque
    (55) if_i -> IF expresion . bloque listaelseI
    (56) if_i -> IF expresion . bloque listaelseI ELSE bloque
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 141

state 86

    (70) expresion -> MENOS . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 157
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 87

    (76) expresion -> I64 . DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 158


state 88

    (78) expresion -> PIZQ . expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 159
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 89

    (77) expresion -> F64 . DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 160


state 90

    (87) expresion -> NOT . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 161
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 91

    (88) expresion -> tostring .

    MAS             reduce using rule 88 (expresion -> tostring .)
    MENOS           reduce using rule 88 (expresion -> tostring .)
    MULTIPLICACION  reduce using rule 88 (expresion -> tostring .)
    DIVISION        reduce using rule 88 (expresion -> tostring .)
    MODULO          reduce using rule 88 (expresion -> tostring .)
    MAYOR           reduce using rule 88 (expresion -> tostring .)
    MENOR           reduce using rule 88 (expresion -> tostring .)
    MAYORIGUAL      reduce using rule 88 (expresion -> tostring .)
    MENORIGUAL      reduce using rule 88 (expresion -> tostring .)
    IGUALIGUAL      reduce using rule 88 (expresion -> tostring .)
    DIFERENTE       reduce using rule 88 (expresion -> tostring .)
    AND             reduce using rule 88 (expresion -> tostring .)
    OR              reduce using rule 88 (expresion -> tostring .)
    PUNTO           reduce using rule 88 (expresion -> tostring .)
    AS              reduce using rule 88 (expresion -> tostring .)
    LLAVEIZQ        reduce using rule 88 (expresion -> tostring .)
    PTCOMA          reduce using rule 88 (expresion -> tostring .)
    PDER            reduce using rule 88 (expresion -> tostring .)
    COMA            reduce using rule 88 (expresion -> tostring .)
    CORDER          reduce using rule 88 (expresion -> tostring .)
    LLAVEDER        reduce using rule 88 (expresion -> tostring .)


state 92

    (89) expresion -> as .

    MAS             reduce using rule 89 (expresion -> as .)
    MENOS           reduce using rule 89 (expresion -> as .)
    MULTIPLICACION  reduce using rule 89 (expresion -> as .)
    DIVISION        reduce using rule 89 (expresion -> as .)
    MODULO          reduce using rule 89 (expresion -> as .)
    MAYOR           reduce using rule 89 (expresion -> as .)
    MENOR           reduce using rule 89 (expresion -> as .)
    MAYORIGUAL      reduce using rule 89 (expresion -> as .)
    MENORIGUAL      reduce using rule 89 (expresion -> as .)
    IGUALIGUAL      reduce using rule 89 (expresion -> as .)
    DIFERENTE       reduce using rule 89 (expresion -> as .)
    AND             reduce using rule 89 (expresion -> as .)
    OR              reduce using rule 89 (expresion -> as .)
    PUNTO           reduce using rule 89 (expresion -> as .)
    AS              reduce using rule 89 (expresion -> as .)
    LLAVEIZQ        reduce using rule 89 (expresion -> as .)
    PTCOMA          reduce using rule 89 (expresion -> as .)
    PDER            reduce using rule 89 (expresion -> as .)
    COMA            reduce using rule 89 (expresion -> as .)
    CORDER          reduce using rule 89 (expresion -> as .)
    LLAVEDER        reduce using rule 89 (expresion -> as .)


state 93

    (90) expresion -> abs .

    MAS             reduce using rule 90 (expresion -> abs .)
    MENOS           reduce using rule 90 (expresion -> abs .)
    MULTIPLICACION  reduce using rule 90 (expresion -> abs .)
    DIVISION        reduce using rule 90 (expresion -> abs .)
    MODULO          reduce using rule 90 (expresion -> abs .)
    MAYOR           reduce using rule 90 (expresion -> abs .)
    MENOR           reduce using rule 90 (expresion -> abs .)
    MAYORIGUAL      reduce using rule 90 (expresion -> abs .)
    MENORIGUAL      reduce using rule 90 (expresion -> abs .)
    IGUALIGUAL      reduce using rule 90 (expresion -> abs .)
    DIFERENTE       reduce using rule 90 (expresion -> abs .)
    AND             reduce using rule 90 (expresion -> abs .)
    OR              reduce using rule 90 (expresion -> abs .)
    PUNTO           reduce using rule 90 (expresion -> abs .)
    AS              reduce using rule 90 (expresion -> abs .)
    LLAVEIZQ        reduce using rule 90 (expresion -> abs .)
    PTCOMA          reduce using rule 90 (expresion -> abs .)
    PDER            reduce using rule 90 (expresion -> abs .)
    COMA            reduce using rule 90 (expresion -> abs .)
    CORDER          reduce using rule 90 (expresion -> abs .)
    LLAVEDER        reduce using rule 90 (expresion -> abs .)


state 94

    (91) expresion -> sqrt .

    MAS             reduce using rule 91 (expresion -> sqrt .)
    MENOS           reduce using rule 91 (expresion -> sqrt .)
    MULTIPLICACION  reduce using rule 91 (expresion -> sqrt .)
    DIVISION        reduce using rule 91 (expresion -> sqrt .)
    MODULO          reduce using rule 91 (expresion -> sqrt .)
    MAYOR           reduce using rule 91 (expresion -> sqrt .)
    MENOR           reduce using rule 91 (expresion -> sqrt .)
    MAYORIGUAL      reduce using rule 91 (expresion -> sqrt .)
    MENORIGUAL      reduce using rule 91 (expresion -> sqrt .)
    IGUALIGUAL      reduce using rule 91 (expresion -> sqrt .)
    DIFERENTE       reduce using rule 91 (expresion -> sqrt .)
    AND             reduce using rule 91 (expresion -> sqrt .)
    OR              reduce using rule 91 (expresion -> sqrt .)
    PUNTO           reduce using rule 91 (expresion -> sqrt .)
    AS              reduce using rule 91 (expresion -> sqrt .)
    LLAVEIZQ        reduce using rule 91 (expresion -> sqrt .)
    PTCOMA          reduce using rule 91 (expresion -> sqrt .)
    PDER            reduce using rule 91 (expresion -> sqrt .)
    COMA            reduce using rule 91 (expresion -> sqrt .)
    CORDER          reduce using rule 91 (expresion -> sqrt .)
    LLAVEDER        reduce using rule 91 (expresion -> sqrt .)


state 95

    (92) expresion -> if_e .

    MAS             reduce using rule 92 (expresion -> if_e .)
    MENOS           reduce using rule 92 (expresion -> if_e .)
    MULTIPLICACION  reduce using rule 92 (expresion -> if_e .)
    DIVISION        reduce using rule 92 (expresion -> if_e .)
    MODULO          reduce using rule 92 (expresion -> if_e .)
    MAYOR           reduce using rule 92 (expresion -> if_e .)
    MENOR           reduce using rule 92 (expresion -> if_e .)
    MAYORIGUAL      reduce using rule 92 (expresion -> if_e .)
    MENORIGUAL      reduce using rule 92 (expresion -> if_e .)
    IGUALIGUAL      reduce using rule 92 (expresion -> if_e .)
    DIFERENTE       reduce using rule 92 (expresion -> if_e .)
    AND             reduce using rule 92 (expresion -> if_e .)
    OR              reduce using rule 92 (expresion -> if_e .)
    PUNTO           reduce using rule 92 (expresion -> if_e .)
    AS              reduce using rule 92 (expresion -> if_e .)
    LLAVEIZQ        reduce using rule 92 (expresion -> if_e .)
    PTCOMA          reduce using rule 92 (expresion -> if_e .)
    PDER            reduce using rule 92 (expresion -> if_e .)
    COMA            reduce using rule 92 (expresion -> if_e .)
    CORDER          reduce using rule 92 (expresion -> if_e .)
    LLAVEDER        reduce using rule 92 (expresion -> if_e .)


state 96

    (93) expresion -> llamadaF .

    MAS             reduce using rule 93 (expresion -> llamadaF .)
    MENOS           reduce using rule 93 (expresion -> llamadaF .)
    MULTIPLICACION  reduce using rule 93 (expresion -> llamadaF .)
    DIVISION        reduce using rule 93 (expresion -> llamadaF .)
    MODULO          reduce using rule 93 (expresion -> llamadaF .)
    MAYOR           reduce using rule 93 (expresion -> llamadaF .)
    MENOR           reduce using rule 93 (expresion -> llamadaF .)
    MAYORIGUAL      reduce using rule 93 (expresion -> llamadaF .)
    MENORIGUAL      reduce using rule 93 (expresion -> llamadaF .)
    IGUALIGUAL      reduce using rule 93 (expresion -> llamadaF .)
    DIFERENTE       reduce using rule 93 (expresion -> llamadaF .)
    AND             reduce using rule 93 (expresion -> llamadaF .)
    OR              reduce using rule 93 (expresion -> llamadaF .)
    PUNTO           reduce using rule 93 (expresion -> llamadaF .)
    AS              reduce using rule 93 (expresion -> llamadaF .)
    LLAVEIZQ        reduce using rule 93 (expresion -> llamadaF .)
    PTCOMA          reduce using rule 93 (expresion -> llamadaF .)
    PDER            reduce using rule 93 (expresion -> llamadaF .)
    COMA            reduce using rule 93 (expresion -> llamadaF .)
    CORDER          reduce using rule 93 (expresion -> llamadaF .)
    LLAVEDER        reduce using rule 93 (expresion -> llamadaF .)


state 97

    (94) expresion -> loop .

    MAS             reduce using rule 94 (expresion -> loop .)
    MENOS           reduce using rule 94 (expresion -> loop .)
    MULTIPLICACION  reduce using rule 94 (expresion -> loop .)
    DIVISION        reduce using rule 94 (expresion -> loop .)
    MODULO          reduce using rule 94 (expresion -> loop .)
    MAYOR           reduce using rule 94 (expresion -> loop .)
    MENOR           reduce using rule 94 (expresion -> loop .)
    MAYORIGUAL      reduce using rule 94 (expresion -> loop .)
    MENORIGUAL      reduce using rule 94 (expresion -> loop .)
    IGUALIGUAL      reduce using rule 94 (expresion -> loop .)
    DIFERENTE       reduce using rule 94 (expresion -> loop .)
    AND             reduce using rule 94 (expresion -> loop .)
    OR              reduce using rule 94 (expresion -> loop .)
    PUNTO           reduce using rule 94 (expresion -> loop .)
    AS              reduce using rule 94 (expresion -> loop .)
    LLAVEIZQ        reduce using rule 94 (expresion -> loop .)
    PTCOMA          reduce using rule 94 (expresion -> loop .)
    PDER            reduce using rule 94 (expresion -> loop .)
    COMA            reduce using rule 94 (expresion -> loop .)
    CORDER          reduce using rule 94 (expresion -> loop .)
    LLAVEDER        reduce using rule 94 (expresion -> loop .)


state 98

    (95) expresion -> arraycontenido .

    MAS             reduce using rule 95 (expresion -> arraycontenido .)
    MENOS           reduce using rule 95 (expresion -> arraycontenido .)
    MULTIPLICACION  reduce using rule 95 (expresion -> arraycontenido .)
    DIVISION        reduce using rule 95 (expresion -> arraycontenido .)
    MODULO          reduce using rule 95 (expresion -> arraycontenido .)
    MAYOR           reduce using rule 95 (expresion -> arraycontenido .)
    MENOR           reduce using rule 95 (expresion -> arraycontenido .)
    MAYORIGUAL      reduce using rule 95 (expresion -> arraycontenido .)
    MENORIGUAL      reduce using rule 95 (expresion -> arraycontenido .)
    IGUALIGUAL      reduce using rule 95 (expresion -> arraycontenido .)
    DIFERENTE       reduce using rule 95 (expresion -> arraycontenido .)
    AND             reduce using rule 95 (expresion -> arraycontenido .)
    OR              reduce using rule 95 (expresion -> arraycontenido .)
    PUNTO           reduce using rule 95 (expresion -> arraycontenido .)
    AS              reduce using rule 95 (expresion -> arraycontenido .)
    LLAVEIZQ        reduce using rule 95 (expresion -> arraycontenido .)
    PTCOMA          reduce using rule 95 (expresion -> arraycontenido .)
    PDER            reduce using rule 95 (expresion -> arraycontenido .)
    COMA            reduce using rule 95 (expresion -> arraycontenido .)
    CORDER          reduce using rule 95 (expresion -> arraycontenido .)
    LLAVEDER        reduce using rule 95 (expresion -> arraycontenido .)


state 99

    (96) expresion -> accesoarray .

    MAS             reduce using rule 96 (expresion -> accesoarray .)
    MENOS           reduce using rule 96 (expresion -> accesoarray .)
    MULTIPLICACION  reduce using rule 96 (expresion -> accesoarray .)
    DIVISION        reduce using rule 96 (expresion -> accesoarray .)
    MODULO          reduce using rule 96 (expresion -> accesoarray .)
    MAYOR           reduce using rule 96 (expresion -> accesoarray .)
    MENOR           reduce using rule 96 (expresion -> accesoarray .)
    MAYORIGUAL      reduce using rule 96 (expresion -> accesoarray .)
    MENORIGUAL      reduce using rule 96 (expresion -> accesoarray .)
    IGUALIGUAL      reduce using rule 96 (expresion -> accesoarray .)
    DIFERENTE       reduce using rule 96 (expresion -> accesoarray .)
    AND             reduce using rule 96 (expresion -> accesoarray .)
    OR              reduce using rule 96 (expresion -> accesoarray .)
    PUNTO           reduce using rule 96 (expresion -> accesoarray .)
    AS              reduce using rule 96 (expresion -> accesoarray .)
    LLAVEIZQ        reduce using rule 96 (expresion -> accesoarray .)
    PTCOMA          reduce using rule 96 (expresion -> accesoarray .)
    PDER            reduce using rule 96 (expresion -> accesoarray .)
    COMA            reduce using rule 96 (expresion -> accesoarray .)
    CORDER          reduce using rule 96 (expresion -> accesoarray .)
    LLAVEDER        reduce using rule 96 (expresion -> accesoarray .)


state 100

    (97) expresion -> referencia .

    MAS             reduce using rule 97 (expresion -> referencia .)
    MENOS           reduce using rule 97 (expresion -> referencia .)
    MULTIPLICACION  reduce using rule 97 (expresion -> referencia .)
    DIVISION        reduce using rule 97 (expresion -> referencia .)
    MODULO          reduce using rule 97 (expresion -> referencia .)
    MAYOR           reduce using rule 97 (expresion -> referencia .)
    MENOR           reduce using rule 97 (expresion -> referencia .)
    MAYORIGUAL      reduce using rule 97 (expresion -> referencia .)
    MENORIGUAL      reduce using rule 97 (expresion -> referencia .)
    IGUALIGUAL      reduce using rule 97 (expresion -> referencia .)
    DIFERENTE       reduce using rule 97 (expresion -> referencia .)
    AND             reduce using rule 97 (expresion -> referencia .)
    OR              reduce using rule 97 (expresion -> referencia .)
    PUNTO           reduce using rule 97 (expresion -> referencia .)
    AS              reduce using rule 97 (expresion -> referencia .)
    LLAVEIZQ        reduce using rule 97 (expresion -> referencia .)
    PTCOMA          reduce using rule 97 (expresion -> referencia .)
    PDER            reduce using rule 97 (expresion -> referencia .)
    COMA            reduce using rule 97 (expresion -> referencia .)
    CORDER          reduce using rule 97 (expresion -> referencia .)
    LLAVEDER        reduce using rule 97 (expresion -> referencia .)


state 101

    (98) expresion -> len .

    MAS             reduce using rule 98 (expresion -> len .)
    MENOS           reduce using rule 98 (expresion -> len .)
    MULTIPLICACION  reduce using rule 98 (expresion -> len .)
    DIVISION        reduce using rule 98 (expresion -> len .)
    MODULO          reduce using rule 98 (expresion -> len .)
    MAYOR           reduce using rule 98 (expresion -> len .)
    MENOR           reduce using rule 98 (expresion -> len .)
    MAYORIGUAL      reduce using rule 98 (expresion -> len .)
    MENORIGUAL      reduce using rule 98 (expresion -> len .)
    IGUALIGUAL      reduce using rule 98 (expresion -> len .)
    DIFERENTE       reduce using rule 98 (expresion -> len .)
    AND             reduce using rule 98 (expresion -> len .)
    OR              reduce using rule 98 (expresion -> len .)
    PUNTO           reduce using rule 98 (expresion -> len .)
    AS              reduce using rule 98 (expresion -> len .)
    LLAVEIZQ        reduce using rule 98 (expresion -> len .)
    PTCOMA          reduce using rule 98 (expresion -> len .)
    PDER            reduce using rule 98 (expresion -> len .)
    COMA            reduce using rule 98 (expresion -> len .)
    CORDER          reduce using rule 98 (expresion -> len .)
    LLAVEDER        reduce using rule 98 (expresion -> len .)


state 102

    (99) expresion -> capacity .

    MAS             reduce using rule 99 (expresion -> capacity .)
    MENOS           reduce using rule 99 (expresion -> capacity .)
    MULTIPLICACION  reduce using rule 99 (expresion -> capacity .)
    DIVISION        reduce using rule 99 (expresion -> capacity .)
    MODULO          reduce using rule 99 (expresion -> capacity .)
    MAYOR           reduce using rule 99 (expresion -> capacity .)
    MENOR           reduce using rule 99 (expresion -> capacity .)
    MAYORIGUAL      reduce using rule 99 (expresion -> capacity .)
    MENORIGUAL      reduce using rule 99 (expresion -> capacity .)
    IGUALIGUAL      reduce using rule 99 (expresion -> capacity .)
    DIFERENTE       reduce using rule 99 (expresion -> capacity .)
    AND             reduce using rule 99 (expresion -> capacity .)
    OR              reduce using rule 99 (expresion -> capacity .)
    PUNTO           reduce using rule 99 (expresion -> capacity .)
    AS              reduce using rule 99 (expresion -> capacity .)
    LLAVEIZQ        reduce using rule 99 (expresion -> capacity .)
    PTCOMA          reduce using rule 99 (expresion -> capacity .)
    PDER            reduce using rule 99 (expresion -> capacity .)
    COMA            reduce using rule 99 (expresion -> capacity .)
    CORDER          reduce using rule 99 (expresion -> capacity .)
    LLAVEDER        reduce using rule 99 (expresion -> capacity .)


state 103

    (100) expresion -> contains .

    MAS             reduce using rule 100 (expresion -> contains .)
    MENOS           reduce using rule 100 (expresion -> contains .)
    MULTIPLICACION  reduce using rule 100 (expresion -> contains .)
    DIVISION        reduce using rule 100 (expresion -> contains .)
    MODULO          reduce using rule 100 (expresion -> contains .)
    MAYOR           reduce using rule 100 (expresion -> contains .)
    MENOR           reduce using rule 100 (expresion -> contains .)
    MAYORIGUAL      reduce using rule 100 (expresion -> contains .)
    MENORIGUAL      reduce using rule 100 (expresion -> contains .)
    IGUALIGUAL      reduce using rule 100 (expresion -> contains .)
    DIFERENTE       reduce using rule 100 (expresion -> contains .)
    AND             reduce using rule 100 (expresion -> contains .)
    OR              reduce using rule 100 (expresion -> contains .)
    PUNTO           reduce using rule 100 (expresion -> contains .)
    AS              reduce using rule 100 (expresion -> contains .)
    LLAVEIZQ        reduce using rule 100 (expresion -> contains .)
    PTCOMA          reduce using rule 100 (expresion -> contains .)
    PDER            reduce using rule 100 (expresion -> contains .)
    COMA            reduce using rule 100 (expresion -> contains .)
    CORDER          reduce using rule 100 (expresion -> contains .)
    LLAVEDER        reduce using rule 100 (expresion -> contains .)


state 104

    (101) expresion -> clone .

    MAS             reduce using rule 101 (expresion -> clone .)
    MENOS           reduce using rule 101 (expresion -> clone .)
    MULTIPLICACION  reduce using rule 101 (expresion -> clone .)
    DIVISION        reduce using rule 101 (expresion -> clone .)
    MODULO          reduce using rule 101 (expresion -> clone .)
    MAYOR           reduce using rule 101 (expresion -> clone .)
    MENOR           reduce using rule 101 (expresion -> clone .)
    MAYORIGUAL      reduce using rule 101 (expresion -> clone .)
    MENORIGUAL      reduce using rule 101 (expresion -> clone .)
    IGUALIGUAL      reduce using rule 101 (expresion -> clone .)
    DIFERENTE       reduce using rule 101 (expresion -> clone .)
    AND             reduce using rule 101 (expresion -> clone .)
    OR              reduce using rule 101 (expresion -> clone .)
    PUNTO           reduce using rule 101 (expresion -> clone .)
    AS              reduce using rule 101 (expresion -> clone .)
    LLAVEIZQ        reduce using rule 101 (expresion -> clone .)
    PTCOMA          reduce using rule 101 (expresion -> clone .)
    PDER            reduce using rule 101 (expresion -> clone .)
    COMA            reduce using rule 101 (expresion -> clone .)
    CORDER          reduce using rule 101 (expresion -> clone .)
    LLAVEDER        reduce using rule 101 (expresion -> clone .)


state 105

    (102) expresion -> vector .

    MAS             reduce using rule 102 (expresion -> vector .)
    MENOS           reduce using rule 102 (expresion -> vector .)
    MULTIPLICACION  reduce using rule 102 (expresion -> vector .)
    DIVISION        reduce using rule 102 (expresion -> vector .)
    MODULO          reduce using rule 102 (expresion -> vector .)
    MAYOR           reduce using rule 102 (expresion -> vector .)
    MENOR           reduce using rule 102 (expresion -> vector .)
    MAYORIGUAL      reduce using rule 102 (expresion -> vector .)
    MENORIGUAL      reduce using rule 102 (expresion -> vector .)
    IGUALIGUAL      reduce using rule 102 (expresion -> vector .)
    DIFERENTE       reduce using rule 102 (expresion -> vector .)
    AND             reduce using rule 102 (expresion -> vector .)
    OR              reduce using rule 102 (expresion -> vector .)
    PUNTO           reduce using rule 102 (expresion -> vector .)
    AS              reduce using rule 102 (expresion -> vector .)
    LLAVEIZQ        reduce using rule 102 (expresion -> vector .)
    PTCOMA          reduce using rule 102 (expresion -> vector .)
    PDER            reduce using rule 102 (expresion -> vector .)
    COMA            reduce using rule 102 (expresion -> vector .)
    CORDER          reduce using rule 102 (expresion -> vector .)
    LLAVEDER        reduce using rule 102 (expresion -> vector .)


state 106

    (103) expresion -> remove .

    MAS             reduce using rule 103 (expresion -> remove .)
    MENOS           reduce using rule 103 (expresion -> remove .)
    MULTIPLICACION  reduce using rule 103 (expresion -> remove .)
    DIVISION        reduce using rule 103 (expresion -> remove .)
    MODULO          reduce using rule 103 (expresion -> remove .)
    MAYOR           reduce using rule 103 (expresion -> remove .)
    MENOR           reduce using rule 103 (expresion -> remove .)
    MAYORIGUAL      reduce using rule 103 (expresion -> remove .)
    MENORIGUAL      reduce using rule 103 (expresion -> remove .)
    IGUALIGUAL      reduce using rule 103 (expresion -> remove .)
    DIFERENTE       reduce using rule 103 (expresion -> remove .)
    AND             reduce using rule 103 (expresion -> remove .)
    OR              reduce using rule 103 (expresion -> remove .)
    PUNTO           reduce using rule 103 (expresion -> remove .)
    AS              reduce using rule 103 (expresion -> remove .)
    LLAVEIZQ        reduce using rule 103 (expresion -> remove .)
    PTCOMA          reduce using rule 103 (expresion -> remove .)
    PDER            reduce using rule 103 (expresion -> remove .)
    COMA            reduce using rule 103 (expresion -> remove .)
    CORDER          reduce using rule 103 (expresion -> remove .)
    LLAVEDER        reduce using rule 103 (expresion -> remove .)


state 107

    (133) expresion -> ENTERO .

    MAS             reduce using rule 133 (expresion -> ENTERO .)
    MENOS           reduce using rule 133 (expresion -> ENTERO .)
    MULTIPLICACION  reduce using rule 133 (expresion -> ENTERO .)
    DIVISION        reduce using rule 133 (expresion -> ENTERO .)
    MODULO          reduce using rule 133 (expresion -> ENTERO .)
    MAYOR           reduce using rule 133 (expresion -> ENTERO .)
    MENOR           reduce using rule 133 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 133 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 133 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 133 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 133 (expresion -> ENTERO .)
    AND             reduce using rule 133 (expresion -> ENTERO .)
    OR              reduce using rule 133 (expresion -> ENTERO .)
    PUNTO           reduce using rule 133 (expresion -> ENTERO .)
    AS              reduce using rule 133 (expresion -> ENTERO .)
    LLAVEIZQ        reduce using rule 133 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 133 (expresion -> ENTERO .)
    PDER            reduce using rule 133 (expresion -> ENTERO .)
    COMA            reduce using rule 133 (expresion -> ENTERO .)
    CORDER          reduce using rule 133 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 133 (expresion -> ENTERO .)


state 108

    (134) expresion -> DECIMAL .

    MAS             reduce using rule 134 (expresion -> DECIMAL .)
    MENOS           reduce using rule 134 (expresion -> DECIMAL .)
    MULTIPLICACION  reduce using rule 134 (expresion -> DECIMAL .)
    DIVISION        reduce using rule 134 (expresion -> DECIMAL .)
    MODULO          reduce using rule 134 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 134 (expresion -> DECIMAL .)
    MENOR           reduce using rule 134 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 134 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 134 (expresion -> DECIMAL .)
    IGUALIGUAL      reduce using rule 134 (expresion -> DECIMAL .)
    DIFERENTE       reduce using rule 134 (expresion -> DECIMAL .)
    AND             reduce using rule 134 (expresion -> DECIMAL .)
    OR              reduce using rule 134 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 134 (expresion -> DECIMAL .)
    AS              reduce using rule 134 (expresion -> DECIMAL .)
    LLAVEIZQ        reduce using rule 134 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 134 (expresion -> DECIMAL .)
    PDER            reduce using rule 134 (expresion -> DECIMAL .)
    COMA            reduce using rule 134 (expresion -> DECIMAL .)
    CORDER          reduce using rule 134 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 134 (expresion -> DECIMAL .)


state 109

    (135) expresion -> ID .
    (14) llamadaF -> ID . PIZQ PDER
    (15) llamadaF -> ID . PIZQ lista_expresiones PDER
    (114) accesoarray -> ID . ubicaciones
    (115) ubicaciones -> . ubicaciones ubicacion
    (116) ubicaciones -> . ubicacion
    (117) ubicacion -> . CORIZQ expresion CORDER

    MAS             reduce using rule 135 (expresion -> ID .)
    MENOS           reduce using rule 135 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 135 (expresion -> ID .)
    DIVISION        reduce using rule 135 (expresion -> ID .)
    MODULO          reduce using rule 135 (expresion -> ID .)
    MAYOR           reduce using rule 135 (expresion -> ID .)
    MENOR           reduce using rule 135 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 135 (expresion -> ID .)
    MENORIGUAL      reduce using rule 135 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 135 (expresion -> ID .)
    DIFERENTE       reduce using rule 135 (expresion -> ID .)
    AND             reduce using rule 135 (expresion -> ID .)
    OR              reduce using rule 135 (expresion -> ID .)
    PUNTO           reduce using rule 135 (expresion -> ID .)
    AS              reduce using rule 135 (expresion -> ID .)
    LLAVEIZQ        reduce using rule 135 (expresion -> ID .)
    PTCOMA          reduce using rule 135 (expresion -> ID .)
    PDER            reduce using rule 135 (expresion -> ID .)
    COMA            reduce using rule 135 (expresion -> ID .)
    CORDER          reduce using rule 135 (expresion -> ID .)
    LLAVEDER        reduce using rule 135 (expresion -> ID .)
    PIZQ            shift and go to state 79
    CORIZQ          shift and go to state 83

    ubicaciones                    shift and go to state 162
    ubicacion                      shift and go to state 82

state 110

    (136) expresion -> CARACTER .

    MAS             reduce using rule 136 (expresion -> CARACTER .)
    MENOS           reduce using rule 136 (expresion -> CARACTER .)
    MULTIPLICACION  reduce using rule 136 (expresion -> CARACTER .)
    DIVISION        reduce using rule 136 (expresion -> CARACTER .)
    MODULO          reduce using rule 136 (expresion -> CARACTER .)
    MAYOR           reduce using rule 136 (expresion -> CARACTER .)
    MENOR           reduce using rule 136 (expresion -> CARACTER .)
    MAYORIGUAL      reduce using rule 136 (expresion -> CARACTER .)
    MENORIGUAL      reduce using rule 136 (expresion -> CARACTER .)
    IGUALIGUAL      reduce using rule 136 (expresion -> CARACTER .)
    DIFERENTE       reduce using rule 136 (expresion -> CARACTER .)
    AND             reduce using rule 136 (expresion -> CARACTER .)
    OR              reduce using rule 136 (expresion -> CARACTER .)
    PUNTO           reduce using rule 136 (expresion -> CARACTER .)
    AS              reduce using rule 136 (expresion -> CARACTER .)
    LLAVEIZQ        reduce using rule 136 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 136 (expresion -> CARACTER .)
    PDER            reduce using rule 136 (expresion -> CARACTER .)
    COMA            reduce using rule 136 (expresion -> CARACTER .)
    CORDER          reduce using rule 136 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 136 (expresion -> CARACTER .)


state 111

    (137) expresion -> CADENA .

    MAS             reduce using rule 137 (expresion -> CADENA .)
    MENOS           reduce using rule 137 (expresion -> CADENA .)
    MULTIPLICACION  reduce using rule 137 (expresion -> CADENA .)
    DIVISION        reduce using rule 137 (expresion -> CADENA .)
    MODULO          reduce using rule 137 (expresion -> CADENA .)
    MAYOR           reduce using rule 137 (expresion -> CADENA .)
    MENOR           reduce using rule 137 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 137 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 137 (expresion -> CADENA .)
    IGUALIGUAL      reduce using rule 137 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 137 (expresion -> CADENA .)
    AND             reduce using rule 137 (expresion -> CADENA .)
    OR              reduce using rule 137 (expresion -> CADENA .)
    PUNTO           reduce using rule 137 (expresion -> CADENA .)
    AS              reduce using rule 137 (expresion -> CADENA .)
    LLAVEIZQ        reduce using rule 137 (expresion -> CADENA .)
    PTCOMA          reduce using rule 137 (expresion -> CADENA .)
    PDER            reduce using rule 137 (expresion -> CADENA .)
    COMA            reduce using rule 137 (expresion -> CADENA .)
    CORDER          reduce using rule 137 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 137 (expresion -> CADENA .)


state 112

    (138) expresion -> TRUE .

    MAS             reduce using rule 138 (expresion -> TRUE .)
    MENOS           reduce using rule 138 (expresion -> TRUE .)
    MULTIPLICACION  reduce using rule 138 (expresion -> TRUE .)
    DIVISION        reduce using rule 138 (expresion -> TRUE .)
    MODULO          reduce using rule 138 (expresion -> TRUE .)
    MAYOR           reduce using rule 138 (expresion -> TRUE .)
    MENOR           reduce using rule 138 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 138 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 138 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 138 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 138 (expresion -> TRUE .)
    AND             reduce using rule 138 (expresion -> TRUE .)
    OR              reduce using rule 138 (expresion -> TRUE .)
    PUNTO           reduce using rule 138 (expresion -> TRUE .)
    AS              reduce using rule 138 (expresion -> TRUE .)
    LLAVEIZQ        reduce using rule 138 (expresion -> TRUE .)
    PTCOMA          reduce using rule 138 (expresion -> TRUE .)
    PDER            reduce using rule 138 (expresion -> TRUE .)
    COMA            reduce using rule 138 (expresion -> TRUE .)
    CORDER          reduce using rule 138 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 138 (expresion -> TRUE .)


state 113

    (139) expresion -> FALSE .

    MAS             reduce using rule 139 (expresion -> FALSE .)
    MENOS           reduce using rule 139 (expresion -> FALSE .)
    MULTIPLICACION  reduce using rule 139 (expresion -> FALSE .)
    DIVISION        reduce using rule 139 (expresion -> FALSE .)
    MODULO          reduce using rule 139 (expresion -> FALSE .)
    MAYOR           reduce using rule 139 (expresion -> FALSE .)
    MENOR           reduce using rule 139 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 139 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 139 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 139 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 139 (expresion -> FALSE .)
    AND             reduce using rule 139 (expresion -> FALSE .)
    OR              reduce using rule 139 (expresion -> FALSE .)
    PUNTO           reduce using rule 139 (expresion -> FALSE .)
    AS              reduce using rule 139 (expresion -> FALSE .)
    LLAVEIZQ        reduce using rule 139 (expresion -> FALSE .)
    PTCOMA          reduce using rule 139 (expresion -> FALSE .)
    PDER            reduce using rule 139 (expresion -> FALSE .)
    COMA            reduce using rule 139 (expresion -> FALSE .)
    CORDER          reduce using rule 139 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 139 (expresion -> FALSE .)


state 114

    (118) arraycontenido -> CORIZQ . lista_expresiones CORDER
    (16) lista_expresiones -> . lista_expresiones COMA expresion
    (17) lista_expresiones -> . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    lista_expresiones              shift and go to state 163
    expresion                      shift and go to state 134
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 115

    (113) referencia -> Y . MUT ID

    MUT             shift and go to state 164


state 116

    (106) vector -> VEC . NOT CORIZQ lista_expresiones CORDER
    (107) vector -> VEC . NOT CORIZQ expresion PTCOMA expresion CORDER

    NOT             shift and go to state 165


state 117

    (108) vector -> VECM . DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> VECM . DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER

    DOBLEPT         shift and go to state 166


state 118

    (38) return -> RETURN expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 38 (return -> RETURN expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 119

    (60) loop -> LOOP bloque .

    LLAVEDER        reduce using rule 60 (loop -> LOOP bloque .)
    PRINTLN         reduce using rule 60 (loop -> LOOP bloque .)
    LET             reduce using rule 60 (loop -> LOOP bloque .)
    ID              reduce using rule 60 (loop -> LOOP bloque .)
    IF              reduce using rule 60 (loop -> LOOP bloque .)
    RETURN          reduce using rule 60 (loop -> LOOP bloque .)
    LOOP            reduce using rule 60 (loop -> LOOP bloque .)
    BREAK           reduce using rule 60 (loop -> LOOP bloque .)
    WHILE           reduce using rule 60 (loop -> LOOP bloque .)
    CONTINUE        reduce using rule 60 (loop -> LOOP bloque .)
    FOR             reduce using rule 60 (loop -> LOOP bloque .)
    MAS             reduce using rule 60 (loop -> LOOP bloque .)
    MENOS           reduce using rule 60 (loop -> LOOP bloque .)
    MULTIPLICACION  reduce using rule 60 (loop -> LOOP bloque .)
    DIVISION        reduce using rule 60 (loop -> LOOP bloque .)
    MODULO          reduce using rule 60 (loop -> LOOP bloque .)
    MAYOR           reduce using rule 60 (loop -> LOOP bloque .)
    MENOR           reduce using rule 60 (loop -> LOOP bloque .)
    MAYORIGUAL      reduce using rule 60 (loop -> LOOP bloque .)
    MENORIGUAL      reduce using rule 60 (loop -> LOOP bloque .)
    IGUALIGUAL      reduce using rule 60 (loop -> LOOP bloque .)
    DIFERENTE       reduce using rule 60 (loop -> LOOP bloque .)
    AND             reduce using rule 60 (loop -> LOOP bloque .)
    OR              reduce using rule 60 (loop -> LOOP bloque .)
    PUNTO           reduce using rule 60 (loop -> LOOP bloque .)
    AS              reduce using rule 60 (loop -> LOOP bloque .)
    LLAVEIZQ        reduce using rule 60 (loop -> LOOP bloque .)
    PTCOMA          reduce using rule 60 (loop -> LOOP bloque .)
    PDER            reduce using rule 60 (loop -> LOOP bloque .)
    COMA            reduce using rule 60 (loop -> LOOP bloque .)
    CORDER          reduce using rule 60 (loop -> LOOP bloque .)
    I64             reduce using rule 60 (loop -> LOOP bloque .)
    F64             reduce using rule 60 (loop -> LOOP bloque .)
    PIZQ            reduce using rule 60 (loop -> LOOP bloque .)
    NOT             reduce using rule 60 (loop -> LOOP bloque .)
    ENTERO          reduce using rule 60 (loop -> LOOP bloque .)
    DECIMAL         reduce using rule 60 (loop -> LOOP bloque .)
    CARACTER        reduce using rule 60 (loop -> LOOP bloque .)
    CADENA          reduce using rule 60 (loop -> LOOP bloque .)
    TRUE            reduce using rule 60 (loop -> LOOP bloque .)
    FALSE           reduce using rule 60 (loop -> LOOP bloque .)
    CORIZQ          reduce using rule 60 (loop -> LOOP bloque .)
    Y               reduce using rule 60 (loop -> LOOP bloque .)
    VEC             reduce using rule 60 (loop -> LOOP bloque .)
    VECM            reduce using rule 60 (loop -> LOOP bloque .)


state 120

    (62) break -> BREAK expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 62 (break -> BREAK expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 121

    (63) while -> WHILE expresion . bloque
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 167

state 122

    (65) for -> FOR ID . IN expresion PUNTO PUNTO expresion bloque
    (66) for -> FOR ID . IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> FOR ID . IN expresion bloque

    IN              shift and go to state 168


state 123

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato . bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 169

state 124

    (12) parametro -> ID DOBLEPT Y MUT dimensiones .

    PDER            reduce using rule 12 (parametro -> ID DOBLEPT Y MUT dimensiones .)
    COMA            reduce using rule 12 (parametro -> ID DOBLEPT Y MUT dimensiones .)


state 125

    (13) parametro -> ID DOBLEPT Y MUT VECM . MENOR tipo_dato MAYOR

    MENOR           shift and go to state 170


state 126

    (48) dimensiones -> CORIZQ . tipo_dato CORDER
    (49) dimensiones -> CORIZQ . tipo_dato PTCOMA expresion CORDER
    (50) dimensiones -> CORIZQ . CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (51) dimensiones -> CORIZQ . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (147) str -> . Y STR

    CORIZQ          shift and go to state 171
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 172
    str                            shift and go to state 25

state 127

    (36) print -> PRINTLN NOT PIZQ . lista_expresiones PDER
    (16) lista_expresiones -> . lista_expresiones COMA expresion
    (17) lista_expresiones -> . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    lista_expresiones              shift and go to state 173
    expresion                      shift and go to state 134
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 128

    (40) declaracion -> LET MUT ID . DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> LET MUT ID . IGUAL expresion
    (44) declaracion -> LET MUT ID . DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> LET MUT ID . DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion

    DOBLEPT         shift and go to state 174
    IGUAL           shift and go to state 175


state 129

    (41) declaracion -> LET ID DOBLEPT . tipo_dato IGUAL expresion
    (45) declaracion -> LET ID DOBLEPT . dimensiones IGUAL expresion
    (47) declaracion -> LET ID DOBLEPT . VECM MENOR tipo_dato MAYOR IGUAL expresion
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (48) dimensiones -> . CORIZQ tipo_dato CORDER
    (49) dimensiones -> . CORIZQ tipo_dato PTCOMA expresion CORDER
    (50) dimensiones -> . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (51) dimensiones -> . CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (147) str -> . Y STR

    VECM            shift and go to state 178
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    CORIZQ          shift and go to state 126
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 176
    dimensiones                    shift and go to state 177
    str                            shift and go to state 25

state 130

    (43) declaracion -> LET ID IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 179
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 131

    (52) asignacion -> ID IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 52 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 132

    (14) llamadaF -> ID PIZQ PDER .

    PTCOMA          reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MAS             reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MENOS           reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MULTIPLICACION  reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    DIVISION        reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MODULO          reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MAYOR           reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MENOR           reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    IGUALIGUAL      reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    DIFERENTE       reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    AND             reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    OR              reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    PUNTO           reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    AS              reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    LLAVEIZQ        reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    PDER            reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    COMA            reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    CORDER          reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    LLAVEDER        reduce using rule 14 (llamadaF -> ID PIZQ PDER .)


state 133

    (15) llamadaF -> ID PIZQ lista_expresiones . PDER
    (16) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 180
    COMA            shift and go to state 181


state 134

    (17) lista_expresiones -> expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            reduce using rule 17 (lista_expresiones -> expresion .)
    COMA            reduce using rule 17 (lista_expresiones -> expresion .)
    CORDER          reduce using rule 17 (lista_expresiones -> expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 135

    (69) insert -> ID PUNTO INSERT . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 182


state 136

    (68) push -> ID PUNTO PUSH . PIZQ expresion PDER

    PIZQ            shift and go to state 183


state 137

    (39) asignacionA -> ID ubicaciones IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 184
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 138

    (115) ubicaciones -> ubicaciones ubicacion .

    IGUAL           reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    CORIZQ          reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    MAS             reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    MENOS           reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    MULTIPLICACION  reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    DIVISION        reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    MODULO          reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    MAYOR           reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    MENOR           reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    MAYORIGUAL      reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    MENORIGUAL      reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    IGUALIGUAL      reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    DIFERENTE       reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    AND             reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    OR              reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    PUNTO           reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    AS              reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    LLAVEIZQ        reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    PTCOMA          reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    PDER            reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    COMA            reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    CORDER          reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)
    LLAVEDER        reduce using rule 115 (ubicaciones -> ubicaciones ubicacion .)


state 139

    (117) ubicacion -> CORIZQ expresion . CORDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 185
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 140

    (126) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEIZQ        shift and go to state 186
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 141

    (53) if_i -> IF expresion bloque .
    (54) if_i -> IF expresion bloque . ELSE bloque
    (55) if_i -> IF expresion bloque . listaelseI
    (56) if_i -> IF expresion bloque . listaelseI ELSE bloque
    (57) listaelseI -> . listaelseI elseifI
    (58) listaelseI -> . elseifI
    (59) elseifI -> . ELSE IF expresion bloque

    LLAVEDER        reduce using rule 53 (if_i -> IF expresion bloque .)
    PRINTLN         reduce using rule 53 (if_i -> IF expresion bloque .)
    LET             reduce using rule 53 (if_i -> IF expresion bloque .)
    ID              reduce using rule 53 (if_i -> IF expresion bloque .)
    IF              reduce using rule 53 (if_i -> IF expresion bloque .)
    RETURN          reduce using rule 53 (if_i -> IF expresion bloque .)
    LOOP            reduce using rule 53 (if_i -> IF expresion bloque .)
    BREAK           reduce using rule 53 (if_i -> IF expresion bloque .)
    WHILE           reduce using rule 53 (if_i -> IF expresion bloque .)
    CONTINUE        reduce using rule 53 (if_i -> IF expresion bloque .)
    FOR             reduce using rule 53 (if_i -> IF expresion bloque .)
    MENOS           reduce using rule 53 (if_i -> IF expresion bloque .)
    I64             reduce using rule 53 (if_i -> IF expresion bloque .)
    F64             reduce using rule 53 (if_i -> IF expresion bloque .)
    PIZQ            reduce using rule 53 (if_i -> IF expresion bloque .)
    NOT             reduce using rule 53 (if_i -> IF expresion bloque .)
    ENTERO          reduce using rule 53 (if_i -> IF expresion bloque .)
    DECIMAL         reduce using rule 53 (if_i -> IF expresion bloque .)
    CARACTER        reduce using rule 53 (if_i -> IF expresion bloque .)
    CADENA          reduce using rule 53 (if_i -> IF expresion bloque .)
    TRUE            reduce using rule 53 (if_i -> IF expresion bloque .)
    FALSE           reduce using rule 53 (if_i -> IF expresion bloque .)
    CORIZQ          reduce using rule 53 (if_i -> IF expresion bloque .)
    Y               reduce using rule 53 (if_i -> IF expresion bloque .)
    VEC             reduce using rule 53 (if_i -> IF expresion bloque .)
    VECM            reduce using rule 53 (if_i -> IF expresion bloque .)
    ELSE            shift and go to state 187

    listaelseI                     shift and go to state 188
    elseifI                        shift and go to state 189

state 142

    (71) expresion -> expresion MAS . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 190
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 143

    (72) expresion -> expresion MENOS . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 191
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 144

    (73) expresion -> expresion MULTIPLICACION . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 192
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 145

    (74) expresion -> expresion DIVISION . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 193
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 146

    (75) expresion -> expresion MODULO . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 194
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 147

    (79) expresion -> expresion MAYOR . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 195
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 148

    (80) expresion -> expresion MENOR . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 196
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 149

    (81) expresion -> expresion MAYORIGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 197
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 150

    (82) expresion -> expresion MENORIGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 198
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 151

    (83) expresion -> expresion IGUALIGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 199
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 152

    (84) expresion -> expresion DIFERENTE . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 200
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 153

    (85) expresion -> expresion AND . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 201
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 154

    (86) expresion -> expresion OR . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 202
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 155

    (119) tostring -> expresion PUNTO . TOSTRING PIZQ PDER
    (120) tostring -> expresion PUNTO . TOOWNED PIZQ PDER
    (124) abs -> expresion PUNTO . ABS PIZQ PDER
    (125) sqrt -> expresion PUNTO . SQRT PIZQ PDER
    (111) len -> expresion PUNTO . LEN PIZQ PDER
    (112) capacity -> expresion PUNTO . CAPACITY PIZQ PDER
    (105) contains -> expresion PUNTO . CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion PUNTO . CLONE PIZQ PDER
    (104) remove -> expresion PUNTO . REMOVE PIZQ expresion PDER

    TOSTRING        shift and go to state 203
    TOOWNED         shift and go to state 204
    ABS             shift and go to state 205
    SQRT            shift and go to state 206
    LEN             shift and go to state 207
    CAPACITY        shift and go to state 208
    CONTAINS        shift and go to state 209
    CLONE           shift and go to state 210
    REMOVE          shift and go to state 211


state 156

    (121) as -> expresion AS . I64
    (122) as -> expresion AS . F64
    (123) as -> expresion AS . USIZE

    I64             shift and go to state 212
    F64             shift and go to state 213
    USIZE           shift and go to state 214


state 157

    (70) expresion -> MENOS expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 70 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 70 (expresion -> MENOS expresion .)
    MULTIPLICACION  reduce using rule 70 (expresion -> MENOS expresion .)
    DIVISION        reduce using rule 70 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 70 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 70 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 70 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 70 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 70 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 70 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 70 (expresion -> MENOS expresion .)
    AND             reduce using rule 70 (expresion -> MENOS expresion .)
    OR              reduce using rule 70 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 70 (expresion -> MENOS expresion .)
    AS              reduce using rule 70 (expresion -> MENOS expresion .)
    LLAVEIZQ        reduce using rule 70 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 70 (expresion -> MENOS expresion .)
    PDER            reduce using rule 70 (expresion -> MENOS expresion .)
    COMA            reduce using rule 70 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 70 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 70 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 142 ]
  ! MENOS           [ shift and go to state 143 ]
  ! MULTIPLICACION  [ shift and go to state 144 ]
  ! DIVISION        [ shift and go to state 145 ]
  ! MODULO          [ shift and go to state 146 ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! PUNTO           [ shift and go to state 155 ]
  ! AS              [ shift and go to state 156 ]


state 158

    (76) expresion -> I64 DOBLEPT . DOBLEPT POW PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 215


state 159

    (78) expresion -> PIZQ expresion . PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 216
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 160

    (77) expresion -> F64 DOBLEPT . DOBLEPT POWF PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 217


state 161

    (87) expresion -> NOT expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 87 (expresion -> NOT expresion .)
    MENOS           reduce using rule 87 (expresion -> NOT expresion .)
    MULTIPLICACION  reduce using rule 87 (expresion -> NOT expresion .)
    DIVISION        reduce using rule 87 (expresion -> NOT expresion .)
    MODULO          reduce using rule 87 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 87 (expresion -> NOT expresion .)
    MENOR           reduce using rule 87 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> NOT expresion .)
    IGUALIGUAL      reduce using rule 87 (expresion -> NOT expresion .)
    DIFERENTE       reduce using rule 87 (expresion -> NOT expresion .)
    AND             reduce using rule 87 (expresion -> NOT expresion .)
    OR              reduce using rule 87 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 87 (expresion -> NOT expresion .)
    AS              reduce using rule 87 (expresion -> NOT expresion .)
    LLAVEIZQ        reduce using rule 87 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 87 (expresion -> NOT expresion .)
    PDER            reduce using rule 87 (expresion -> NOT expresion .)
    COMA            reduce using rule 87 (expresion -> NOT expresion .)
    CORDER          reduce using rule 87 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 87 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 142 ]
  ! MENOS           [ shift and go to state 143 ]
  ! MULTIPLICACION  [ shift and go to state 144 ]
  ! DIVISION        [ shift and go to state 145 ]
  ! MODULO          [ shift and go to state 146 ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! PUNTO           [ shift and go to state 155 ]
  ! AS              [ shift and go to state 156 ]


state 162

    (114) accesoarray -> ID ubicaciones .
    (115) ubicaciones -> ubicaciones . ubicacion
    (117) ubicacion -> . CORIZQ expresion CORDER

    MAS             reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MENOS           reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MULTIPLICACION  reduce using rule 114 (accesoarray -> ID ubicaciones .)
    DIVISION        reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MODULO          reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MAYOR           reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MENOR           reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MAYORIGUAL      reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MENORIGUAL      reduce using rule 114 (accesoarray -> ID ubicaciones .)
    IGUALIGUAL      reduce using rule 114 (accesoarray -> ID ubicaciones .)
    DIFERENTE       reduce using rule 114 (accesoarray -> ID ubicaciones .)
    AND             reduce using rule 114 (accesoarray -> ID ubicaciones .)
    OR              reduce using rule 114 (accesoarray -> ID ubicaciones .)
    PUNTO           reduce using rule 114 (accesoarray -> ID ubicaciones .)
    AS              reduce using rule 114 (accesoarray -> ID ubicaciones .)
    LLAVEIZQ        reduce using rule 114 (accesoarray -> ID ubicaciones .)
    PTCOMA          reduce using rule 114 (accesoarray -> ID ubicaciones .)
    PDER            reduce using rule 114 (accesoarray -> ID ubicaciones .)
    COMA            reduce using rule 114 (accesoarray -> ID ubicaciones .)
    CORDER          reduce using rule 114 (accesoarray -> ID ubicaciones .)
    LLAVEDER        reduce using rule 114 (accesoarray -> ID ubicaciones .)
    CORIZQ          shift and go to state 83

    ubicacion                      shift and go to state 138

state 163

    (118) arraycontenido -> CORIZQ lista_expresiones . CORDER
    (16) lista_expresiones -> lista_expresiones . COMA expresion

    CORDER          shift and go to state 218
    COMA            shift and go to state 181


state 164

    (113) referencia -> Y MUT . ID

    ID              shift and go to state 219


state 165

    (106) vector -> VEC NOT . CORIZQ lista_expresiones CORDER
    (107) vector -> VEC NOT . CORIZQ expresion PTCOMA expresion CORDER

    CORIZQ          shift and go to state 220


state 166

    (108) vector -> VECM DOBLEPT . DOBLEPT NEW PIZQ PDER
    (109) vector -> VECM DOBLEPT . DOBLEPT WCAPACITY PIZQ expresion PDER

    DOBLEPT         shift and go to state 221


state 167

    (63) while -> WHILE expresion bloque .

    LLAVEDER        reduce using rule 63 (while -> WHILE expresion bloque .)
    PRINTLN         reduce using rule 63 (while -> WHILE expresion bloque .)
    LET             reduce using rule 63 (while -> WHILE expresion bloque .)
    ID              reduce using rule 63 (while -> WHILE expresion bloque .)
    IF              reduce using rule 63 (while -> WHILE expresion bloque .)
    RETURN          reduce using rule 63 (while -> WHILE expresion bloque .)
    LOOP            reduce using rule 63 (while -> WHILE expresion bloque .)
    BREAK           reduce using rule 63 (while -> WHILE expresion bloque .)
    WHILE           reduce using rule 63 (while -> WHILE expresion bloque .)
    CONTINUE        reduce using rule 63 (while -> WHILE expresion bloque .)
    FOR             reduce using rule 63 (while -> WHILE expresion bloque .)
    MENOS           reduce using rule 63 (while -> WHILE expresion bloque .)
    I64             reduce using rule 63 (while -> WHILE expresion bloque .)
    F64             reduce using rule 63 (while -> WHILE expresion bloque .)
    PIZQ            reduce using rule 63 (while -> WHILE expresion bloque .)
    NOT             reduce using rule 63 (while -> WHILE expresion bloque .)
    ENTERO          reduce using rule 63 (while -> WHILE expresion bloque .)
    DECIMAL         reduce using rule 63 (while -> WHILE expresion bloque .)
    CARACTER        reduce using rule 63 (while -> WHILE expresion bloque .)
    CADENA          reduce using rule 63 (while -> WHILE expresion bloque .)
    TRUE            reduce using rule 63 (while -> WHILE expresion bloque .)
    FALSE           reduce using rule 63 (while -> WHILE expresion bloque .)
    CORIZQ          reduce using rule 63 (while -> WHILE expresion bloque .)
    Y               reduce using rule 63 (while -> WHILE expresion bloque .)
    VEC             reduce using rule 63 (while -> WHILE expresion bloque .)
    VECM            reduce using rule 63 (while -> WHILE expresion bloque .)


state 168

    (65) for -> FOR ID IN . expresion PUNTO PUNTO expresion bloque
    (66) for -> FOR ID IN . expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> FOR ID IN . expresion bloque
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 222
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 169

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .

    FN              reduce using rule 8 (funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .)
    $end            reduce using rule 8 (funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .)


state 170

    (13) parametro -> ID DOBLEPT Y MUT VECM MENOR . tipo_dato MAYOR
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (147) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 223
    str                            shift and go to state 25

state 171

    (50) dimensiones -> CORIZQ CORIZQ . tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (51) dimensiones -> CORIZQ CORIZQ . CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (147) str -> . Y STR

    CORIZQ          shift and go to state 224
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 225
    str                            shift and go to state 25

state 172

    (48) dimensiones -> CORIZQ tipo_dato . CORDER
    (49) dimensiones -> CORIZQ tipo_dato . PTCOMA expresion CORDER

    CORDER          shift and go to state 226
    PTCOMA          shift and go to state 227


state 173

    (36) print -> PRINTLN NOT PIZQ lista_expresiones . PDER
    (16) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 228
    COMA            shift and go to state 181


state 174

    (40) declaracion -> LET MUT ID DOBLEPT . tipo_dato IGUAL expresion
    (44) declaracion -> LET MUT ID DOBLEPT . dimensiones IGUAL expresion
    (46) declaracion -> LET MUT ID DOBLEPT . VECM MENOR tipo_dato MAYOR IGUAL expresion
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (48) dimensiones -> . CORIZQ tipo_dato CORDER
    (49) dimensiones -> . CORIZQ tipo_dato PTCOMA expresion CORDER
    (50) dimensiones -> . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (51) dimensiones -> . CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (147) str -> . Y STR

    VECM            shift and go to state 231
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    CORIZQ          shift and go to state 126
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 229
    dimensiones                    shift and go to state 230
    str                            shift and go to state 25

state 175

    (42) declaracion -> LET MUT ID IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 232
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 176

    (41) declaracion -> LET ID DOBLEPT tipo_dato . IGUAL expresion

    IGUAL           shift and go to state 233


state 177

    (45) declaracion -> LET ID DOBLEPT dimensiones . IGUAL expresion

    IGUAL           shift and go to state 234


state 178

    (47) declaracion -> LET ID DOBLEPT VECM . MENOR tipo_dato MAYOR IGUAL expresion

    MENOR           shift and go to state 235


state 179

    (43) declaracion -> LET ID IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 43 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 180

    (15) llamadaF -> ID PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAS             reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENOS           reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MULTIPLICACION  reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    DIVISION        reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MODULO          reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAYOR           reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENOR           reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAYORIGUAL      reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENORIGUAL      reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    IGUALIGUAL      reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    DIFERENTE       reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    AND             reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    OR              reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    PUNTO           reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    AS              reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    LLAVEIZQ        reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    PDER            reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    COMA            reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    CORDER          reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    LLAVEDER        reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)


state 181

    (16) lista_expresiones -> lista_expresiones COMA . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 236
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 182

    (69) insert -> ID PUNTO INSERT PIZQ . expresion COMA expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 237
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 183

    (68) push -> ID PUNTO PUSH PIZQ . expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 238
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 184

    (39) asignacionA -> ID ubicaciones IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 39 (asignacionA -> ID ubicaciones IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 185

    (117) ubicacion -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    MULTIPLICACION  reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    DIVISION        reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    IGUALIGUAL      reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    AND             reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    OR              reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    AS              reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    PDER            reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 117 (ubicacion -> CORIZQ expresion CORDER .)


state 186

    (126) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER
    (127) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER listaelse
    (129) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (60) loop -> . LOOP bloque
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    ID              shift and go to state 49
    IF              shift and go to state 50
    RETURN          shift and go to state 51
    LOOP            shift and go to state 52
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    instrucciones                  shift and go to state 239
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 187

    (54) if_i -> IF expresion bloque ELSE . bloque
    (59) elseifI -> ELSE . IF expresion bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF              shift and go to state 240
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 241

state 188

    (55) if_i -> IF expresion bloque listaelseI .
    (56) if_i -> IF expresion bloque listaelseI . ELSE bloque
    (57) listaelseI -> listaelseI . elseifI
    (59) elseifI -> . ELSE IF expresion bloque

    LLAVEDER        reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    PRINTLN         reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    LET             reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    ID              reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    IF              reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    RETURN          reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    LOOP            reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    BREAK           reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    WHILE           reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    CONTINUE        reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    FOR             reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    MENOS           reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    I64             reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    F64             reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    PIZQ            reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    NOT             reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    ENTERO          reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    DECIMAL         reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    CARACTER        reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    CADENA          reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    TRUE            reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    FALSE           reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    CORIZQ          reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    Y               reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    VEC             reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    VECM            reduce using rule 55 (if_i -> IF expresion bloque listaelseI .)
    ELSE            shift and go to state 242

    elseifI                        shift and go to state 243

state 189

    (58) listaelseI -> elseifI .

    ELSE            reduce using rule 58 (listaelseI -> elseifI .)
    LLAVEDER        reduce using rule 58 (listaelseI -> elseifI .)
    PRINTLN         reduce using rule 58 (listaelseI -> elseifI .)
    LET             reduce using rule 58 (listaelseI -> elseifI .)
    ID              reduce using rule 58 (listaelseI -> elseifI .)
    IF              reduce using rule 58 (listaelseI -> elseifI .)
    RETURN          reduce using rule 58 (listaelseI -> elseifI .)
    LOOP            reduce using rule 58 (listaelseI -> elseifI .)
    BREAK           reduce using rule 58 (listaelseI -> elseifI .)
    WHILE           reduce using rule 58 (listaelseI -> elseifI .)
    CONTINUE        reduce using rule 58 (listaelseI -> elseifI .)
    FOR             reduce using rule 58 (listaelseI -> elseifI .)
    MENOS           reduce using rule 58 (listaelseI -> elseifI .)
    I64             reduce using rule 58 (listaelseI -> elseifI .)
    F64             reduce using rule 58 (listaelseI -> elseifI .)
    PIZQ            reduce using rule 58 (listaelseI -> elseifI .)
    NOT             reduce using rule 58 (listaelseI -> elseifI .)
    ENTERO          reduce using rule 58 (listaelseI -> elseifI .)
    DECIMAL         reduce using rule 58 (listaelseI -> elseifI .)
    CARACTER        reduce using rule 58 (listaelseI -> elseifI .)
    CADENA          reduce using rule 58 (listaelseI -> elseifI .)
    TRUE            reduce using rule 58 (listaelseI -> elseifI .)
    FALSE           reduce using rule 58 (listaelseI -> elseifI .)
    CORIZQ          reduce using rule 58 (listaelseI -> elseifI .)
    Y               reduce using rule 58 (listaelseI -> elseifI .)
    VEC             reduce using rule 58 (listaelseI -> elseifI .)
    VECM            reduce using rule 58 (listaelseI -> elseifI .)


state 190

    (71) expresion -> expresion MAS expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 71 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 71 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 71 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 71 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 71 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 71 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 71 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 71 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 71 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 71 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 71 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 71 (expresion -> expresion MAS expresion .)
    LLAVEIZQ        reduce using rule 71 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 71 (expresion -> expresion MAS expresion .)
    PDER            reduce using rule 71 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 71 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 71 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 71 (expresion -> expresion MAS expresion .)
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146

  ! MULTIPLICACION  [ reduce using rule 71 (expresion -> expresion MAS expresion .) ]
  ! DIVISION        [ reduce using rule 71 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 142 ]
  ! MENOS           [ shift and go to state 143 ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! PUNTO           [ shift and go to state 155 ]
  ! AS              [ shift and go to state 156 ]


state 191

    (72) expresion -> expresion MENOS expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 72 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 72 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 72 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 72 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 72 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 72 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 72 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 72 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 72 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 72 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 72 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 72 (expresion -> expresion MENOS expresion .)
    LLAVEIZQ        reduce using rule 72 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 72 (expresion -> expresion MENOS expresion .)
    PDER            reduce using rule 72 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 72 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 72 (expresion -> expresion MENOS expresion .)
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146

  ! MULTIPLICACION  [ reduce using rule 72 (expresion -> expresion MENOS expresion .) ]
  ! DIVISION        [ reduce using rule 72 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 72 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 142 ]
  ! MENOS           [ shift and go to state 143 ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! PUNTO           [ shift and go to state 155 ]
  ! AS              [ shift and go to state 156 ]


state 192

    (73) expresion -> expresion MULTIPLICACION expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    MENOS           reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    MULTIPLICACION  reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    DIVISION        reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    MODULO          reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    MAYOR           reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    MENOR           reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    MAYORIGUAL      reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    MENORIGUAL      reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    IGUALIGUAL      reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    DIFERENTE       reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    AND             reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    OR              reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    PUNTO           reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    AS              reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVEIZQ        reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    PTCOMA          reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    PDER            reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    CORDER          reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVEDER        reduce using rule 73 (expresion -> expresion MULTIPLICACION expresion .)

  ! MAS             [ shift and go to state 142 ]
  ! MENOS           [ shift and go to state 143 ]
  ! MULTIPLICACION  [ shift and go to state 144 ]
  ! DIVISION        [ shift and go to state 145 ]
  ! MODULO          [ shift and go to state 146 ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! PUNTO           [ shift and go to state 155 ]
  ! AS              [ shift and go to state 156 ]


state 193

    (74) expresion -> expresion DIVISION expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    MENOS           reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    MULTIPLICACION  reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    MODULO          reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    MAYOR           reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    MENOR           reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    MAYORIGUAL      reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    MENORIGUAL      reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    IGUALIGUAL      reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    DIFERENTE       reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    PUNTO           reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    AS              reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    LLAVEIZQ        reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    PTCOMA          reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    PDER            reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    COMA            reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    CORDER          reduce using rule 74 (expresion -> expresion DIVISION expresion .)
    LLAVEDER        reduce using rule 74 (expresion -> expresion DIVISION expresion .)

  ! MAS             [ shift and go to state 142 ]
  ! MENOS           [ shift and go to state 143 ]
  ! MULTIPLICACION  [ shift and go to state 144 ]
  ! DIVISION        [ shift and go to state 145 ]
  ! MODULO          [ shift and go to state 146 ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! PUNTO           [ shift and go to state 155 ]
  ! AS              [ shift and go to state 156 ]


state 194

    (75) expresion -> expresion MODULO expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 75 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 75 (expresion -> expresion MODULO expresion .)
    MULTIPLICACION  reduce using rule 75 (expresion -> expresion MODULO expresion .)
    DIVISION        reduce using rule 75 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 75 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 75 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 75 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 75 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 75 (expresion -> expresion MODULO expresion .)
    IGUALIGUAL      reduce using rule 75 (expresion -> expresion MODULO expresion .)
    DIFERENTE       reduce using rule 75 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 75 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 75 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 75 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 75 (expresion -> expresion MODULO expresion .)
    LLAVEIZQ        reduce using rule 75 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 75 (expresion -> expresion MODULO expresion .)
    PDER            reduce using rule 75 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 75 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 75 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 75 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 142 ]
  ! MENOS           [ shift and go to state 143 ]
  ! MULTIPLICACION  [ shift and go to state 144 ]
  ! DIVISION        [ shift and go to state 145 ]
  ! MODULO          [ shift and go to state 146 ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! PUNTO           [ shift and go to state 155 ]
  ! AS              [ shift and go to state 156 ]


state 195

    (79) expresion -> expresion MAYOR expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    IGUALIGUAL      reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    DIFERENTE       reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    AS              reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    LLAVEIZQ        reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    PTCOMA          reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    PDER            reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    LLAVEDER        reduce using rule 79 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    PUNTO           shift and go to state 155

  ! MAS             [ reduce using rule 79 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 79 (expresion -> expresion MAYOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 79 (expresion -> expresion MAYOR expresion .) ]
  ! DIVISION        [ reduce using rule 79 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> expresion MAYOR expresion .) ]
  ! PUNTO           [ reduce using rule 79 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! AS              [ shift and go to state 156 ]


state 196

    (80) expresion -> expresion MENOR expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 80 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 80 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 80 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 80 (expresion -> expresion MENOR expresion .)
    IGUALIGUAL      reduce using rule 80 (expresion -> expresion MENOR expresion .)
    DIFERENTE       reduce using rule 80 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 80 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 80 (expresion -> expresion MENOR expresion .)
    AS              reduce using rule 80 (expresion -> expresion MENOR expresion .)
    LLAVEIZQ        reduce using rule 80 (expresion -> expresion MENOR expresion .)
    PTCOMA          reduce using rule 80 (expresion -> expresion MENOR expresion .)
    PDER            reduce using rule 80 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 80 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 80 (expresion -> expresion MENOR expresion .)
    LLAVEDER        reduce using rule 80 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    PUNTO           shift and go to state 155

  ! MAS             [ reduce using rule 80 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 80 (expresion -> expresion MENOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 80 (expresion -> expresion MENOR expresion .) ]
  ! DIVISION        [ reduce using rule 80 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 80 (expresion -> expresion MENOR expresion .) ]
  ! PUNTO           [ reduce using rule 80 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! AS              [ shift and go to state 156 ]


state 197

    (81) expresion -> expresion MAYORIGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    DIFERENTE       reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    AS              reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEIZQ        reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    PDER            reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEDER        reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    PUNTO           shift and go to state 155

  ! MAS             [ reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 81 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! AS              [ shift and go to state 156 ]


state 198

    (82) expresion -> expresion MENORIGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    DIFERENTE       reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    AS              reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEIZQ        reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    PDER            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEDER        reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    PUNTO           shift and go to state 155

  ! MAS             [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! AS              [ shift and go to state 156 ]


state 199

    (83) expresion -> expresion IGUALIGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    MENOR           reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    MAYORIGUAL      reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    MENORIGUAL      reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    IGUALIGUAL      reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    DIFERENTE       reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    AS              reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    LLAVEIZQ        reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    PTCOMA          reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    PDER            reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    CORDER          reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    LLAVEDER        reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    PUNTO           shift and go to state 155

  ! MAS             [ reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 83 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! AS              [ shift and go to state 156 ]


state 200

    (84) expresion -> expresion DIFERENTE expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    MENOR           reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    MAYORIGUAL      reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    MENORIGUAL      reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    IGUALIGUAL      reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    DIFERENTE       reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    AS              reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    LLAVEIZQ        reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    PTCOMA          reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    PDER            reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    LLAVEDER        reduce using rule 84 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    PUNTO           shift and go to state 155

  ! MAS             [ reduce using rule 84 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion -> expresion DIFERENTE expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 84 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVISION        [ reduce using rule 84 (expresion -> expresion DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion DIFERENTE expresion .) ]
  ! PUNTO           [ reduce using rule 84 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ shift and go to state 147 ]
  ! MENOR           [ shift and go to state 148 ]
  ! MAYORIGUAL      [ shift and go to state 149 ]
  ! MENORIGUAL      [ shift and go to state 150 ]
  ! IGUALIGUAL      [ shift and go to state 151 ]
  ! DIFERENTE       [ shift and go to state 152 ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! AS              [ shift and go to state 156 ]


state 201

    (85) expresion -> expresion AND expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    AND             reduce using rule 85 (expresion -> expresion AND expresion .)
    OR              reduce using rule 85 (expresion -> expresion AND expresion .)
    AS              reduce using rule 85 (expresion -> expresion AND expresion .)
    LLAVEIZQ        reduce using rule 85 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 85 (expresion -> expresion AND expresion .)
    PDER            reduce using rule 85 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 85 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 85 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 85 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    PUNTO           shift and go to state 155

  ! MAS             [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! DIVISION        [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! PUNTO           [ reduce using rule 85 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 153 ]
  ! OR              [ shift and go to state 154 ]
  ! AS              [ shift and go to state 156 ]


state 202

    (86) expresion -> expresion OR expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    OR              reduce using rule 86 (expresion -> expresion OR expresion .)
    AS              reduce using rule 86 (expresion -> expresion OR expresion .)
    LLAVEIZQ        reduce using rule 86 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 86 (expresion -> expresion OR expresion .)
    PDER            reduce using rule 86 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 86 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 86 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 86 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    PUNTO           shift and go to state 155

  ! MAS             [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! DIVISION        [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! PUNTO           [ reduce using rule 86 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 154 ]
  ! AS              [ shift and go to state 156 ]


state 203

    (119) tostring -> expresion PUNTO TOSTRING . PIZQ PDER

    PIZQ            shift and go to state 244


state 204

    (120) tostring -> expresion PUNTO TOOWNED . PIZQ PDER

    PIZQ            shift and go to state 245


state 205

    (124) abs -> expresion PUNTO ABS . PIZQ PDER

    PIZQ            shift and go to state 246


state 206

    (125) sqrt -> expresion PUNTO SQRT . PIZQ PDER

    PIZQ            shift and go to state 247


state 207

    (111) len -> expresion PUNTO LEN . PIZQ PDER

    PIZQ            shift and go to state 248


state 208

    (112) capacity -> expresion PUNTO CAPACITY . PIZQ PDER

    PIZQ            shift and go to state 249


state 209

    (105) contains -> expresion PUNTO CONTAINS . PIZQ Y expresion PDER

    PIZQ            shift and go to state 250


state 210

    (110) clone -> expresion PUNTO CLONE . PIZQ PDER

    PIZQ            shift and go to state 251


state 211

    (104) remove -> expresion PUNTO REMOVE . PIZQ expresion PDER

    PIZQ            shift and go to state 252


state 212

    (121) as -> expresion AS I64 .

    MAS             reduce using rule 121 (as -> expresion AS I64 .)
    MENOS           reduce using rule 121 (as -> expresion AS I64 .)
    MULTIPLICACION  reduce using rule 121 (as -> expresion AS I64 .)
    DIVISION        reduce using rule 121 (as -> expresion AS I64 .)
    MODULO          reduce using rule 121 (as -> expresion AS I64 .)
    MAYOR           reduce using rule 121 (as -> expresion AS I64 .)
    MENOR           reduce using rule 121 (as -> expresion AS I64 .)
    MAYORIGUAL      reduce using rule 121 (as -> expresion AS I64 .)
    MENORIGUAL      reduce using rule 121 (as -> expresion AS I64 .)
    IGUALIGUAL      reduce using rule 121 (as -> expresion AS I64 .)
    DIFERENTE       reduce using rule 121 (as -> expresion AS I64 .)
    AND             reduce using rule 121 (as -> expresion AS I64 .)
    OR              reduce using rule 121 (as -> expresion AS I64 .)
    PUNTO           reduce using rule 121 (as -> expresion AS I64 .)
    AS              reduce using rule 121 (as -> expresion AS I64 .)
    LLAVEIZQ        reduce using rule 121 (as -> expresion AS I64 .)
    PTCOMA          reduce using rule 121 (as -> expresion AS I64 .)
    PDER            reduce using rule 121 (as -> expresion AS I64 .)
    COMA            reduce using rule 121 (as -> expresion AS I64 .)
    CORDER          reduce using rule 121 (as -> expresion AS I64 .)
    LLAVEDER        reduce using rule 121 (as -> expresion AS I64 .)


state 213

    (122) as -> expresion AS F64 .

    MAS             reduce using rule 122 (as -> expresion AS F64 .)
    MENOS           reduce using rule 122 (as -> expresion AS F64 .)
    MULTIPLICACION  reduce using rule 122 (as -> expresion AS F64 .)
    DIVISION        reduce using rule 122 (as -> expresion AS F64 .)
    MODULO          reduce using rule 122 (as -> expresion AS F64 .)
    MAYOR           reduce using rule 122 (as -> expresion AS F64 .)
    MENOR           reduce using rule 122 (as -> expresion AS F64 .)
    MAYORIGUAL      reduce using rule 122 (as -> expresion AS F64 .)
    MENORIGUAL      reduce using rule 122 (as -> expresion AS F64 .)
    IGUALIGUAL      reduce using rule 122 (as -> expresion AS F64 .)
    DIFERENTE       reduce using rule 122 (as -> expresion AS F64 .)
    AND             reduce using rule 122 (as -> expresion AS F64 .)
    OR              reduce using rule 122 (as -> expresion AS F64 .)
    PUNTO           reduce using rule 122 (as -> expresion AS F64 .)
    AS              reduce using rule 122 (as -> expresion AS F64 .)
    LLAVEIZQ        reduce using rule 122 (as -> expresion AS F64 .)
    PTCOMA          reduce using rule 122 (as -> expresion AS F64 .)
    PDER            reduce using rule 122 (as -> expresion AS F64 .)
    COMA            reduce using rule 122 (as -> expresion AS F64 .)
    CORDER          reduce using rule 122 (as -> expresion AS F64 .)
    LLAVEDER        reduce using rule 122 (as -> expresion AS F64 .)


state 214

    (123) as -> expresion AS USIZE .

    MAS             reduce using rule 123 (as -> expresion AS USIZE .)
    MENOS           reduce using rule 123 (as -> expresion AS USIZE .)
    MULTIPLICACION  reduce using rule 123 (as -> expresion AS USIZE .)
    DIVISION        reduce using rule 123 (as -> expresion AS USIZE .)
    MODULO          reduce using rule 123 (as -> expresion AS USIZE .)
    MAYOR           reduce using rule 123 (as -> expresion AS USIZE .)
    MENOR           reduce using rule 123 (as -> expresion AS USIZE .)
    MAYORIGUAL      reduce using rule 123 (as -> expresion AS USIZE .)
    MENORIGUAL      reduce using rule 123 (as -> expresion AS USIZE .)
    IGUALIGUAL      reduce using rule 123 (as -> expresion AS USIZE .)
    DIFERENTE       reduce using rule 123 (as -> expresion AS USIZE .)
    AND             reduce using rule 123 (as -> expresion AS USIZE .)
    OR              reduce using rule 123 (as -> expresion AS USIZE .)
    PUNTO           reduce using rule 123 (as -> expresion AS USIZE .)
    AS              reduce using rule 123 (as -> expresion AS USIZE .)
    LLAVEIZQ        reduce using rule 123 (as -> expresion AS USIZE .)
    PTCOMA          reduce using rule 123 (as -> expresion AS USIZE .)
    PDER            reduce using rule 123 (as -> expresion AS USIZE .)
    COMA            reduce using rule 123 (as -> expresion AS USIZE .)
    CORDER          reduce using rule 123 (as -> expresion AS USIZE .)
    LLAVEDER        reduce using rule 123 (as -> expresion AS USIZE .)


state 215

    (76) expresion -> I64 DOBLEPT DOBLEPT . POW PIZQ expresion COMA expresion PDER

    POW             shift and go to state 253


state 216

    (78) expresion -> PIZQ expresion PDER .

    MAS             reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    MENOS           reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    DIVISION        reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    MODULO          reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    MAYOR           reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    MENOR           reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    AND             reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    OR              reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    PUNTO           reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    AS              reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    LLAVEIZQ        reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    PTCOMA          reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    PDER            reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    COMA            reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    CORDER          reduce using rule 78 (expresion -> PIZQ expresion PDER .)
    LLAVEDER        reduce using rule 78 (expresion -> PIZQ expresion PDER .)


state 217

    (77) expresion -> F64 DOBLEPT DOBLEPT . POWF PIZQ expresion COMA expresion PDER

    POWF            shift and go to state 254


state 218

    (118) arraycontenido -> CORIZQ lista_expresiones CORDER .

    MAS             reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MENOS           reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MULTIPLICACION  reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    DIVISION        reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MODULO          reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MAYOR           reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MENOR           reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MAYORIGUAL      reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MENORIGUAL      reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    IGUALIGUAL      reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    DIFERENTE       reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    AND             reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    OR              reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    PUNTO           reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    AS              reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    LLAVEIZQ        reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    PTCOMA          reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    PDER            reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    COMA            reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    CORDER          reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    LLAVEDER        reduce using rule 118 (arraycontenido -> CORIZQ lista_expresiones CORDER .)


state 219

    (113) referencia -> Y MUT ID .

    MAS             reduce using rule 113 (referencia -> Y MUT ID .)
    MENOS           reduce using rule 113 (referencia -> Y MUT ID .)
    MULTIPLICACION  reduce using rule 113 (referencia -> Y MUT ID .)
    DIVISION        reduce using rule 113 (referencia -> Y MUT ID .)
    MODULO          reduce using rule 113 (referencia -> Y MUT ID .)
    MAYOR           reduce using rule 113 (referencia -> Y MUT ID .)
    MENOR           reduce using rule 113 (referencia -> Y MUT ID .)
    MAYORIGUAL      reduce using rule 113 (referencia -> Y MUT ID .)
    MENORIGUAL      reduce using rule 113 (referencia -> Y MUT ID .)
    IGUALIGUAL      reduce using rule 113 (referencia -> Y MUT ID .)
    DIFERENTE       reduce using rule 113 (referencia -> Y MUT ID .)
    AND             reduce using rule 113 (referencia -> Y MUT ID .)
    OR              reduce using rule 113 (referencia -> Y MUT ID .)
    PUNTO           reduce using rule 113 (referencia -> Y MUT ID .)
    AS              reduce using rule 113 (referencia -> Y MUT ID .)
    LLAVEIZQ        reduce using rule 113 (referencia -> Y MUT ID .)
    PTCOMA          reduce using rule 113 (referencia -> Y MUT ID .)
    PDER            reduce using rule 113 (referencia -> Y MUT ID .)
    COMA            reduce using rule 113 (referencia -> Y MUT ID .)
    CORDER          reduce using rule 113 (referencia -> Y MUT ID .)
    LLAVEDER        reduce using rule 113 (referencia -> Y MUT ID .)


state 220

    (106) vector -> VEC NOT CORIZQ . lista_expresiones CORDER
    (107) vector -> VEC NOT CORIZQ . expresion PTCOMA expresion CORDER
    (16) lista_expresiones -> . lista_expresiones COMA expresion
    (17) lista_expresiones -> . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    lista_expresiones              shift and go to state 255
    expresion                      shift and go to state 256
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 221

    (108) vector -> VECM DOBLEPT DOBLEPT . NEW PIZQ PDER
    (109) vector -> VECM DOBLEPT DOBLEPT . WCAPACITY PIZQ expresion PDER

    NEW             shift and go to state 257
    WCAPACITY       shift and go to state 258


state 222

    (65) for -> FOR ID IN expresion . PUNTO PUNTO expresion bloque
    (66) for -> FOR ID IN expresion . PUNTO CHARS PIZQ PDER bloque
    (67) for -> FOR ID IN expresion . bloque
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    PUNTO           shift and go to state 259
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    AS              shift and go to state 156
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 260

state 223

    (13) parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato . MAYOR

    MAYOR           shift and go to state 261


state 224

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ . tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (147) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 262
    str                            shift and go to state 25

state 225

    (50) dimensiones -> CORIZQ CORIZQ tipo_dato . PTCOMA expresion CORDER PTCOMA expresion CORDER

    PTCOMA          shift and go to state 263


state 226

    (48) dimensiones -> CORIZQ tipo_dato CORDER .

    PDER            reduce using rule 48 (dimensiones -> CORIZQ tipo_dato CORDER .)
    COMA            reduce using rule 48 (dimensiones -> CORIZQ tipo_dato CORDER .)
    IGUAL           reduce using rule 48 (dimensiones -> CORIZQ tipo_dato CORDER .)


state 227

    (49) dimensiones -> CORIZQ tipo_dato PTCOMA . expresion CORDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 264
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 228

    (36) print -> PRINTLN NOT PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 36 (print -> PRINTLN NOT PIZQ lista_expresiones PDER .)


state 229

    (40) declaracion -> LET MUT ID DOBLEPT tipo_dato . IGUAL expresion

    IGUAL           shift and go to state 265


state 230

    (44) declaracion -> LET MUT ID DOBLEPT dimensiones . IGUAL expresion

    IGUAL           shift and go to state 266


state 231

    (46) declaracion -> LET MUT ID DOBLEPT VECM . MENOR tipo_dato MAYOR IGUAL expresion

    MENOR           shift and go to state 267


state 232

    (42) declaracion -> LET MUT ID IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 233

    (41) declaracion -> LET ID DOBLEPT tipo_dato IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 268
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 234

    (45) declaracion -> LET ID DOBLEPT dimensiones IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 269
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 235

    (47) declaracion -> LET ID DOBLEPT VECM MENOR . tipo_dato MAYOR IGUAL expresion
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (147) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 270
    str                            shift and go to state 25

state 236

    (16) lista_expresiones -> lista_expresiones COMA expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            reduce using rule 16 (lista_expresiones -> lista_expresiones COMA expresion .)
    COMA            reduce using rule 16 (lista_expresiones -> lista_expresiones COMA expresion .)
    CORDER          reduce using rule 16 (lista_expresiones -> lista_expresiones COMA expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 237

    (69) insert -> ID PUNTO INSERT PIZQ expresion . COMA expresion PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    COMA            shift and go to state 271
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 238

    (68) push -> ID PUNTO PUSH PIZQ expresion . PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 272
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 239

    (126) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER
    (127) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER listaelse
    (129) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 277
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 273
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117
    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    RETURN          shift and go to state 51
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    expresion                      shift and go to state 274
    instruccion                    shift and go to state 64
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 275
    loop                           shift and go to state 276
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 240

    (59) elseifI -> ELSE IF . expresion bloque
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 278
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 241

    (54) if_i -> IF expresion bloque ELSE bloque .

    LLAVEDER        reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    PRINTLN         reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    LET             reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    ID              reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    IF              reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    RETURN          reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    LOOP            reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    BREAK           reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    WHILE           reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    CONTINUE        reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    FOR             reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    MENOS           reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    I64             reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    F64             reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    PIZQ            reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    NOT             reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    ENTERO          reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    DECIMAL         reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    CARACTER        reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    CADENA          reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    TRUE            reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    FALSE           reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    CORIZQ          reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    Y               reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    VEC             reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)
    VECM            reduce using rule 54 (if_i -> IF expresion bloque ELSE bloque .)


state 242

    (56) if_i -> IF expresion bloque listaelseI ELSE . bloque
    (59) elseifI -> ELSE . IF expresion bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF              shift and go to state 240
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 279

state 243

    (57) listaelseI -> listaelseI elseifI .

    ELSE            reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    LLAVEDER        reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    PRINTLN         reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    LET             reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    ID              reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    IF              reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    RETURN          reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    LOOP            reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    BREAK           reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    WHILE           reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    CONTINUE        reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    FOR             reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    MENOS           reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    I64             reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    F64             reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    PIZQ            reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    NOT             reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    ENTERO          reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    DECIMAL         reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    CARACTER        reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    CADENA          reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    TRUE            reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    FALSE           reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    CORIZQ          reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    Y               reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    VEC             reduce using rule 57 (listaelseI -> listaelseI elseifI .)
    VECM            reduce using rule 57 (listaelseI -> listaelseI elseifI .)


state 244

    (119) tostring -> expresion PUNTO TOSTRING PIZQ . PDER

    PDER            shift and go to state 280


state 245

    (120) tostring -> expresion PUNTO TOOWNED PIZQ . PDER

    PDER            shift and go to state 281


state 246

    (124) abs -> expresion PUNTO ABS PIZQ . PDER

    PDER            shift and go to state 282


state 247

    (125) sqrt -> expresion PUNTO SQRT PIZQ . PDER

    PDER            shift and go to state 283


state 248

    (111) len -> expresion PUNTO LEN PIZQ . PDER

    PDER            shift and go to state 284


state 249

    (112) capacity -> expresion PUNTO CAPACITY PIZQ . PDER

    PDER            shift and go to state 285


state 250

    (105) contains -> expresion PUNTO CONTAINS PIZQ . Y expresion PDER

    Y               shift and go to state 286


state 251

    (110) clone -> expresion PUNTO CLONE PIZQ . PDER

    PDER            shift and go to state 287


state 252

    (104) remove -> expresion PUNTO REMOVE PIZQ . expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 288
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 253

    (76) expresion -> I64 DOBLEPT DOBLEPT POW . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 289


state 254

    (77) expresion -> F64 DOBLEPT DOBLEPT POWF . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 290


state 255

    (106) vector -> VEC NOT CORIZQ lista_expresiones . CORDER
    (16) lista_expresiones -> lista_expresiones . COMA expresion

    CORDER          shift and go to state 291
    COMA            shift and go to state 181


state 256

    (107) vector -> VEC NOT CORIZQ expresion . PTCOMA expresion CORDER
    (17) lista_expresiones -> expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          shift and go to state 292
    CORDER          reduce using rule 17 (lista_expresiones -> expresion .)
    COMA            reduce using rule 17 (lista_expresiones -> expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 257

    (108) vector -> VECM DOBLEPT DOBLEPT NEW . PIZQ PDER

    PIZQ            shift and go to state 293


state 258

    (109) vector -> VECM DOBLEPT DOBLEPT WCAPACITY . PIZQ expresion PDER

    PIZQ            shift and go to state 294


state 259

    (65) for -> FOR ID IN expresion PUNTO . PUNTO expresion bloque
    (66) for -> FOR ID IN expresion PUNTO . CHARS PIZQ PDER bloque
    (119) tostring -> expresion PUNTO . TOSTRING PIZQ PDER
    (120) tostring -> expresion PUNTO . TOOWNED PIZQ PDER
    (124) abs -> expresion PUNTO . ABS PIZQ PDER
    (125) sqrt -> expresion PUNTO . SQRT PIZQ PDER
    (111) len -> expresion PUNTO . LEN PIZQ PDER
    (112) capacity -> expresion PUNTO . CAPACITY PIZQ PDER
    (105) contains -> expresion PUNTO . CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion PUNTO . CLONE PIZQ PDER
    (104) remove -> expresion PUNTO . REMOVE PIZQ expresion PDER

    PUNTO           shift and go to state 295
    CHARS           shift and go to state 296
    TOSTRING        shift and go to state 203
    TOOWNED         shift and go to state 204
    ABS             shift and go to state 205
    SQRT            shift and go to state 206
    LEN             shift and go to state 207
    CAPACITY        shift and go to state 208
    CONTAINS        shift and go to state 209
    CLONE           shift and go to state 210
    REMOVE          shift and go to state 211


state 260

    (67) for -> FOR ID IN expresion bloque .

    LLAVEDER        reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    PRINTLN         reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    LET             reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    ID              reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    IF              reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    RETURN          reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    LOOP            reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    BREAK           reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    WHILE           reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    CONTINUE        reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    FOR             reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    MENOS           reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    I64             reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    F64             reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    PIZQ            reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    NOT             reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    ENTERO          reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    DECIMAL         reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    CARACTER        reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    CADENA          reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    TRUE            reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    FALSE           reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    CORIZQ          reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    Y               reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    VEC             reduce using rule 67 (for -> FOR ID IN expresion bloque .)
    VECM            reduce using rule 67 (for -> FOR ID IN expresion bloque .)


state 261

    (13) parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR .

    PDER            reduce using rule 13 (parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR .)
    COMA            reduce using rule 13 (parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR .)


state 262

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato . PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER

    PTCOMA          shift and go to state 297


state 263

    (50) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA . expresion CORDER PTCOMA expresion CORDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 298
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 264

    (49) dimensiones -> CORIZQ tipo_dato PTCOMA expresion . CORDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 299
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 265

    (40) declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 300
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 266

    (44) declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 301
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 267

    (46) declaracion -> LET MUT ID DOBLEPT VECM MENOR . tipo_dato MAYOR IGUAL expresion
    (140) tipo_dato -> . I64
    (141) tipo_dato -> . F64
    (142) tipo_dato -> . BOOL
    (143) tipo_dato -> . CHAR
    (144) tipo_dato -> . str
    (145) tipo_dato -> . STRING
    (146) tipo_dato -> . USIZE
    (147) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 302
    str                            shift and go to state 25

state 268

    (41) declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 41 (declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 269

    (45) declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 45 (declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 270

    (47) declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato . MAYOR IGUAL expresion

    MAYOR           shift and go to state 303


state 271

    (69) insert -> ID PUNTO INSERT PIZQ expresion COMA . expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 304
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 272

    (68) push -> ID PUNTO PUSH PIZQ expresion PDER .

    PTCOMA          reduce using rule 68 (push -> ID PUNTO PUSH PIZQ expresion PDER .)


state 273

    (126) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (53) if_i -> IF . expresion bloque
    (54) if_i -> IF . expresion bloque ELSE bloque
    (55) if_i -> IF . expresion bloque listaelseI
    (56) if_i -> IF . expresion bloque listaelseI ELSE bloque
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 305
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 274

    (126) if_e -> IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER
    (127) if_e -> IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER listaelse
    (129) if_e -> IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEDER        shift and go to state 306
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 275

    (93) expresion -> llamadaF .
    (26) instruccion -> llamadaF . PTCOMA

    LLAVEDER        reduce using rule 93 (expresion -> llamadaF .)
    MAS             reduce using rule 93 (expresion -> llamadaF .)
    MENOS           reduce using rule 93 (expresion -> llamadaF .)
    MULTIPLICACION  reduce using rule 93 (expresion -> llamadaF .)
    DIVISION        reduce using rule 93 (expresion -> llamadaF .)
    MODULO          reduce using rule 93 (expresion -> llamadaF .)
    MAYOR           reduce using rule 93 (expresion -> llamadaF .)
    MENOR           reduce using rule 93 (expresion -> llamadaF .)
    MAYORIGUAL      reduce using rule 93 (expresion -> llamadaF .)
    MENORIGUAL      reduce using rule 93 (expresion -> llamadaF .)
    IGUALIGUAL      reduce using rule 93 (expresion -> llamadaF .)
    DIFERENTE       reduce using rule 93 (expresion -> llamadaF .)
    AND             reduce using rule 93 (expresion -> llamadaF .)
    OR              reduce using rule 93 (expresion -> llamadaF .)
    PUNTO           reduce using rule 93 (expresion -> llamadaF .)
    AS              reduce using rule 93 (expresion -> llamadaF .)
    PTCOMA          shift and go to state 68


state 276

    (94) expresion -> loop .
    (28) instruccion -> loop .

  ! reduce/reduce conflict for MENOS resolved using rule 28 (instruccion -> loop .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 28 (instruccion -> loop .)
    MAS             reduce using rule 94 (expresion -> loop .)
    MULTIPLICACION  reduce using rule 94 (expresion -> loop .)
    DIVISION        reduce using rule 94 (expresion -> loop .)
    MODULO          reduce using rule 94 (expresion -> loop .)
    MAYOR           reduce using rule 94 (expresion -> loop .)
    MENOR           reduce using rule 94 (expresion -> loop .)
    MAYORIGUAL      reduce using rule 94 (expresion -> loop .)
    MENORIGUAL      reduce using rule 94 (expresion -> loop .)
    IGUALIGUAL      reduce using rule 94 (expresion -> loop .)
    DIFERENTE       reduce using rule 94 (expresion -> loop .)
    AND             reduce using rule 94 (expresion -> loop .)
    OR              reduce using rule 94 (expresion -> loop .)
    PUNTO           reduce using rule 94 (expresion -> loop .)
    AS              reduce using rule 94 (expresion -> loop .)
    MENOS           reduce using rule 28 (instruccion -> loop .)
    I64             reduce using rule 28 (instruccion -> loop .)
    F64             reduce using rule 28 (instruccion -> loop .)
    PIZQ            reduce using rule 28 (instruccion -> loop .)
    NOT             reduce using rule 28 (instruccion -> loop .)
    ENTERO          reduce using rule 28 (instruccion -> loop .)
    DECIMAL         reduce using rule 28 (instruccion -> loop .)
    ID              reduce using rule 28 (instruccion -> loop .)
    CARACTER        reduce using rule 28 (instruccion -> loop .)
    CADENA          reduce using rule 28 (instruccion -> loop .)
    TRUE            reduce using rule 28 (instruccion -> loop .)
    FALSE           reduce using rule 28 (instruccion -> loop .)
    IF              reduce using rule 28 (instruccion -> loop .)
    LOOP            reduce using rule 28 (instruccion -> loop .)
    CORIZQ          reduce using rule 28 (instruccion -> loop .)
    Y               reduce using rule 28 (instruccion -> loop .)
    VEC             reduce using rule 28 (instruccion -> loop .)
    VECM            reduce using rule 28 (instruccion -> loop .)
    PRINTLN         reduce using rule 28 (instruccion -> loop .)
    LET             reduce using rule 28 (instruccion -> loop .)
    RETURN          reduce using rule 28 (instruccion -> loop .)
    BREAK           reduce using rule 28 (instruccion -> loop .)
    WHILE           reduce using rule 28 (instruccion -> loop .)
    CONTINUE        reduce using rule 28 (instruccion -> loop .)
    FOR             reduce using rule 28 (instruccion -> loop .)
    LLAVEDER        reduce using rule 28 (instruccion -> loop .)

  ! LLAVEDER        [ reduce using rule 94 (expresion -> loop .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> loop .) ]


state 277

    (135) expresion -> ID .
    (14) llamadaF -> ID . PIZQ PDER
    (15) llamadaF -> ID . PIZQ lista_expresiones PDER
    (114) accesoarray -> ID . ubicaciones
    (52) asignacion -> ID . IGUAL expresion
    (69) insert -> ID . PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> ID . ubicaciones IGUAL expresion
    (68) push -> ID . PUNTO PUSH PIZQ expresion PDER
    (115) ubicaciones -> . ubicaciones ubicacion
    (116) ubicaciones -> . ubicacion
    (117) ubicacion -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for PUNTO resolved as shift
    LLAVEDER        reduce using rule 135 (expresion -> ID .)
    MAS             reduce using rule 135 (expresion -> ID .)
    MENOS           reduce using rule 135 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 135 (expresion -> ID .)
    DIVISION        reduce using rule 135 (expresion -> ID .)
    MODULO          reduce using rule 135 (expresion -> ID .)
    MAYOR           reduce using rule 135 (expresion -> ID .)
    MENOR           reduce using rule 135 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 135 (expresion -> ID .)
    MENORIGUAL      reduce using rule 135 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 135 (expresion -> ID .)
    DIFERENTE       reduce using rule 135 (expresion -> ID .)
    AND             reduce using rule 135 (expresion -> ID .)
    OR              reduce using rule 135 (expresion -> ID .)
    AS              reduce using rule 135 (expresion -> ID .)
    PIZQ            shift and go to state 79
    IGUAL           shift and go to state 78
    PUNTO           shift and go to state 80
    CORIZQ          shift and go to state 83

  ! PUNTO           [ reduce using rule 135 (expresion -> ID .) ]

    ubicaciones                    shift and go to state 307
    ubicacion                      shift and go to state 82

state 278

    (59) elseifI -> ELSE IF expresion . bloque
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 308

state 279

    (56) if_i -> IF expresion bloque listaelseI ELSE bloque .

    LLAVEDER        reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    PRINTLN         reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    LET             reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    ID              reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    IF              reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    RETURN          reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    LOOP            reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    BREAK           reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    WHILE           reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    CONTINUE        reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    FOR             reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    MENOS           reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    I64             reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    F64             reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    PIZQ            reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    NOT             reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    ENTERO          reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    DECIMAL         reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    CARACTER        reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    CADENA          reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    TRUE            reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    FALSE           reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    CORIZQ          reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    Y               reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    VEC             reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    VECM            reduce using rule 56 (if_i -> IF expresion bloque listaelseI ELSE bloque .)


state 280

    (119) tostring -> expresion PUNTO TOSTRING PIZQ PDER .

    MAS             reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENOS           reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MULTIPLICACION  reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    DIVISION        reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MODULO          reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MAYOR           reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENOR           reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MAYORIGUAL      reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENORIGUAL      reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    IGUALIGUAL      reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    DIFERENTE       reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    AND             reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    OR              reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PUNTO           reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    AS              reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    LLAVEIZQ        reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PTCOMA          reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PDER            reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    COMA            reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    CORDER          reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    LLAVEDER        reduce using rule 119 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)


state 281

    (120) tostring -> expresion PUNTO TOOWNED PIZQ PDER .

    MAS             reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENOS           reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MULTIPLICACION  reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    DIVISION        reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MODULO          reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MAYOR           reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENOR           reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MAYORIGUAL      reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENORIGUAL      reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    IGUALIGUAL      reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    DIFERENTE       reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    AND             reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    OR              reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PUNTO           reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    AS              reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    LLAVEIZQ        reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PTCOMA          reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PDER            reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    COMA            reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    CORDER          reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    LLAVEDER        reduce using rule 120 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)


state 282

    (124) abs -> expresion PUNTO ABS PIZQ PDER .

    MAS             reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MENOS           reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MULTIPLICACION  reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    DIVISION        reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MODULO          reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MAYOR           reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MENOR           reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MAYORIGUAL      reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MENORIGUAL      reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    IGUALIGUAL      reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    DIFERENTE       reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    AND             reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    OR              reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    PUNTO           reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    AS              reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    LLAVEIZQ        reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    PTCOMA          reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    PDER            reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    COMA            reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    CORDER          reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)
    LLAVEDER        reduce using rule 124 (abs -> expresion PUNTO ABS PIZQ PDER .)


state 283

    (125) sqrt -> expresion PUNTO SQRT PIZQ PDER .

    MAS             reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MENOS           reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MULTIPLICACION  reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    DIVISION        reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MODULO          reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MAYOR           reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MENOR           reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MAYORIGUAL      reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MENORIGUAL      reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    IGUALIGUAL      reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    DIFERENTE       reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    AND             reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    OR              reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    PUNTO           reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    AS              reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    LLAVEIZQ        reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    PTCOMA          reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    PDER            reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    COMA            reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    CORDER          reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    LLAVEDER        reduce using rule 125 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)


state 284

    (111) len -> expresion PUNTO LEN PIZQ PDER .

    MAS             reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    MENOS           reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    MULTIPLICACION  reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    DIVISION        reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    MODULO          reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    MAYOR           reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    MENOR           reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    MAYORIGUAL      reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    MENORIGUAL      reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    IGUALIGUAL      reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    DIFERENTE       reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    AND             reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    OR              reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    PUNTO           reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    AS              reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    LLAVEIZQ        reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    PTCOMA          reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    PDER            reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    COMA            reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    CORDER          reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)
    LLAVEDER        reduce using rule 111 (len -> expresion PUNTO LEN PIZQ PDER .)


state 285

    (112) capacity -> expresion PUNTO CAPACITY PIZQ PDER .

    MAS             reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MENOS           reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MULTIPLICACION  reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    DIVISION        reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MODULO          reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MAYOR           reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MENOR           reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MAYORIGUAL      reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MENORIGUAL      reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    IGUALIGUAL      reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    DIFERENTE       reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    AND             reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    OR              reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    PUNTO           reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    AS              reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    LLAVEIZQ        reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    PTCOMA          reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    PDER            reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    COMA            reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    CORDER          reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    LLAVEDER        reduce using rule 112 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)


state 286

    (105) contains -> expresion PUNTO CONTAINS PIZQ Y . expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 309
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 287

    (110) clone -> expresion PUNTO CLONE PIZQ PDER .

    MAS             reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MENOS           reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MULTIPLICACION  reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    DIVISION        reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MODULO          reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MAYOR           reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MENOR           reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MAYORIGUAL      reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MENORIGUAL      reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    IGUALIGUAL      reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    DIFERENTE       reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    AND             reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    OR              reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    PUNTO           reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    AS              reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    LLAVEIZQ        reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    PTCOMA          reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    PDER            reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    COMA            reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    CORDER          reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    LLAVEDER        reduce using rule 110 (clone -> expresion PUNTO CLONE PIZQ PDER .)


state 288

    (104) remove -> expresion PUNTO REMOVE PIZQ expresion . PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 310
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 289

    (76) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ . expresion COMA expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 311
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 290

    (77) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ . expresion COMA expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 312
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 291

    (106) vector -> VEC NOT CORIZQ lista_expresiones CORDER .

    MAS             reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MENOS           reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MULTIPLICACION  reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    DIVISION        reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MODULO          reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MAYOR           reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MENOR           reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MAYORIGUAL      reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MENORIGUAL      reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    IGUALIGUAL      reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    DIFERENTE       reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    AND             reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    OR              reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    PUNTO           reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    AS              reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    LLAVEIZQ        reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    PTCOMA          reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    PDER            reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    COMA            reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    CORDER          reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    LLAVEDER        reduce using rule 106 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)


state 292

    (107) vector -> VEC NOT CORIZQ expresion PTCOMA . expresion CORDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 313
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 293

    (108) vector -> VECM DOBLEPT DOBLEPT NEW PIZQ . PDER

    PDER            shift and go to state 314


state 294

    (109) vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ . expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 315
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 295

    (65) for -> FOR ID IN expresion PUNTO PUNTO . expresion bloque
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 316
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 296

    (66) for -> FOR ID IN expresion PUNTO CHARS . PIZQ PDER bloque

    PIZQ            shift and go to state 317


state 297

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA . expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 318
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 298

    (50) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion . CORDER PTCOMA expresion CORDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 319
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 299

    (49) dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .

    PDER            reduce using rule 49 (dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .)
    COMA            reduce using rule 49 (dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 49 (dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .)


state 300

    (40) declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 40 (declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 301

    (44) declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 44 (declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 302

    (46) declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato . MAYOR IGUAL expresion

    MAYOR           shift and go to state 320


state 303

    (47) declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR . IGUAL expresion

    IGUAL           shift and go to state 321


state 304

    (69) insert -> ID PUNTO INSERT PIZQ expresion COMA expresion . PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 322
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 305

    (126) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (53) if_i -> IF expresion . bloque
    (54) if_i -> IF expresion . bloque ELSE bloque
    (55) if_i -> IF expresion . bloque listaelseI
    (56) if_i -> IF expresion . bloque listaelseI ELSE bloque
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 323
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156

    bloque                         shift and go to state 141

state 306

    (126) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .
    (127) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER . ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER . listaelse
    (129) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER . listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (130) listaelse -> . listaelse elseif
    (131) listaelse -> . elseif
    (132) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER

    MAS             reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOS           reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIVISION        reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MODULO          reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYOR           reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOR           reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIFERENTE       reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    AND             reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    OR              reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PUNTO           reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    AS              reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PTCOMA          reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PDER            reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    COMA            reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    CORDER          reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEDER        reduce using rule 126 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    ELSE            shift and go to state 324

    listaelse                      shift and go to state 325
    elseif                         shift and go to state 326

state 307

    (114) accesoarray -> ID ubicaciones .
    (39) asignacionA -> ID ubicaciones . IGUAL expresion
    (115) ubicaciones -> ubicaciones . ubicacion
    (117) ubicacion -> . CORIZQ expresion CORDER

    LLAVEDER        reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MAS             reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MENOS           reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MULTIPLICACION  reduce using rule 114 (accesoarray -> ID ubicaciones .)
    DIVISION        reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MODULO          reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MAYOR           reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MENOR           reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MAYORIGUAL      reduce using rule 114 (accesoarray -> ID ubicaciones .)
    MENORIGUAL      reduce using rule 114 (accesoarray -> ID ubicaciones .)
    IGUALIGUAL      reduce using rule 114 (accesoarray -> ID ubicaciones .)
    DIFERENTE       reduce using rule 114 (accesoarray -> ID ubicaciones .)
    AND             reduce using rule 114 (accesoarray -> ID ubicaciones .)
    OR              reduce using rule 114 (accesoarray -> ID ubicaciones .)
    PUNTO           reduce using rule 114 (accesoarray -> ID ubicaciones .)
    AS              reduce using rule 114 (accesoarray -> ID ubicaciones .)
    IGUAL           shift and go to state 137
    CORIZQ          shift and go to state 83

    ubicacion                      shift and go to state 138

state 308

    (59) elseifI -> ELSE IF expresion bloque .

    ELSE            reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    LLAVEDER        reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    PRINTLN         reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    LET             reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    ID              reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    IF              reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    RETURN          reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    LOOP            reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    BREAK           reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    WHILE           reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    CONTINUE        reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    FOR             reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    MENOS           reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    I64             reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    F64             reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    PIZQ            reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    NOT             reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    ENTERO          reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    DECIMAL         reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    CARACTER        reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    CADENA          reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    TRUE            reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    FALSE           reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    CORIZQ          reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    Y               reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    VEC             reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)
    VECM            reduce using rule 59 (elseifI -> ELSE IF expresion bloque .)


state 309

    (105) contains -> expresion PUNTO CONTAINS PIZQ Y expresion . PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 327
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 310

    (104) remove -> expresion PUNTO REMOVE PIZQ expresion PDER .

    MAS             reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MENOS           reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    DIVISION        reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MODULO          reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MAYOR           reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MENOR           reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    AND             reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    OR              reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    PUNTO           reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    AS              reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    LLAVEIZQ        reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    PTCOMA          reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    PDER            reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    COMA            reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    CORDER          reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    LLAVEDER        reduce using rule 104 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)


state 311

    (76) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion . COMA expresion PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    COMA            shift and go to state 328
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 312

    (77) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion . COMA expresion PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    COMA            shift and go to state 329
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 313

    (107) vector -> VEC NOT CORIZQ expresion PTCOMA expresion . CORDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 330
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 314

    (108) vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .

    MAS             reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MENOS           reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MULTIPLICACION  reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    DIVISION        reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MODULO          reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MAYOR           reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MENOR           reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MAYORIGUAL      reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MENORIGUAL      reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    IGUALIGUAL      reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    DIFERENTE       reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    AND             reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    OR              reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    PUNTO           reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    AS              reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    LLAVEIZQ        reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    PTCOMA          reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    PDER            reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    COMA            reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    CORDER          reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    LLAVEDER        reduce using rule 108 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)


state 315

    (109) vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion . PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 331
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 316

    (65) for -> FOR ID IN expresion PUNTO PUNTO expresion . bloque
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 332

state 317

    (66) for -> FOR ID IN expresion PUNTO CHARS PIZQ . PDER bloque

    PDER            shift and go to state 333


state 318

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion . CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 334
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 319

    (50) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 335


state 320

    (46) declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR . IGUAL expresion

    IGUAL           shift and go to state 336


state 321

    (47) declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 337
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 322

    (69) insert -> ID PUNTO INSERT PIZQ expresion COMA expresion PDER .

    PTCOMA          reduce using rule 69 (insert -> ID PUNTO INSERT PIZQ expresion COMA expresion PDER .)


state 323

    (126) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER
    (127) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER listaelse
    (129) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (18) bloque -> LLAVEIZQ . LLAVEDER
    (19) bloque -> LLAVEIZQ . instrucciones LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (60) loop -> . LOOP bloque
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    LLAVEDER        shift and go to state 30
    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    ID              shift and go to state 49
    IF              shift and go to state 50
    RETURN          shift and go to state 51
    LOOP            shift and go to state 52
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    instrucciones                  shift and go to state 338
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 324

    (127) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE . LLAVEIZQ instrucciones expresion LLAVEDER
    (132) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER

    LLAVEIZQ        shift and go to state 340
    IF              shift and go to state 339


state 325

    (128) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .
    (129) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse . ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (130) listaelse -> listaelse . elseif
    (132) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER

    MAS             reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MENOS           reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MULTIPLICACION  reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    DIVISION        reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MODULO          reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MAYOR           reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MENOR           reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MAYORIGUAL      reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MENORIGUAL      reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    IGUALIGUAL      reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    DIFERENTE       reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    AND             reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    OR              reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    PUNTO           reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    AS              reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    LLAVEIZQ        reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    PTCOMA          reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    PDER            reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    COMA            reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    CORDER          reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    LLAVEDER        reduce using rule 128 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    ELSE            shift and go to state 341

    elseif                         shift and go to state 342

state 326

    (131) listaelse -> elseif .

    ELSE            reduce using rule 131 (listaelse -> elseif .)
    MAS             reduce using rule 131 (listaelse -> elseif .)
    MENOS           reduce using rule 131 (listaelse -> elseif .)
    MULTIPLICACION  reduce using rule 131 (listaelse -> elseif .)
    DIVISION        reduce using rule 131 (listaelse -> elseif .)
    MODULO          reduce using rule 131 (listaelse -> elseif .)
    MAYOR           reduce using rule 131 (listaelse -> elseif .)
    MENOR           reduce using rule 131 (listaelse -> elseif .)
    MAYORIGUAL      reduce using rule 131 (listaelse -> elseif .)
    MENORIGUAL      reduce using rule 131 (listaelse -> elseif .)
    IGUALIGUAL      reduce using rule 131 (listaelse -> elseif .)
    DIFERENTE       reduce using rule 131 (listaelse -> elseif .)
    AND             reduce using rule 131 (listaelse -> elseif .)
    OR              reduce using rule 131 (listaelse -> elseif .)
    PUNTO           reduce using rule 131 (listaelse -> elseif .)
    AS              reduce using rule 131 (listaelse -> elseif .)
    LLAVEIZQ        reduce using rule 131 (listaelse -> elseif .)
    PTCOMA          reduce using rule 131 (listaelse -> elseif .)
    PDER            reduce using rule 131 (listaelse -> elseif .)
    COMA            reduce using rule 131 (listaelse -> elseif .)
    CORDER          reduce using rule 131 (listaelse -> elseif .)
    LLAVEDER        reduce using rule 131 (listaelse -> elseif .)


state 327

    (105) contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .

    MAS             reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MENOS           reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MULTIPLICACION  reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    DIVISION        reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MODULO          reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MAYOR           reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MENOR           reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MAYORIGUAL      reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MENORIGUAL      reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    IGUALIGUAL      reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    DIFERENTE       reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    AND             reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    OR              reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    PUNTO           reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    AS              reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    LLAVEIZQ        reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    PTCOMA          reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    PDER            reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    COMA            reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    CORDER          reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    LLAVEDER        reduce using rule 105 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)


state 328

    (76) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA . expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 343
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 329

    (77) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA . expresion PDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 344
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 330

    (107) vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .

    MAS             reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MENOS           reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MULTIPLICACION  reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    DIVISION        reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MODULO          reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MAYOR           reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MENOR           reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MAYORIGUAL      reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MENORIGUAL      reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    IGUALIGUAL      reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    DIFERENTE       reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    AND             reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    OR              reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    PUNTO           reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    AS              reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    LLAVEIZQ        reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    PDER            reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    COMA            reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    CORDER          reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    LLAVEDER        reduce using rule 107 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)


state 331

    (109) vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .

    MAS             reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MENOS           reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    DIVISION        reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MODULO          reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MAYOR           reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MENOR           reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    AND             reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    OR              reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    PUNTO           reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    AS              reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    LLAVEIZQ        reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    PTCOMA          reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    PDER            reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    COMA            reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    CORDER          reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    LLAVEDER        reduce using rule 109 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)


state 332

    (65) for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .

    LLAVEDER        reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    PRINTLN         reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    LET             reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    ID              reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    IF              reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    RETURN          reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    LOOP            reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    BREAK           reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    WHILE           reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CONTINUE        reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    FOR             reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    MENOS           reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    I64             reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    F64             reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    PIZQ            reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    NOT             reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    ENTERO          reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    DECIMAL         reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CARACTER        reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CADENA          reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    TRUE            reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    FALSE           reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CORIZQ          reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    Y               reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    VEC             reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    VECM            reduce using rule 65 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)


state 333

    (66) for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER . bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 345

state 334

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER . PTCOMA expresion CORDER PTCOMA expresion CORDER

    PTCOMA          shift and go to state 346


state 335

    (50) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA . expresion CORDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 347
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 336

    (46) declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL . expresion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 348
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 337

    (47) declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 47 (declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 338

    (126) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER
    (127) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER listaelse
    (129) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (19) bloque -> LLAVEIZQ instrucciones . LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    LLAVEDER        shift and go to state 63
    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 277
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 273
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117
    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    RETURN          shift and go to state 51
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    expresion                      shift and go to state 274
    instruccion                    shift and go to state 64
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 275
    loop                           shift and go to state 276
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 339

    (132) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 349
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 340

    (127) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ . instrucciones expresion LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (60) loop -> . LOOP bloque
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    ID              shift and go to state 49
    IF              shift and go to state 50
    RETURN          shift and go to state 51
    LOOP            shift and go to state 52
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    instrucciones                  shift and go to state 350
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 341

    (129) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE . LLAVEIZQ instrucciones expresion LLAVEDER
    (132) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER

    LLAVEIZQ        shift and go to state 351
    IF              shift and go to state 339


state 342

    (130) listaelse -> listaelse elseif .

    ELSE            reduce using rule 130 (listaelse -> listaelse elseif .)
    MAS             reduce using rule 130 (listaelse -> listaelse elseif .)
    MENOS           reduce using rule 130 (listaelse -> listaelse elseif .)
    MULTIPLICACION  reduce using rule 130 (listaelse -> listaelse elseif .)
    DIVISION        reduce using rule 130 (listaelse -> listaelse elseif .)
    MODULO          reduce using rule 130 (listaelse -> listaelse elseif .)
    MAYOR           reduce using rule 130 (listaelse -> listaelse elseif .)
    MENOR           reduce using rule 130 (listaelse -> listaelse elseif .)
    MAYORIGUAL      reduce using rule 130 (listaelse -> listaelse elseif .)
    MENORIGUAL      reduce using rule 130 (listaelse -> listaelse elseif .)
    IGUALIGUAL      reduce using rule 130 (listaelse -> listaelse elseif .)
    DIFERENTE       reduce using rule 130 (listaelse -> listaelse elseif .)
    AND             reduce using rule 130 (listaelse -> listaelse elseif .)
    OR              reduce using rule 130 (listaelse -> listaelse elseif .)
    PUNTO           reduce using rule 130 (listaelse -> listaelse elseif .)
    AS              reduce using rule 130 (listaelse -> listaelse elseif .)
    LLAVEIZQ        reduce using rule 130 (listaelse -> listaelse elseif .)
    PTCOMA          reduce using rule 130 (listaelse -> listaelse elseif .)
    PDER            reduce using rule 130 (listaelse -> listaelse elseif .)
    COMA            reduce using rule 130 (listaelse -> listaelse elseif .)
    CORDER          reduce using rule 130 (listaelse -> listaelse elseif .)
    LLAVEDER        reduce using rule 130 (listaelse -> listaelse elseif .)


state 343

    (76) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion . PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 352
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 344

    (77) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion . PDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 353
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 345

    (66) for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .

    LLAVEDER        reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    PRINTLN         reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    LET             reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    ID              reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    IF              reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    RETURN          reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    LOOP            reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    BREAK           reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    WHILE           reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CONTINUE        reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    FOR             reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    MENOS           reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    I64             reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    F64             reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    PIZQ            reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    NOT             reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    ENTERO          reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    DECIMAL         reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CARACTER        reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CADENA          reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    TRUE            reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    FALSE           reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CORIZQ          reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    Y               reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    VEC             reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    VECM            reduce using rule 66 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)


state 346

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA . expresion CORDER PTCOMA expresion CORDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 354
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 347

    (50) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion . CORDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 355
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 348

    (46) declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 46 (declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 349

    (132) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEIZQ        shift and go to state 356
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 350

    (127) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones . expresion LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 277
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 273
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117
    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    RETURN          shift and go to state 51
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    expresion                      shift and go to state 357
    instruccion                    shift and go to state 64
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 275
    loop                           shift and go to state 276
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 351

    (129) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ . instrucciones expresion LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (60) loop -> . LOOP bloque
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    ID              shift and go to state 49
    IF              shift and go to state 50
    RETURN          shift and go to state 51
    LOOP            shift and go to state 52
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    instrucciones                  shift and go to state 358
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 352

    (76) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .

    MAS             reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENOS           reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MULTIPLICACION  reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    DIVISION        reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MODULO          reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MAYOR           reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENOR           reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MAYORIGUAL      reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENORIGUAL      reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    IGUALIGUAL      reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    DIFERENTE       reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    AND             reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    OR              reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PUNTO           reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    AS              reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    LLAVEIZQ        reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PTCOMA          reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PDER            reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    COMA            reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    CORDER          reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    LLAVEDER        reduce using rule 76 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)


state 353

    (77) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .

    MAS             reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENOS           reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MULTIPLICACION  reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    DIVISION        reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MODULO          reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MAYOR           reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENOR           reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MAYORIGUAL      reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENORIGUAL      reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    IGUALIGUAL      reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    DIFERENTE       reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    AND             reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    OR              reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PUNTO           reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    AS              reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    LLAVEIZQ        reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PTCOMA          reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PDER            reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    COMA            reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    CORDER          reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    LLAVEDER        reduce using rule 77 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)


state 354

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion . CORDER PTCOMA expresion CORDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 359
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 355

    (50) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .

    PDER            reduce using rule 50 (dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    COMA            reduce using rule 50 (dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 50 (dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .)


state 356

    (132) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (60) loop -> . LOOP bloque
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    ID              shift and go to state 49
    IF              shift and go to state 50
    RETURN          shift and go to state 51
    LOOP            shift and go to state 52
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    instrucciones                  shift and go to state 360
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 357

    (127) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion . LLAVEDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEDER        shift and go to state 361
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 358

    (129) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones . expresion LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 277
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 273
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117
    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    RETURN          shift and go to state 51
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    expresion                      shift and go to state 362
    instruccion                    shift and go to state 64
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 275
    loop                           shift and go to state 276
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 359

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 363


state 360

    (132) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . insert PTCOMA
    (34) instruccion -> . asignacionA PTCOMA
    (35) instruccion -> . push PTCOMA
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (36) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (40) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (41) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (42) declaracion -> . LET MUT ID IGUAL expresion
    (43) declaracion -> . LET ID IGUAL expresion
    (44) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (45) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (46) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (47) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (53) if_i -> . IF expresion bloque
    (54) if_i -> . IF expresion bloque ELSE bloque
    (55) if_i -> . IF expresion bloque listaelseI
    (56) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (37) return -> . RETURN
    (38) return -> . RETURN expresion
    (61) break -> . BREAK
    (62) break -> . BREAK expresion
    (63) while -> . WHILE expresion bloque
    (64) continue -> . CONTINUE
    (65) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (66) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (67) for -> . FOR ID IN expresion bloque
    (69) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (39) asignacionA -> . ID ubicaciones IGUAL expresion
    (68) push -> . ID PUNTO PUSH PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 277
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 273
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117
    PRINTLN         shift and go to state 47
    LET             shift and go to state 48
    RETURN          shift and go to state 51
    BREAK           shift and go to state 53
    WHILE           shift and go to state 54
    CONTINUE        shift and go to state 55
    FOR             shift and go to state 56

    expresion                      shift and go to state 364
    instruccion                    shift and go to state 64
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 275
    loop                           shift and go to state 276
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    insert                         shift and go to state 44
    asignacionA                    shift and go to state 45
    push                           shift and go to state 46

state 361

    (127) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .

    MAS             reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOS           reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIVISION        reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MODULO          reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYOR           reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOR           reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIFERENTE       reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    AND             reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    OR              reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PUNTO           reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    AS              reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PTCOMA          reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PDER            reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    COMA            reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    CORDER          reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEDER        reduce using rule 127 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)


state 362

    (129) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion . LLAVEDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEDER        shift and go to state 365
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 363

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA . expresion CORDER
    (70) expresion -> . MENOS expresion
    (71) expresion -> . expresion MAS expresion
    (72) expresion -> . expresion MENOS expresion
    (73) expresion -> . expresion MULTIPLICACION expresion
    (74) expresion -> . expresion DIVISION expresion
    (75) expresion -> . expresion MODULO expresion
    (76) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (77) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (78) expresion -> . PIZQ expresion PDER
    (79) expresion -> . expresion MAYOR expresion
    (80) expresion -> . expresion MENOR expresion
    (81) expresion -> . expresion MAYORIGUAL expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion IGUALIGUAL expresion
    (84) expresion -> . expresion DIFERENTE expresion
    (85) expresion -> . expresion AND expresion
    (86) expresion -> . expresion OR expresion
    (87) expresion -> . NOT expresion
    (88) expresion -> . tostring
    (89) expresion -> . as
    (90) expresion -> . abs
    (91) expresion -> . sqrt
    (92) expresion -> . if_e
    (93) expresion -> . llamadaF
    (94) expresion -> . loop
    (95) expresion -> . arraycontenido
    (96) expresion -> . accesoarray
    (97) expresion -> . referencia
    (98) expresion -> . len
    (99) expresion -> . capacity
    (100) expresion -> . contains
    (101) expresion -> . clone
    (102) expresion -> . vector
    (103) expresion -> . remove
    (133) expresion -> . ENTERO
    (134) expresion -> . DECIMAL
    (135) expresion -> . ID
    (136) expresion -> . CARACTER
    (137) expresion -> . CADENA
    (138) expresion -> . TRUE
    (139) expresion -> . FALSE
    (119) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (120) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (121) as -> . expresion AS I64
    (122) as -> . expresion AS F64
    (123) as -> . expresion AS USIZE
    (124) abs -> . expresion PUNTO ABS PIZQ PDER
    (125) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (126) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (127) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (128) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (129) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (60) loop -> . LOOP bloque
    (118) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (114) accesoarray -> . ID ubicaciones
    (113) referencia -> . Y MUT ID
    (111) len -> . expresion PUNTO LEN PIZQ PDER
    (112) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (105) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> . expresion PUNTO CLONE PIZQ PDER
    (106) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (107) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (108) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (109) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (104) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 86
    I64             shift and go to state 87
    F64             shift and go to state 89
    PIZQ            shift and go to state 88
    NOT             shift and go to state 90
    ENTERO          shift and go to state 107
    DECIMAL         shift and go to state 108
    ID              shift and go to state 109
    CARACTER        shift and go to state 110
    CADENA          shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    IF              shift and go to state 84
    LOOP            shift and go to state 52
    CORIZQ          shift and go to state 114
    Y               shift and go to state 115
    VEC             shift and go to state 116
    VECM            shift and go to state 117

    expresion                      shift and go to state 366
    tostring                       shift and go to state 91
    as                             shift and go to state 92
    abs                            shift and go to state 93
    sqrt                           shift and go to state 94
    if_e                           shift and go to state 95
    llamadaF                       shift and go to state 96
    loop                           shift and go to state 97
    arraycontenido                 shift and go to state 98
    accesoarray                    shift and go to state 99
    referencia                     shift and go to state 100
    len                            shift and go to state 101
    capacity                       shift and go to state 102
    contains                       shift and go to state 103
    clone                          shift and go to state 104
    vector                         shift and go to state 105
    remove                         shift and go to state 106

state 364

    (132) elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEDER        shift and go to state 367
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 365

    (129) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .

    MAS             reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOS           reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIVISION        reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MODULO          reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYOR           reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOR           reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIFERENTE       reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    AND             reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    OR              reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PUNTO           reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    AS              reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PTCOMA          reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PDER            reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    COMA            reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    CORDER          reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEDER        reduce using rule 129 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)


state 366

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion . CORDER
    (71) expresion -> expresion . MAS expresion
    (72) expresion -> expresion . MENOS expresion
    (73) expresion -> expresion . MULTIPLICACION expresion
    (74) expresion -> expresion . DIVISION expresion
    (75) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . MAYOR expresion
    (80) expresion -> expresion . MENOR expresion
    (81) expresion -> expresion . MAYORIGUAL expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . IGUALIGUAL expresion
    (84) expresion -> expresion . DIFERENTE expresion
    (85) expresion -> expresion . AND expresion
    (86) expresion -> expresion . OR expresion
    (119) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (120) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (121) as -> expresion . AS I64
    (122) as -> expresion . AS F64
    (123) as -> expresion . AS USIZE
    (124) abs -> expresion . PUNTO ABS PIZQ PDER
    (125) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (111) len -> expresion . PUNTO LEN PIZQ PDER
    (112) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (105) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (110) clone -> expresion . PUNTO CLONE PIZQ PDER
    (104) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 368
    MAS             shift and go to state 142
    MENOS           shift and go to state 143
    MULTIPLICACION  shift and go to state 144
    DIVISION        shift and go to state 145
    MODULO          shift and go to state 146
    MAYOR           shift and go to state 147
    MENOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENORIGUAL      shift and go to state 150
    IGUALIGUAL      shift and go to state 151
    DIFERENTE       shift and go to state 152
    AND             shift and go to state 153
    OR              shift and go to state 154
    PUNTO           shift and go to state 155
    AS              shift and go to state 156


state 367

    (132) elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .

    ELSE            reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAS             reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOS           reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIVISION        reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MODULO          reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYOR           reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOR           reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIFERENTE       reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    AND             reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    OR              reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PUNTO           reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    AS              reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PTCOMA          reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PDER            reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    COMA            reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    CORDER          reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEDER        reduce using rule 132 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)


state 368

    (51) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .

    PDER            reduce using rule 51 (dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    COMA            reduce using rule 51 (dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 51 (dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 277 resolved as shift
WARNING: reduce/reduce conflict in state 276 resolved using rule (instruccion -> loop)
WARNING: rejected rule (expresion -> loop) in state 276
