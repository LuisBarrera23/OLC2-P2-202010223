Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GBAJO

Grammar

Rule 0     S' -> init
Rule 1     init -> funciones_structs
Rule 2     funciones_structs -> funciones_structs funcion_struct
Rule 3     funciones_structs -> funcion_struct
Rule 4     funcion_struct -> funcion
Rule 5     funcion -> FN ID PIZQ PDER bloque
Rule 6     funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque
Rule 7     funcion -> FN ID PIZQ parametros PDER bloque
Rule 8     funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque
Rule 9     parametros -> parametros COMA parametro
Rule 10    parametros -> parametro
Rule 11    parametro -> ID DOBLEPT tipo_dato
Rule 12    parametro -> ID DOBLEPT Y MUT dimensiones
Rule 13    parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR
Rule 14    llamadaF -> ID PIZQ PDER
Rule 15    llamadaF -> ID PIZQ lista_expresiones PDER
Rule 16    lista_expresiones -> lista_expresiones COMA expresion
Rule 17    lista_expresiones -> expresion
Rule 18    bloque -> LLAVEIZQ LLAVEDER
Rule 19    bloque -> LLAVEIZQ instrucciones LLAVEDER
Rule 20    instrucciones -> instrucciones instruccion
Rule 21    instrucciones -> instruccion
Rule 22    instruccion -> print PTCOMA
Rule 23    instruccion -> declaracion PTCOMA
Rule 24    instruccion -> asignacion PTCOMA
Rule 25    instruccion -> if_i
Rule 26    instruccion -> llamadaF PTCOMA
Rule 27    instruccion -> return PTCOMA
Rule 28    instruccion -> loop
Rule 29    instruccion -> break PTCOMA
Rule 30    instruccion -> while
Rule 31    instruccion -> continue PTCOMA
Rule 32    instruccion -> for
Rule 33    instruccion -> match
Rule 34    instruccion -> insert PTCOMA
Rule 35    instruccion -> asignacionA PTCOMA
Rule 36    instruccion -> push PTCOMA
Rule 37    instruccion1 -> print COMA
Rule 38    instruccion1 -> declaracion COMA
Rule 39    instruccion1 -> asignacion COMA
Rule 40    instruccion1 -> if_i COMA
Rule 41    instruccion1 -> llamadaF COMA
Rule 42    instruccion1 -> return COMA
Rule 43    instruccion1 -> loop COMA
Rule 44    instruccion1 -> break COMA
Rule 45    instruccion1 -> while COMA
Rule 46    instruccion1 -> continue COMA
Rule 47    instruccion1 -> for COMA
Rule 48    instruccion1 -> insert COMA
Rule 49    instruccion1 -> asignacionA COMA
Rule 50    instruccion1 -> push COMA
Rule 51    print -> PRINTLN NOT PIZQ lista_expresiones PDER
Rule 52    return -> RETURN
Rule 53    return -> RETURN expresion
Rule 54    asignacionA -> ID ubicaciones IGUAL expresion
Rule 55    declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion
Rule 56    declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion
Rule 57    declaracion -> LET MUT ID IGUAL expresion
Rule 58    declaracion -> LET ID IGUAL expresion
Rule 59    declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion
Rule 60    declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion
Rule 61    declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
Rule 62    declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
Rule 63    dimensiones -> CORIZQ tipo_dato CORDER
Rule 64    dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER
Rule 65    dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
Rule 66    dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
Rule 67    asignacion -> ID IGUAL expresion
Rule 68    if_i -> IF expresion bloque
Rule 69    if_i -> IF expresion bloque ELSE bloque
Rule 70    if_i -> IF expresion bloque listaelseI
Rule 71    if_i -> IF expresion bloque listaelseI ELSE bloque
Rule 72    listaelseI -> listaelseI elseifI
Rule 73    listaelseI -> elseifI
Rule 74    elseifI -> ELSE IF expresion bloque
Rule 75    match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
Rule 76    loop -> LOOP bloque
Rule 77    break -> BREAK
Rule 78    break -> BREAK expresion
Rule 79    while -> WHILE expresion bloque
Rule 80    continue -> CONTINUE
Rule 81    for -> FOR ID IN expresion PUNTO PUNTO expresion bloque
Rule 82    for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
Rule 83    for -> FOR ID IN expresion bloque
Rule 84    push -> ID PUNTO PUSH PIZQ expresion PDER
Rule 85    insert -> ID PUNTO INSERT PIZQ expresion COMA expresion PDER
Rule 86    expresion -> MENOS expresion
Rule 87    expresion -> expresion MAS expresion
Rule 88    expresion -> expresion MENOS expresion
Rule 89    expresion -> expresion MULTIPLICACION expresion
Rule 90    expresion -> expresion DIVISION expresion
Rule 91    expresion -> expresion MODULO expresion
Rule 92    expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
Rule 93    expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
Rule 94    expresion -> PIZQ expresion PDER
Rule 95    expresion -> expresion MAYOR expresion
Rule 96    expresion -> expresion MENOR expresion
Rule 97    expresion -> expresion MAYORIGUAL expresion
Rule 98    expresion -> expresion MENORIGUAL expresion
Rule 99    expresion -> expresion IGUALIGUAL expresion
Rule 100   expresion -> expresion DIFERENTE expresion
Rule 101   expresion -> expresion AND expresion
Rule 102   expresion -> expresion OR expresion
Rule 103   expresion -> NOT expresion
Rule 104   expresion -> tostring
Rule 105   expresion -> as
Rule 106   expresion -> abs
Rule 107   expresion -> sqrt
Rule 108   expresion -> if_e
Rule 109   expresion -> llamadaF
Rule 110   expresion -> loop
Rule 111   expresion -> arraycontenido
Rule 112   expresion -> accesoarray
Rule 113   expresion -> referencia
Rule 114   expresion -> len
Rule 115   expresion -> capacity
Rule 116   expresion -> contains
Rule 117   expresion -> clone
Rule 118   expresion -> vector
Rule 119   expresion -> remove
Rule 120   remove -> expresion PUNTO REMOVE PIZQ expresion PDER
Rule 121   contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER
Rule 122   vector -> VEC NOT CORIZQ lista_expresiones CORDER
Rule 123   vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER
Rule 124   vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER
Rule 125   vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
Rule 126   clone -> expresion PUNTO CLONE PIZQ PDER
Rule 127   len -> expresion PUNTO LEN PIZQ PDER
Rule 128   capacity -> expresion PUNTO CAPACITY PIZQ PDER
Rule 129   referencia -> Y MUT ID
Rule 130   accesoarray -> ID ubicaciones
Rule 131   ubicaciones -> ubicaciones ubicacion
Rule 132   ubicaciones -> ubicacion
Rule 133   ubicacion -> CORIZQ expresion CORDER
Rule 134   arraycontenido -> CORIZQ lista_expresiones CORDER
Rule 135   tostring -> expresion PUNTO TOSTRING PIZQ PDER
Rule 136   tostring -> expresion PUNTO TOOWNED PIZQ PDER
Rule 137   as -> expresion AS I64
Rule 138   as -> expresion AS F64
Rule 139   as -> expresion AS USIZE
Rule 140   abs -> expresion PUNTO ABS PIZQ PDER
Rule 141   sqrt -> expresion PUNTO SQRT PIZQ PDER
Rule 142   if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
Rule 143   if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
Rule 144   if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
Rule 145   if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
Rule 146   listaelse -> listaelse elseif
Rule 147   listaelse -> elseif
Rule 148   elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
Rule 149   expresion -> ENTERO
Rule 150   expresion -> DECIMAL
Rule 151   expresion -> ID
Rule 152   expresion -> CARACTER
Rule 153   expresion -> CADENA
Rule 154   expresion -> TRUE
Rule 155   expresion -> FALSE
Rule 156   tipo_dato -> I64
Rule 157   tipo_dato -> F64
Rule 158   tipo_dato -> BOOL
Rule 159   tipo_dato -> CHAR
Rule 160   tipo_dato -> str
Rule 161   tipo_dato -> STRING
Rule 162   tipo_dato -> USIZE
Rule 163   str -> Y STR

Terminals, with rules where they appear

ABS                  : 140
AND                  : 101
AS                   : 137 138 139
BOOL                 : 158
BREAK                : 77 78
CADENA               : 153
CAPACITY             : 128
CARACTER             : 152
CHAR                 : 159
CHARS                : 82
CLONE                : 126
COMA                 : 9 16 37 38 39 40 41 42 43 44 45 46 47 48 49 50 85 92 93
CONTAINS             : 121
CONTINUE             : 80
CORDER               : 63 64 65 65 66 66 66 122 123 133 134
CORIZQ               : 63 64 65 65 66 66 66 122 123 133 134
DECIMAL              : 150
DIFERENTE            : 100
DIVISION             : 90
DOBLEPT              : 11 12 13 55 56 59 60 61 62 92 92 93 93 124 124 125 125
ELSE                 : 69 71 74 143 145 148
ENTERO               : 149
F64                  : 93 138 157
FALSE                : 155
FLECHA               : 6 8
FN                   : 5 6 7 8
FOR                  : 81 82 83
GBAJO                : 
I64                  : 92 137 156
ID                   : 5 6 7 8 11 12 13 14 15 54 55 56 57 58 59 60 61 62 67 75 81 82 83 84 85 129 130 151
IF                   : 68 69 70 71 74 142 143 144 145 148
IGUAL                : 54 55 56 57 58 59 60 61 62 67 75 75 75
IGUALIGUAL           : 99
IN                   : 81 82 83
INSERT               : 85
LEN                  : 127
LET                  : 55 56 57 58 59 60 61 62
LLAVEDER             : 18 19 75 142 143 143 144 145 145 148
LLAVEIZQ             : 18 19 75 142 143 143 144 145 145 148
LOOP                 : 76
MAS                  : 87
MATCH                : 75
MAYOR                : 13 61 62 75 75 75 95
MAYORIGUAL           : 97
MENOR                : 13 61 62 96
MENORIGUAL           : 98
MENOS                : 86 88
MODULO               : 91
MULTIPLICACION       : 89
MUT                  : 12 13 55 57 59 61 129
NEW                  : 124
NOT                  : 51 103 122 123
OR                   : 102
PDER                 : 5 6 7 8 14 15 51 82 84 85 92 93 94 120 121 124 125 126 127 128 135 136 140 141
PIZQ                 : 5 6 7 8 14 15 51 82 84 85 92 93 94 120 121 124 125 126 127 128 135 136 140 141
POW                  : 92
POWF                 : 93
PRINTLN              : 51
PTCOMA               : 22 23 24 26 27 29 31 34 35 36 64 65 65 66 66 66 123
PUNTO                : 81 81 82 84 85 120 121 126 127 128 135 136 140 141
PUSH                 : 84
REMOVE               : 120
RETURN               : 52 53
SQRT                 : 141
STR                  : 163
STRING               : 161
TOOWNED              : 136
TOSTRING             : 135
TRUE                 : 154
USIZE                : 139 162
VEC                  : 122 123
VECM                 : 13 61 62 124 125
WCAPACITY            : 125
WHILE                : 79
Y                    : 12 13 121 129 163
error                : 

Nonterminals, with rules where they appear

abs                  : 106
accesoarray          : 112
arraycontenido       : 111
as                   : 105
asignacion           : 24 39
asignacionA          : 35 49
bloque               : 5 6 7 8 68 69 69 70 71 71 74 76 79 81 82 83
break                : 29 44
capacity             : 115
clone                : 117
contains             : 116
continue             : 31 46
declaracion          : 23 38
dimensiones          : 12 59 60
elseif               : 146 147
elseifI              : 72 73
expresion            : 16 17 53 54 55 56 57 58 59 60 61 62 64 65 65 66 66 66 67 68 69 70 71 74 75 75 75 78 79 81 81 82 83 84 85 85 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 120 120 121 121 123 123 125 126 127 128 133 135 136 137 138 139 140 141 142 142 143 143 143 144 144 145 145 145 148 148
for                  : 32 47
funcion              : 4
funcion_struct       : 2 3
funciones_structs    : 1 2
if_e                 : 108
if_i                 : 25 40
init                 : 0
insert               : 34 48
instruccion          : 20 21
instruccion1         : 75 75 75
instrucciones        : 19 20 142 143 143 144 145 145 148
len                  : 114
lista_expresiones    : 15 16 51 122 134
listaelse            : 144 145 146
listaelseI           : 70 71 72
llamadaF             : 26 41 109
loop                 : 28 43 110
match                : 33
parametro            : 9 10
parametros           : 7 8 9
print                : 22 37
push                 : 36 50
referencia           : 113
remove               : 119
return               : 27 42
sqrt                 : 107
str                  : 160
tipo_dato            : 6 8 11 13 55 56 61 62 63 64 65 66
tostring             : 104
ubicacion            : 131 132
ubicaciones          : 54 130 131
vector               : 118
while                : 30 45

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . funciones_structs
    (2) funciones_structs -> . funciones_structs funcion_struct
    (3) funciones_structs -> . funcion_struct
    (4) funcion_struct -> . funcion
    (5) funcion -> . FN ID PIZQ PDER bloque
    (6) funcion -> . FN ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> . FN ID PIZQ parametros PDER bloque
    (8) funcion -> . FN ID PIZQ parametros PDER FLECHA tipo_dato bloque

    FN              shift and go to state 5

    init                           shift and go to state 1
    funciones_structs              shift and go to state 2
    funcion_struct                 shift and go to state 3
    funcion                        shift and go to state 4

state 1

    (0) S' -> init .



state 2

    (1) init -> funciones_structs .
    (2) funciones_structs -> funciones_structs . funcion_struct
    (4) funcion_struct -> . funcion
    (5) funcion -> . FN ID PIZQ PDER bloque
    (6) funcion -> . FN ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> . FN ID PIZQ parametros PDER bloque
    (8) funcion -> . FN ID PIZQ parametros PDER FLECHA tipo_dato bloque

    $end            reduce using rule 1 (init -> funciones_structs .)
    FN              shift and go to state 5

    funcion_struct                 shift and go to state 6
    funcion                        shift and go to state 4

state 3

    (3) funciones_structs -> funcion_struct .

    FN              reduce using rule 3 (funciones_structs -> funcion_struct .)
    $end            reduce using rule 3 (funciones_structs -> funcion_struct .)


state 4

    (4) funcion_struct -> funcion .

    FN              reduce using rule 4 (funcion_struct -> funcion .)
    $end            reduce using rule 4 (funcion_struct -> funcion .)


state 5

    (5) funcion -> FN . ID PIZQ PDER bloque
    (6) funcion -> FN . ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> FN . ID PIZQ parametros PDER bloque
    (8) funcion -> FN . ID PIZQ parametros PDER FLECHA tipo_dato bloque

    ID              shift and go to state 7


state 6

    (2) funciones_structs -> funciones_structs funcion_struct .

    FN              reduce using rule 2 (funciones_structs -> funciones_structs funcion_struct .)
    $end            reduce using rule 2 (funciones_structs -> funciones_structs funcion_struct .)


state 7

    (5) funcion -> FN ID . PIZQ PDER bloque
    (6) funcion -> FN ID . PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> FN ID . PIZQ parametros PDER bloque
    (8) funcion -> FN ID . PIZQ parametros PDER FLECHA tipo_dato bloque

    PIZQ            shift and go to state 8


state 8

    (5) funcion -> FN ID PIZQ . PDER bloque
    (6) funcion -> FN ID PIZQ . PDER FLECHA tipo_dato bloque
    (7) funcion -> FN ID PIZQ . parametros PDER bloque
    (8) funcion -> FN ID PIZQ . parametros PDER FLECHA tipo_dato bloque
    (9) parametros -> . parametros COMA parametro
    (10) parametros -> . parametro
    (11) parametro -> . ID DOBLEPT tipo_dato
    (12) parametro -> . ID DOBLEPT Y MUT dimensiones
    (13) parametro -> . ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR

    PDER            shift and go to state 10
    ID              shift and go to state 9

    parametros                     shift and go to state 11
    parametro                      shift and go to state 12

state 9

    (11) parametro -> ID . DOBLEPT tipo_dato
    (12) parametro -> ID . DOBLEPT Y MUT dimensiones
    (13) parametro -> ID . DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR

    DOBLEPT         shift and go to state 13


state 10

    (5) funcion -> FN ID PIZQ PDER . bloque
    (6) funcion -> FN ID PIZQ PDER . FLECHA tipo_dato bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    FLECHA          shift and go to state 15
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 14

state 11

    (7) funcion -> FN ID PIZQ parametros . PDER bloque
    (8) funcion -> FN ID PIZQ parametros . PDER FLECHA tipo_dato bloque
    (9) parametros -> parametros . COMA parametro

    PDER            shift and go to state 17
    COMA            shift and go to state 18


state 12

    (10) parametros -> parametro .

    PDER            reduce using rule 10 (parametros -> parametro .)
    COMA            reduce using rule 10 (parametros -> parametro .)


state 13

    (11) parametro -> ID DOBLEPT . tipo_dato
    (12) parametro -> ID DOBLEPT . Y MUT dimensiones
    (13) parametro -> ID DOBLEPT . Y MUT VECM MENOR tipo_dato MAYOR
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (163) str -> . Y STR

    Y               shift and go to state 20
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27

    tipo_dato                      shift and go to state 19
    str                            shift and go to state 25

state 14

    (5) funcion -> FN ID PIZQ PDER bloque .

    FN              reduce using rule 5 (funcion -> FN ID PIZQ PDER bloque .)
    $end            reduce using rule 5 (funcion -> FN ID PIZQ PDER bloque .)


state 15

    (6) funcion -> FN ID PIZQ PDER FLECHA . tipo_dato bloque
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (163) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 28
    str                            shift and go to state 25

state 16

    (18) bloque -> LLAVEIZQ . LLAVEDER
    (19) bloque -> LLAVEIZQ . instrucciones LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    LLAVEDER        shift and go to state 30
    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    instrucciones                  shift and go to state 31
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 17

    (7) funcion -> FN ID PIZQ parametros PDER . bloque
    (8) funcion -> FN ID PIZQ parametros PDER . FLECHA tipo_dato bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    FLECHA          shift and go to state 60
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 59

state 18

    (9) parametros -> parametros COMA . parametro
    (11) parametro -> . ID DOBLEPT tipo_dato
    (12) parametro -> . ID DOBLEPT Y MUT dimensiones
    (13) parametro -> . ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR

    ID              shift and go to state 9

    parametro                      shift and go to state 61

state 19

    (11) parametro -> ID DOBLEPT tipo_dato .

    PDER            reduce using rule 11 (parametro -> ID DOBLEPT tipo_dato .)
    COMA            reduce using rule 11 (parametro -> ID DOBLEPT tipo_dato .)


state 20

    (12) parametro -> ID DOBLEPT Y . MUT dimensiones
    (13) parametro -> ID DOBLEPT Y . MUT VECM MENOR tipo_dato MAYOR
    (163) str -> Y . STR

    MUT             shift and go to state 62
    STR             shift and go to state 63


state 21

    (156) tipo_dato -> I64 .

    PDER            reduce using rule 156 (tipo_dato -> I64 .)
    COMA            reduce using rule 156 (tipo_dato -> I64 .)
    LLAVEIZQ        reduce using rule 156 (tipo_dato -> I64 .)
    CORDER          reduce using rule 156 (tipo_dato -> I64 .)
    PTCOMA          reduce using rule 156 (tipo_dato -> I64 .)
    IGUAL           reduce using rule 156 (tipo_dato -> I64 .)
    MAYOR           reduce using rule 156 (tipo_dato -> I64 .)


state 22

    (157) tipo_dato -> F64 .

    PDER            reduce using rule 157 (tipo_dato -> F64 .)
    COMA            reduce using rule 157 (tipo_dato -> F64 .)
    LLAVEIZQ        reduce using rule 157 (tipo_dato -> F64 .)
    CORDER          reduce using rule 157 (tipo_dato -> F64 .)
    PTCOMA          reduce using rule 157 (tipo_dato -> F64 .)
    IGUAL           reduce using rule 157 (tipo_dato -> F64 .)
    MAYOR           reduce using rule 157 (tipo_dato -> F64 .)


state 23

    (158) tipo_dato -> BOOL .

    PDER            reduce using rule 158 (tipo_dato -> BOOL .)
    COMA            reduce using rule 158 (tipo_dato -> BOOL .)
    LLAVEIZQ        reduce using rule 158 (tipo_dato -> BOOL .)
    CORDER          reduce using rule 158 (tipo_dato -> BOOL .)
    PTCOMA          reduce using rule 158 (tipo_dato -> BOOL .)
    IGUAL           reduce using rule 158 (tipo_dato -> BOOL .)
    MAYOR           reduce using rule 158 (tipo_dato -> BOOL .)


state 24

    (159) tipo_dato -> CHAR .

    PDER            reduce using rule 159 (tipo_dato -> CHAR .)
    COMA            reduce using rule 159 (tipo_dato -> CHAR .)
    LLAVEIZQ        reduce using rule 159 (tipo_dato -> CHAR .)
    CORDER          reduce using rule 159 (tipo_dato -> CHAR .)
    PTCOMA          reduce using rule 159 (tipo_dato -> CHAR .)
    IGUAL           reduce using rule 159 (tipo_dato -> CHAR .)
    MAYOR           reduce using rule 159 (tipo_dato -> CHAR .)


state 25

    (160) tipo_dato -> str .

    PDER            reduce using rule 160 (tipo_dato -> str .)
    COMA            reduce using rule 160 (tipo_dato -> str .)
    LLAVEIZQ        reduce using rule 160 (tipo_dato -> str .)
    CORDER          reduce using rule 160 (tipo_dato -> str .)
    PTCOMA          reduce using rule 160 (tipo_dato -> str .)
    IGUAL           reduce using rule 160 (tipo_dato -> str .)
    MAYOR           reduce using rule 160 (tipo_dato -> str .)


state 26

    (161) tipo_dato -> STRING .

    PDER            reduce using rule 161 (tipo_dato -> STRING .)
    COMA            reduce using rule 161 (tipo_dato -> STRING .)
    LLAVEIZQ        reduce using rule 161 (tipo_dato -> STRING .)
    CORDER          reduce using rule 161 (tipo_dato -> STRING .)
    PTCOMA          reduce using rule 161 (tipo_dato -> STRING .)
    IGUAL           reduce using rule 161 (tipo_dato -> STRING .)
    MAYOR           reduce using rule 161 (tipo_dato -> STRING .)


state 27

    (162) tipo_dato -> USIZE .

    PDER            reduce using rule 162 (tipo_dato -> USIZE .)
    COMA            reduce using rule 162 (tipo_dato -> USIZE .)
    LLAVEIZQ        reduce using rule 162 (tipo_dato -> USIZE .)
    CORDER          reduce using rule 162 (tipo_dato -> USIZE .)
    PTCOMA          reduce using rule 162 (tipo_dato -> USIZE .)
    IGUAL           reduce using rule 162 (tipo_dato -> USIZE .)
    MAYOR           reduce using rule 162 (tipo_dato -> USIZE .)


state 28

    (6) funcion -> FN ID PIZQ PDER FLECHA tipo_dato . bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 64

state 29

    (163) str -> Y . STR

    STR             shift and go to state 63


state 30

    (18) bloque -> LLAVEIZQ LLAVEDER .

    FN              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEDER        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PRINTLN         reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    LET             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    ID              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    IF              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    RETURN          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    LOOP            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    BREAK           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    WHILE           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CONTINUE        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    FOR             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MATCH           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MAS             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOS           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MULTIPLICACION  reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    DIVISION        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MODULO          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYOR           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOR           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYORIGUAL      reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    MENORIGUAL      reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    IGUALIGUAL      reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    DIFERENTE       reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    AND             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    OR              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PUNTO           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    AS              reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEIZQ        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PTCOMA          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    COMA            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PDER            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CORDER          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    IGUAL           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    I64             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    F64             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    PIZQ            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    NOT             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    ENTERO          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    DECIMAL         reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CARACTER        reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CADENA          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    TRUE            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    FALSE           reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    CORIZQ          reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    Y               reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    VEC             reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    VECM            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)
    ELSE            reduce using rule 18 (bloque -> LLAVEIZQ LLAVEDER .)


state 31

    (19) bloque -> LLAVEIZQ instrucciones . LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    LLAVEDER        shift and go to state 65
    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    instruccion                    shift and go to state 66
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 32

    (21) instrucciones -> instruccion .

    LLAVEDER        reduce using rule 21 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 21 (instrucciones -> instruccion .)
    LET             reduce using rule 21 (instrucciones -> instruccion .)
    ID              reduce using rule 21 (instrucciones -> instruccion .)
    IF              reduce using rule 21 (instrucciones -> instruccion .)
    RETURN          reduce using rule 21 (instrucciones -> instruccion .)
    LOOP            reduce using rule 21 (instrucciones -> instruccion .)
    BREAK           reduce using rule 21 (instrucciones -> instruccion .)
    WHILE           reduce using rule 21 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 21 (instrucciones -> instruccion .)
    FOR             reduce using rule 21 (instrucciones -> instruccion .)
    MATCH           reduce using rule 21 (instrucciones -> instruccion .)
    MENOS           reduce using rule 21 (instrucciones -> instruccion .)
    I64             reduce using rule 21 (instrucciones -> instruccion .)
    F64             reduce using rule 21 (instrucciones -> instruccion .)
    PIZQ            reduce using rule 21 (instrucciones -> instruccion .)
    NOT             reduce using rule 21 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 21 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 21 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 21 (instrucciones -> instruccion .)
    CADENA          reduce using rule 21 (instrucciones -> instruccion .)
    TRUE            reduce using rule 21 (instrucciones -> instruccion .)
    FALSE           reduce using rule 21 (instrucciones -> instruccion .)
    CORIZQ          reduce using rule 21 (instrucciones -> instruccion .)
    Y               reduce using rule 21 (instrucciones -> instruccion .)
    VEC             reduce using rule 21 (instrucciones -> instruccion .)
    VECM            reduce using rule 21 (instrucciones -> instruccion .)


state 33

    (22) instruccion -> print . PTCOMA

    PTCOMA          shift and go to state 67


state 34

    (23) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 68


state 35

    (24) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 69


state 36

    (25) instruccion -> if_i .

    LLAVEDER        reduce using rule 25 (instruccion -> if_i .)
    PRINTLN         reduce using rule 25 (instruccion -> if_i .)
    LET             reduce using rule 25 (instruccion -> if_i .)
    ID              reduce using rule 25 (instruccion -> if_i .)
    IF              reduce using rule 25 (instruccion -> if_i .)
    RETURN          reduce using rule 25 (instruccion -> if_i .)
    LOOP            reduce using rule 25 (instruccion -> if_i .)
    BREAK           reduce using rule 25 (instruccion -> if_i .)
    WHILE           reduce using rule 25 (instruccion -> if_i .)
    CONTINUE        reduce using rule 25 (instruccion -> if_i .)
    FOR             reduce using rule 25 (instruccion -> if_i .)
    MATCH           reduce using rule 25 (instruccion -> if_i .)
    MENOS           reduce using rule 25 (instruccion -> if_i .)
    I64             reduce using rule 25 (instruccion -> if_i .)
    F64             reduce using rule 25 (instruccion -> if_i .)
    PIZQ            reduce using rule 25 (instruccion -> if_i .)
    NOT             reduce using rule 25 (instruccion -> if_i .)
    ENTERO          reduce using rule 25 (instruccion -> if_i .)
    DECIMAL         reduce using rule 25 (instruccion -> if_i .)
    CARACTER        reduce using rule 25 (instruccion -> if_i .)
    CADENA          reduce using rule 25 (instruccion -> if_i .)
    TRUE            reduce using rule 25 (instruccion -> if_i .)
    FALSE           reduce using rule 25 (instruccion -> if_i .)
    CORIZQ          reduce using rule 25 (instruccion -> if_i .)
    Y               reduce using rule 25 (instruccion -> if_i .)
    VEC             reduce using rule 25 (instruccion -> if_i .)
    VECM            reduce using rule 25 (instruccion -> if_i .)


state 37

    (26) instruccion -> llamadaF . PTCOMA

    PTCOMA          shift and go to state 70


state 38

    (27) instruccion -> return . PTCOMA

    PTCOMA          shift and go to state 71


state 39

    (28) instruccion -> loop .

    LLAVEDER        reduce using rule 28 (instruccion -> loop .)
    PRINTLN         reduce using rule 28 (instruccion -> loop .)
    LET             reduce using rule 28 (instruccion -> loop .)
    ID              reduce using rule 28 (instruccion -> loop .)
    IF              reduce using rule 28 (instruccion -> loop .)
    RETURN          reduce using rule 28 (instruccion -> loop .)
    LOOP            reduce using rule 28 (instruccion -> loop .)
    BREAK           reduce using rule 28 (instruccion -> loop .)
    WHILE           reduce using rule 28 (instruccion -> loop .)
    CONTINUE        reduce using rule 28 (instruccion -> loop .)
    FOR             reduce using rule 28 (instruccion -> loop .)
    MATCH           reduce using rule 28 (instruccion -> loop .)
    MENOS           reduce using rule 28 (instruccion -> loop .)
    I64             reduce using rule 28 (instruccion -> loop .)
    F64             reduce using rule 28 (instruccion -> loop .)
    PIZQ            reduce using rule 28 (instruccion -> loop .)
    NOT             reduce using rule 28 (instruccion -> loop .)
    ENTERO          reduce using rule 28 (instruccion -> loop .)
    DECIMAL         reduce using rule 28 (instruccion -> loop .)
    CARACTER        reduce using rule 28 (instruccion -> loop .)
    CADENA          reduce using rule 28 (instruccion -> loop .)
    TRUE            reduce using rule 28 (instruccion -> loop .)
    FALSE           reduce using rule 28 (instruccion -> loop .)
    CORIZQ          reduce using rule 28 (instruccion -> loop .)
    Y               reduce using rule 28 (instruccion -> loop .)
    VEC             reduce using rule 28 (instruccion -> loop .)
    VECM            reduce using rule 28 (instruccion -> loop .)


state 40

    (29) instruccion -> break . PTCOMA

    PTCOMA          shift and go to state 72


state 41

    (30) instruccion -> while .

    LLAVEDER        reduce using rule 30 (instruccion -> while .)
    PRINTLN         reduce using rule 30 (instruccion -> while .)
    LET             reduce using rule 30 (instruccion -> while .)
    ID              reduce using rule 30 (instruccion -> while .)
    IF              reduce using rule 30 (instruccion -> while .)
    RETURN          reduce using rule 30 (instruccion -> while .)
    LOOP            reduce using rule 30 (instruccion -> while .)
    BREAK           reduce using rule 30 (instruccion -> while .)
    WHILE           reduce using rule 30 (instruccion -> while .)
    CONTINUE        reduce using rule 30 (instruccion -> while .)
    FOR             reduce using rule 30 (instruccion -> while .)
    MATCH           reduce using rule 30 (instruccion -> while .)
    MENOS           reduce using rule 30 (instruccion -> while .)
    I64             reduce using rule 30 (instruccion -> while .)
    F64             reduce using rule 30 (instruccion -> while .)
    PIZQ            reduce using rule 30 (instruccion -> while .)
    NOT             reduce using rule 30 (instruccion -> while .)
    ENTERO          reduce using rule 30 (instruccion -> while .)
    DECIMAL         reduce using rule 30 (instruccion -> while .)
    CARACTER        reduce using rule 30 (instruccion -> while .)
    CADENA          reduce using rule 30 (instruccion -> while .)
    TRUE            reduce using rule 30 (instruccion -> while .)
    FALSE           reduce using rule 30 (instruccion -> while .)
    CORIZQ          reduce using rule 30 (instruccion -> while .)
    Y               reduce using rule 30 (instruccion -> while .)
    VEC             reduce using rule 30 (instruccion -> while .)
    VECM            reduce using rule 30 (instruccion -> while .)


state 42

    (31) instruccion -> continue . PTCOMA

    PTCOMA          shift and go to state 73


state 43

    (32) instruccion -> for .

    LLAVEDER        reduce using rule 32 (instruccion -> for .)
    PRINTLN         reduce using rule 32 (instruccion -> for .)
    LET             reduce using rule 32 (instruccion -> for .)
    ID              reduce using rule 32 (instruccion -> for .)
    IF              reduce using rule 32 (instruccion -> for .)
    RETURN          reduce using rule 32 (instruccion -> for .)
    LOOP            reduce using rule 32 (instruccion -> for .)
    BREAK           reduce using rule 32 (instruccion -> for .)
    WHILE           reduce using rule 32 (instruccion -> for .)
    CONTINUE        reduce using rule 32 (instruccion -> for .)
    FOR             reduce using rule 32 (instruccion -> for .)
    MATCH           reduce using rule 32 (instruccion -> for .)
    MENOS           reduce using rule 32 (instruccion -> for .)
    I64             reduce using rule 32 (instruccion -> for .)
    F64             reduce using rule 32 (instruccion -> for .)
    PIZQ            reduce using rule 32 (instruccion -> for .)
    NOT             reduce using rule 32 (instruccion -> for .)
    ENTERO          reduce using rule 32 (instruccion -> for .)
    DECIMAL         reduce using rule 32 (instruccion -> for .)
    CARACTER        reduce using rule 32 (instruccion -> for .)
    CADENA          reduce using rule 32 (instruccion -> for .)
    TRUE            reduce using rule 32 (instruccion -> for .)
    FALSE           reduce using rule 32 (instruccion -> for .)
    CORIZQ          reduce using rule 32 (instruccion -> for .)
    Y               reduce using rule 32 (instruccion -> for .)
    VEC             reduce using rule 32 (instruccion -> for .)
    VECM            reduce using rule 32 (instruccion -> for .)


state 44

    (33) instruccion -> match .

    LLAVEDER        reduce using rule 33 (instruccion -> match .)
    PRINTLN         reduce using rule 33 (instruccion -> match .)
    LET             reduce using rule 33 (instruccion -> match .)
    ID              reduce using rule 33 (instruccion -> match .)
    IF              reduce using rule 33 (instruccion -> match .)
    RETURN          reduce using rule 33 (instruccion -> match .)
    LOOP            reduce using rule 33 (instruccion -> match .)
    BREAK           reduce using rule 33 (instruccion -> match .)
    WHILE           reduce using rule 33 (instruccion -> match .)
    CONTINUE        reduce using rule 33 (instruccion -> match .)
    FOR             reduce using rule 33 (instruccion -> match .)
    MATCH           reduce using rule 33 (instruccion -> match .)
    MENOS           reduce using rule 33 (instruccion -> match .)
    I64             reduce using rule 33 (instruccion -> match .)
    F64             reduce using rule 33 (instruccion -> match .)
    PIZQ            reduce using rule 33 (instruccion -> match .)
    NOT             reduce using rule 33 (instruccion -> match .)
    ENTERO          reduce using rule 33 (instruccion -> match .)
    DECIMAL         reduce using rule 33 (instruccion -> match .)
    CARACTER        reduce using rule 33 (instruccion -> match .)
    CADENA          reduce using rule 33 (instruccion -> match .)
    TRUE            reduce using rule 33 (instruccion -> match .)
    FALSE           reduce using rule 33 (instruccion -> match .)
    CORIZQ          reduce using rule 33 (instruccion -> match .)
    Y               reduce using rule 33 (instruccion -> match .)
    VEC             reduce using rule 33 (instruccion -> match .)
    VECM            reduce using rule 33 (instruccion -> match .)


state 45

    (34) instruccion -> insert . PTCOMA

    PTCOMA          shift and go to state 74


state 46

    (35) instruccion -> asignacionA . PTCOMA

    PTCOMA          shift and go to state 75


state 47

    (36) instruccion -> push . PTCOMA

    PTCOMA          shift and go to state 76


state 48

    (51) print -> PRINTLN . NOT PIZQ lista_expresiones PDER

    NOT             shift and go to state 77


state 49

    (55) declaracion -> LET . MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> LET . ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> LET . MUT ID IGUAL expresion
    (58) declaracion -> LET . ID IGUAL expresion
    (59) declaracion -> LET . MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> LET . ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> LET . MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> LET . ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion

    MUT             shift and go to state 78
    ID              shift and go to state 79


state 50

    (67) asignacion -> ID . IGUAL expresion
    (14) llamadaF -> ID . PIZQ PDER
    (15) llamadaF -> ID . PIZQ lista_expresiones PDER
    (85) insert -> ID . PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> ID . ubicaciones IGUAL expresion
    (84) push -> ID . PUNTO PUSH PIZQ expresion PDER
    (131) ubicaciones -> . ubicaciones ubicacion
    (132) ubicaciones -> . ubicacion
    (133) ubicacion -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 80
    PIZQ            shift and go to state 81
    PUNTO           shift and go to state 82
    CORIZQ          shift and go to state 85

    ubicaciones                    shift and go to state 83
    ubicacion                      shift and go to state 84

state 51

    (68) if_i -> IF . expresion bloque
    (69) if_i -> IF . expresion bloque ELSE bloque
    (70) if_i -> IF . expresion bloque listaelseI
    (71) if_i -> IF . expresion bloque listaelseI ELSE bloque
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 87
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 52

    (52) return -> RETURN .
    (53) return -> RETURN . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 52 (return -> RETURN .)
    COMA            reduce using rule 52 (return -> RETURN .)
    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 120
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 53

    (76) loop -> LOOP . bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 121

state 54

    (77) break -> BREAK .
    (78) break -> BREAK . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 77 (break -> BREAK .)
    COMA            reduce using rule 77 (break -> BREAK .)
    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 122
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 55

    (79) while -> WHILE . expresion bloque
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 123
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 56

    (80) continue -> CONTINUE .

    PTCOMA          reduce using rule 80 (continue -> CONTINUE .)
    COMA            reduce using rule 80 (continue -> CONTINUE .)


state 57

    (81) for -> FOR . ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> FOR . ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> FOR . ID IN expresion bloque

    ID              shift and go to state 124


state 58

    (75) match -> MATCH . expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 125
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 59

    (7) funcion -> FN ID PIZQ parametros PDER bloque .

    FN              reduce using rule 7 (funcion -> FN ID PIZQ parametros PDER bloque .)
    $end            reduce using rule 7 (funcion -> FN ID PIZQ parametros PDER bloque .)


state 60

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA . tipo_dato bloque
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (163) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 126
    str                            shift and go to state 25

state 61

    (9) parametros -> parametros COMA parametro .

    PDER            reduce using rule 9 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 9 (parametros -> parametros COMA parametro .)


state 62

    (12) parametro -> ID DOBLEPT Y MUT . dimensiones
    (13) parametro -> ID DOBLEPT Y MUT . VECM MENOR tipo_dato MAYOR
    (63) dimensiones -> . CORIZQ tipo_dato CORDER
    (64) dimensiones -> . CORIZQ tipo_dato PTCOMA expresion CORDER
    (65) dimensiones -> . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (66) dimensiones -> . CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER

    VECM            shift and go to state 128
    CORIZQ          shift and go to state 129

    dimensiones                    shift and go to state 127

state 63

    (163) str -> Y STR .

    PDER            reduce using rule 163 (str -> Y STR .)
    COMA            reduce using rule 163 (str -> Y STR .)
    LLAVEIZQ        reduce using rule 163 (str -> Y STR .)
    CORDER          reduce using rule 163 (str -> Y STR .)
    PTCOMA          reduce using rule 163 (str -> Y STR .)
    IGUAL           reduce using rule 163 (str -> Y STR .)
    MAYOR           reduce using rule 163 (str -> Y STR .)


state 64

    (6) funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .

    FN              reduce using rule 6 (funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .)
    $end            reduce using rule 6 (funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .)


state 65

    (19) bloque -> LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MULTIPLICACION  reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIVISION        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYOR           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOR           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIGUAL      reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENORIGUAL      reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IGUALIGUAL      reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIFERENTE       reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PUNTO           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AS              reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PDER            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PIZQ            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    Y               reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    VECM            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            reduce using rule 19 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)


state 66

    (20) instrucciones -> instrucciones instruccion .

    LLAVEDER        reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    I64             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    F64             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    PIZQ            reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CORIZQ          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    Y               reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    VEC             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    VECM            reduce using rule 20 (instrucciones -> instrucciones instruccion .)


state 67

    (22) instruccion -> print PTCOMA .

    LLAVEDER        reduce using rule 22 (instruccion -> print PTCOMA .)
    PRINTLN         reduce using rule 22 (instruccion -> print PTCOMA .)
    LET             reduce using rule 22 (instruccion -> print PTCOMA .)
    ID              reduce using rule 22 (instruccion -> print PTCOMA .)
    IF              reduce using rule 22 (instruccion -> print PTCOMA .)
    RETURN          reduce using rule 22 (instruccion -> print PTCOMA .)
    LOOP            reduce using rule 22 (instruccion -> print PTCOMA .)
    BREAK           reduce using rule 22 (instruccion -> print PTCOMA .)
    WHILE           reduce using rule 22 (instruccion -> print PTCOMA .)
    CONTINUE        reduce using rule 22 (instruccion -> print PTCOMA .)
    FOR             reduce using rule 22 (instruccion -> print PTCOMA .)
    MATCH           reduce using rule 22 (instruccion -> print PTCOMA .)
    MENOS           reduce using rule 22 (instruccion -> print PTCOMA .)
    I64             reduce using rule 22 (instruccion -> print PTCOMA .)
    F64             reduce using rule 22 (instruccion -> print PTCOMA .)
    PIZQ            reduce using rule 22 (instruccion -> print PTCOMA .)
    NOT             reduce using rule 22 (instruccion -> print PTCOMA .)
    ENTERO          reduce using rule 22 (instruccion -> print PTCOMA .)
    DECIMAL         reduce using rule 22 (instruccion -> print PTCOMA .)
    CARACTER        reduce using rule 22 (instruccion -> print PTCOMA .)
    CADENA          reduce using rule 22 (instruccion -> print PTCOMA .)
    TRUE            reduce using rule 22 (instruccion -> print PTCOMA .)
    FALSE           reduce using rule 22 (instruccion -> print PTCOMA .)
    CORIZQ          reduce using rule 22 (instruccion -> print PTCOMA .)
    Y               reduce using rule 22 (instruccion -> print PTCOMA .)
    VEC             reduce using rule 22 (instruccion -> print PTCOMA .)
    VECM            reduce using rule 22 (instruccion -> print PTCOMA .)


state 68

    (23) instruccion -> declaracion PTCOMA .

    LLAVEDER        reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    PRINTLN         reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    LET             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    IF              reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    RETURN          reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    LOOP            reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    BREAK           reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    WHILE           reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    CONTINUE        reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    FOR             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    MATCH           reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    MENOS           reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    I64             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    F64             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    PIZQ            reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    NOT             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    ENTERO          reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    DECIMAL         reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    CARACTER        reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    CADENA          reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    TRUE            reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    FALSE           reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    CORIZQ          reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    Y               reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    VEC             reduce using rule 23 (instruccion -> declaracion PTCOMA .)
    VECM            reduce using rule 23 (instruccion -> declaracion PTCOMA .)


state 69

    (24) instruccion -> asignacion PTCOMA .

    LLAVEDER        reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    PRINTLN         reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    LET             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    RETURN          reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    LOOP            reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    MATCH           reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    MENOS           reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    I64             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    F64             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    PIZQ            reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    NOT             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    ENTERO          reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    DECIMAL         reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    CARACTER        reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    CADENA          reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    TRUE            reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    FALSE           reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    CORIZQ          reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    Y               reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    VEC             reduce using rule 24 (instruccion -> asignacion PTCOMA .)
    VECM            reduce using rule 24 (instruccion -> asignacion PTCOMA .)


state 70

    (26) instruccion -> llamadaF PTCOMA .

    LLAVEDER        reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    PRINTLN         reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    LET             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    ID              reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    IF              reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    RETURN          reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    LOOP            reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    BREAK           reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    WHILE           reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    CONTINUE        reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    FOR             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    MATCH           reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    MENOS           reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    I64             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    F64             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    PIZQ            reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    NOT             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    ENTERO          reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    DECIMAL         reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    CARACTER        reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    CADENA          reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    TRUE            reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    FALSE           reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    CORIZQ          reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    Y               reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    VEC             reduce using rule 26 (instruccion -> llamadaF PTCOMA .)
    VECM            reduce using rule 26 (instruccion -> llamadaF PTCOMA .)


state 71

    (27) instruccion -> return PTCOMA .

    LLAVEDER        reduce using rule 27 (instruccion -> return PTCOMA .)
    PRINTLN         reduce using rule 27 (instruccion -> return PTCOMA .)
    LET             reduce using rule 27 (instruccion -> return PTCOMA .)
    ID              reduce using rule 27 (instruccion -> return PTCOMA .)
    IF              reduce using rule 27 (instruccion -> return PTCOMA .)
    RETURN          reduce using rule 27 (instruccion -> return PTCOMA .)
    LOOP            reduce using rule 27 (instruccion -> return PTCOMA .)
    BREAK           reduce using rule 27 (instruccion -> return PTCOMA .)
    WHILE           reduce using rule 27 (instruccion -> return PTCOMA .)
    CONTINUE        reduce using rule 27 (instruccion -> return PTCOMA .)
    FOR             reduce using rule 27 (instruccion -> return PTCOMA .)
    MATCH           reduce using rule 27 (instruccion -> return PTCOMA .)
    MENOS           reduce using rule 27 (instruccion -> return PTCOMA .)
    I64             reduce using rule 27 (instruccion -> return PTCOMA .)
    F64             reduce using rule 27 (instruccion -> return PTCOMA .)
    PIZQ            reduce using rule 27 (instruccion -> return PTCOMA .)
    NOT             reduce using rule 27 (instruccion -> return PTCOMA .)
    ENTERO          reduce using rule 27 (instruccion -> return PTCOMA .)
    DECIMAL         reduce using rule 27 (instruccion -> return PTCOMA .)
    CARACTER        reduce using rule 27 (instruccion -> return PTCOMA .)
    CADENA          reduce using rule 27 (instruccion -> return PTCOMA .)
    TRUE            reduce using rule 27 (instruccion -> return PTCOMA .)
    FALSE           reduce using rule 27 (instruccion -> return PTCOMA .)
    CORIZQ          reduce using rule 27 (instruccion -> return PTCOMA .)
    Y               reduce using rule 27 (instruccion -> return PTCOMA .)
    VEC             reduce using rule 27 (instruccion -> return PTCOMA .)
    VECM            reduce using rule 27 (instruccion -> return PTCOMA .)


state 72

    (29) instruccion -> break PTCOMA .

    LLAVEDER        reduce using rule 29 (instruccion -> break PTCOMA .)
    PRINTLN         reduce using rule 29 (instruccion -> break PTCOMA .)
    LET             reduce using rule 29 (instruccion -> break PTCOMA .)
    ID              reduce using rule 29 (instruccion -> break PTCOMA .)
    IF              reduce using rule 29 (instruccion -> break PTCOMA .)
    RETURN          reduce using rule 29 (instruccion -> break PTCOMA .)
    LOOP            reduce using rule 29 (instruccion -> break PTCOMA .)
    BREAK           reduce using rule 29 (instruccion -> break PTCOMA .)
    WHILE           reduce using rule 29 (instruccion -> break PTCOMA .)
    CONTINUE        reduce using rule 29 (instruccion -> break PTCOMA .)
    FOR             reduce using rule 29 (instruccion -> break PTCOMA .)
    MATCH           reduce using rule 29 (instruccion -> break PTCOMA .)
    MENOS           reduce using rule 29 (instruccion -> break PTCOMA .)
    I64             reduce using rule 29 (instruccion -> break PTCOMA .)
    F64             reduce using rule 29 (instruccion -> break PTCOMA .)
    PIZQ            reduce using rule 29 (instruccion -> break PTCOMA .)
    NOT             reduce using rule 29 (instruccion -> break PTCOMA .)
    ENTERO          reduce using rule 29 (instruccion -> break PTCOMA .)
    DECIMAL         reduce using rule 29 (instruccion -> break PTCOMA .)
    CARACTER        reduce using rule 29 (instruccion -> break PTCOMA .)
    CADENA          reduce using rule 29 (instruccion -> break PTCOMA .)
    TRUE            reduce using rule 29 (instruccion -> break PTCOMA .)
    FALSE           reduce using rule 29 (instruccion -> break PTCOMA .)
    CORIZQ          reduce using rule 29 (instruccion -> break PTCOMA .)
    Y               reduce using rule 29 (instruccion -> break PTCOMA .)
    VEC             reduce using rule 29 (instruccion -> break PTCOMA .)
    VECM            reduce using rule 29 (instruccion -> break PTCOMA .)


state 73

    (31) instruccion -> continue PTCOMA .

    LLAVEDER        reduce using rule 31 (instruccion -> continue PTCOMA .)
    PRINTLN         reduce using rule 31 (instruccion -> continue PTCOMA .)
    LET             reduce using rule 31 (instruccion -> continue PTCOMA .)
    ID              reduce using rule 31 (instruccion -> continue PTCOMA .)
    IF              reduce using rule 31 (instruccion -> continue PTCOMA .)
    RETURN          reduce using rule 31 (instruccion -> continue PTCOMA .)
    LOOP            reduce using rule 31 (instruccion -> continue PTCOMA .)
    BREAK           reduce using rule 31 (instruccion -> continue PTCOMA .)
    WHILE           reduce using rule 31 (instruccion -> continue PTCOMA .)
    CONTINUE        reduce using rule 31 (instruccion -> continue PTCOMA .)
    FOR             reduce using rule 31 (instruccion -> continue PTCOMA .)
    MATCH           reduce using rule 31 (instruccion -> continue PTCOMA .)
    MENOS           reduce using rule 31 (instruccion -> continue PTCOMA .)
    I64             reduce using rule 31 (instruccion -> continue PTCOMA .)
    F64             reduce using rule 31 (instruccion -> continue PTCOMA .)
    PIZQ            reduce using rule 31 (instruccion -> continue PTCOMA .)
    NOT             reduce using rule 31 (instruccion -> continue PTCOMA .)
    ENTERO          reduce using rule 31 (instruccion -> continue PTCOMA .)
    DECIMAL         reduce using rule 31 (instruccion -> continue PTCOMA .)
    CARACTER        reduce using rule 31 (instruccion -> continue PTCOMA .)
    CADENA          reduce using rule 31 (instruccion -> continue PTCOMA .)
    TRUE            reduce using rule 31 (instruccion -> continue PTCOMA .)
    FALSE           reduce using rule 31 (instruccion -> continue PTCOMA .)
    CORIZQ          reduce using rule 31 (instruccion -> continue PTCOMA .)
    Y               reduce using rule 31 (instruccion -> continue PTCOMA .)
    VEC             reduce using rule 31 (instruccion -> continue PTCOMA .)
    VECM            reduce using rule 31 (instruccion -> continue PTCOMA .)


state 74

    (34) instruccion -> insert PTCOMA .

    LLAVEDER        reduce using rule 34 (instruccion -> insert PTCOMA .)
    PRINTLN         reduce using rule 34 (instruccion -> insert PTCOMA .)
    LET             reduce using rule 34 (instruccion -> insert PTCOMA .)
    ID              reduce using rule 34 (instruccion -> insert PTCOMA .)
    IF              reduce using rule 34 (instruccion -> insert PTCOMA .)
    RETURN          reduce using rule 34 (instruccion -> insert PTCOMA .)
    LOOP            reduce using rule 34 (instruccion -> insert PTCOMA .)
    BREAK           reduce using rule 34 (instruccion -> insert PTCOMA .)
    WHILE           reduce using rule 34 (instruccion -> insert PTCOMA .)
    CONTINUE        reduce using rule 34 (instruccion -> insert PTCOMA .)
    FOR             reduce using rule 34 (instruccion -> insert PTCOMA .)
    MATCH           reduce using rule 34 (instruccion -> insert PTCOMA .)
    MENOS           reduce using rule 34 (instruccion -> insert PTCOMA .)
    I64             reduce using rule 34 (instruccion -> insert PTCOMA .)
    F64             reduce using rule 34 (instruccion -> insert PTCOMA .)
    PIZQ            reduce using rule 34 (instruccion -> insert PTCOMA .)
    NOT             reduce using rule 34 (instruccion -> insert PTCOMA .)
    ENTERO          reduce using rule 34 (instruccion -> insert PTCOMA .)
    DECIMAL         reduce using rule 34 (instruccion -> insert PTCOMA .)
    CARACTER        reduce using rule 34 (instruccion -> insert PTCOMA .)
    CADENA          reduce using rule 34 (instruccion -> insert PTCOMA .)
    TRUE            reduce using rule 34 (instruccion -> insert PTCOMA .)
    FALSE           reduce using rule 34 (instruccion -> insert PTCOMA .)
    CORIZQ          reduce using rule 34 (instruccion -> insert PTCOMA .)
    Y               reduce using rule 34 (instruccion -> insert PTCOMA .)
    VEC             reduce using rule 34 (instruccion -> insert PTCOMA .)
    VECM            reduce using rule 34 (instruccion -> insert PTCOMA .)


state 75

    (35) instruccion -> asignacionA PTCOMA .

    LLAVEDER        reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    PRINTLN         reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    LET             reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    ID              reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    IF              reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    RETURN          reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    LOOP            reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    BREAK           reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    WHILE           reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    CONTINUE        reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    FOR             reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    MATCH           reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    MENOS           reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    I64             reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    F64             reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    PIZQ            reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    NOT             reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    ENTERO          reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    DECIMAL         reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    CARACTER        reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    CADENA          reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    TRUE            reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    FALSE           reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    CORIZQ          reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    Y               reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    VEC             reduce using rule 35 (instruccion -> asignacionA PTCOMA .)
    VECM            reduce using rule 35 (instruccion -> asignacionA PTCOMA .)


state 76

    (36) instruccion -> push PTCOMA .

    LLAVEDER        reduce using rule 36 (instruccion -> push PTCOMA .)
    PRINTLN         reduce using rule 36 (instruccion -> push PTCOMA .)
    LET             reduce using rule 36 (instruccion -> push PTCOMA .)
    ID              reduce using rule 36 (instruccion -> push PTCOMA .)
    IF              reduce using rule 36 (instruccion -> push PTCOMA .)
    RETURN          reduce using rule 36 (instruccion -> push PTCOMA .)
    LOOP            reduce using rule 36 (instruccion -> push PTCOMA .)
    BREAK           reduce using rule 36 (instruccion -> push PTCOMA .)
    WHILE           reduce using rule 36 (instruccion -> push PTCOMA .)
    CONTINUE        reduce using rule 36 (instruccion -> push PTCOMA .)
    FOR             reduce using rule 36 (instruccion -> push PTCOMA .)
    MATCH           reduce using rule 36 (instruccion -> push PTCOMA .)
    MENOS           reduce using rule 36 (instruccion -> push PTCOMA .)
    I64             reduce using rule 36 (instruccion -> push PTCOMA .)
    F64             reduce using rule 36 (instruccion -> push PTCOMA .)
    PIZQ            reduce using rule 36 (instruccion -> push PTCOMA .)
    NOT             reduce using rule 36 (instruccion -> push PTCOMA .)
    ENTERO          reduce using rule 36 (instruccion -> push PTCOMA .)
    DECIMAL         reduce using rule 36 (instruccion -> push PTCOMA .)
    CARACTER        reduce using rule 36 (instruccion -> push PTCOMA .)
    CADENA          reduce using rule 36 (instruccion -> push PTCOMA .)
    TRUE            reduce using rule 36 (instruccion -> push PTCOMA .)
    FALSE           reduce using rule 36 (instruccion -> push PTCOMA .)
    CORIZQ          reduce using rule 36 (instruccion -> push PTCOMA .)
    Y               reduce using rule 36 (instruccion -> push PTCOMA .)
    VEC             reduce using rule 36 (instruccion -> push PTCOMA .)
    VECM            reduce using rule 36 (instruccion -> push PTCOMA .)


state 77

    (51) print -> PRINTLN NOT . PIZQ lista_expresiones PDER

    PIZQ            shift and go to state 130


state 78

    (55) declaracion -> LET MUT . ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> LET MUT . ID IGUAL expresion
    (59) declaracion -> LET MUT . ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> LET MUT . ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion

    ID              shift and go to state 131


state 79

    (56) declaracion -> LET ID . DOBLEPT tipo_dato IGUAL expresion
    (58) declaracion -> LET ID . IGUAL expresion
    (60) declaracion -> LET ID . DOBLEPT dimensiones IGUAL expresion
    (62) declaracion -> LET ID . DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion

    DOBLEPT         shift and go to state 132
    IGUAL           shift and go to state 133


state 80

    (67) asignacion -> ID IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 134
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 81

    (14) llamadaF -> ID PIZQ . PDER
    (15) llamadaF -> ID PIZQ . lista_expresiones PDER
    (16) lista_expresiones -> . lista_expresiones COMA expresion
    (17) lista_expresiones -> . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 135
    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    lista_expresiones              shift and go to state 136
    expresion                      shift and go to state 137
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 82

    (85) insert -> ID PUNTO . INSERT PIZQ expresion COMA expresion PDER
    (84) push -> ID PUNTO . PUSH PIZQ expresion PDER

    INSERT          shift and go to state 138
    PUSH            shift and go to state 139


state 83

    (54) asignacionA -> ID ubicaciones . IGUAL expresion
    (131) ubicaciones -> ubicaciones . ubicacion
    (133) ubicacion -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 140
    CORIZQ          shift and go to state 85

    ubicacion                      shift and go to state 141

state 84

    (132) ubicaciones -> ubicacion .

    IGUAL           reduce using rule 132 (ubicaciones -> ubicacion .)
    CORIZQ          reduce using rule 132 (ubicaciones -> ubicacion .)
    MAS             reduce using rule 132 (ubicaciones -> ubicacion .)
    MENOS           reduce using rule 132 (ubicaciones -> ubicacion .)
    MULTIPLICACION  reduce using rule 132 (ubicaciones -> ubicacion .)
    DIVISION        reduce using rule 132 (ubicaciones -> ubicacion .)
    MODULO          reduce using rule 132 (ubicaciones -> ubicacion .)
    MAYOR           reduce using rule 132 (ubicaciones -> ubicacion .)
    MENOR           reduce using rule 132 (ubicaciones -> ubicacion .)
    MAYORIGUAL      reduce using rule 132 (ubicaciones -> ubicacion .)
    MENORIGUAL      reduce using rule 132 (ubicaciones -> ubicacion .)
    IGUALIGUAL      reduce using rule 132 (ubicaciones -> ubicacion .)
    DIFERENTE       reduce using rule 132 (ubicaciones -> ubicacion .)
    AND             reduce using rule 132 (ubicaciones -> ubicacion .)
    OR              reduce using rule 132 (ubicaciones -> ubicacion .)
    PUNTO           reduce using rule 132 (ubicaciones -> ubicacion .)
    AS              reduce using rule 132 (ubicaciones -> ubicacion .)
    LLAVEIZQ        reduce using rule 132 (ubicaciones -> ubicacion .)
    PTCOMA          reduce using rule 132 (ubicaciones -> ubicacion .)
    COMA            reduce using rule 132 (ubicaciones -> ubicacion .)
    PDER            reduce using rule 132 (ubicaciones -> ubicacion .)
    CORDER          reduce using rule 132 (ubicaciones -> ubicacion .)
    LLAVEDER        reduce using rule 132 (ubicaciones -> ubicacion .)


state 85

    (133) ubicacion -> CORIZQ . expresion CORDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 142
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 86

    (142) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 143
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 87

    (68) if_i -> IF expresion . bloque
    (69) if_i -> IF expresion . bloque ELSE bloque
    (70) if_i -> IF expresion . bloque listaelseI
    (71) if_i -> IF expresion . bloque listaelseI ELSE bloque
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 144

state 88

    (86) expresion -> MENOS . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 160
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 89

    (92) expresion -> I64 . DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 161


state 90

    (94) expresion -> PIZQ . expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 162
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 91

    (93) expresion -> F64 . DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 163


state 92

    (103) expresion -> NOT . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 164
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 93

    (104) expresion -> tostring .

    MAS             reduce using rule 104 (expresion -> tostring .)
    MENOS           reduce using rule 104 (expresion -> tostring .)
    MULTIPLICACION  reduce using rule 104 (expresion -> tostring .)
    DIVISION        reduce using rule 104 (expresion -> tostring .)
    MODULO          reduce using rule 104 (expresion -> tostring .)
    MAYOR           reduce using rule 104 (expresion -> tostring .)
    MENOR           reduce using rule 104 (expresion -> tostring .)
    MAYORIGUAL      reduce using rule 104 (expresion -> tostring .)
    MENORIGUAL      reduce using rule 104 (expresion -> tostring .)
    IGUALIGUAL      reduce using rule 104 (expresion -> tostring .)
    DIFERENTE       reduce using rule 104 (expresion -> tostring .)
    AND             reduce using rule 104 (expresion -> tostring .)
    OR              reduce using rule 104 (expresion -> tostring .)
    PUNTO           reduce using rule 104 (expresion -> tostring .)
    AS              reduce using rule 104 (expresion -> tostring .)
    LLAVEIZQ        reduce using rule 104 (expresion -> tostring .)
    PTCOMA          reduce using rule 104 (expresion -> tostring .)
    COMA            reduce using rule 104 (expresion -> tostring .)
    PDER            reduce using rule 104 (expresion -> tostring .)
    CORDER          reduce using rule 104 (expresion -> tostring .)
    IGUAL           reduce using rule 104 (expresion -> tostring .)
    LLAVEDER        reduce using rule 104 (expresion -> tostring .)


state 94

    (105) expresion -> as .

    MAS             reduce using rule 105 (expresion -> as .)
    MENOS           reduce using rule 105 (expresion -> as .)
    MULTIPLICACION  reduce using rule 105 (expresion -> as .)
    DIVISION        reduce using rule 105 (expresion -> as .)
    MODULO          reduce using rule 105 (expresion -> as .)
    MAYOR           reduce using rule 105 (expresion -> as .)
    MENOR           reduce using rule 105 (expresion -> as .)
    MAYORIGUAL      reduce using rule 105 (expresion -> as .)
    MENORIGUAL      reduce using rule 105 (expresion -> as .)
    IGUALIGUAL      reduce using rule 105 (expresion -> as .)
    DIFERENTE       reduce using rule 105 (expresion -> as .)
    AND             reduce using rule 105 (expresion -> as .)
    OR              reduce using rule 105 (expresion -> as .)
    PUNTO           reduce using rule 105 (expresion -> as .)
    AS              reduce using rule 105 (expresion -> as .)
    LLAVEIZQ        reduce using rule 105 (expresion -> as .)
    PTCOMA          reduce using rule 105 (expresion -> as .)
    COMA            reduce using rule 105 (expresion -> as .)
    PDER            reduce using rule 105 (expresion -> as .)
    CORDER          reduce using rule 105 (expresion -> as .)
    IGUAL           reduce using rule 105 (expresion -> as .)
    LLAVEDER        reduce using rule 105 (expresion -> as .)


state 95

    (106) expresion -> abs .

    MAS             reduce using rule 106 (expresion -> abs .)
    MENOS           reduce using rule 106 (expresion -> abs .)
    MULTIPLICACION  reduce using rule 106 (expresion -> abs .)
    DIVISION        reduce using rule 106 (expresion -> abs .)
    MODULO          reduce using rule 106 (expresion -> abs .)
    MAYOR           reduce using rule 106 (expresion -> abs .)
    MENOR           reduce using rule 106 (expresion -> abs .)
    MAYORIGUAL      reduce using rule 106 (expresion -> abs .)
    MENORIGUAL      reduce using rule 106 (expresion -> abs .)
    IGUALIGUAL      reduce using rule 106 (expresion -> abs .)
    DIFERENTE       reduce using rule 106 (expresion -> abs .)
    AND             reduce using rule 106 (expresion -> abs .)
    OR              reduce using rule 106 (expresion -> abs .)
    PUNTO           reduce using rule 106 (expresion -> abs .)
    AS              reduce using rule 106 (expresion -> abs .)
    LLAVEIZQ        reduce using rule 106 (expresion -> abs .)
    PTCOMA          reduce using rule 106 (expresion -> abs .)
    COMA            reduce using rule 106 (expresion -> abs .)
    PDER            reduce using rule 106 (expresion -> abs .)
    CORDER          reduce using rule 106 (expresion -> abs .)
    IGUAL           reduce using rule 106 (expresion -> abs .)
    LLAVEDER        reduce using rule 106 (expresion -> abs .)


state 96

    (107) expresion -> sqrt .

    MAS             reduce using rule 107 (expresion -> sqrt .)
    MENOS           reduce using rule 107 (expresion -> sqrt .)
    MULTIPLICACION  reduce using rule 107 (expresion -> sqrt .)
    DIVISION        reduce using rule 107 (expresion -> sqrt .)
    MODULO          reduce using rule 107 (expresion -> sqrt .)
    MAYOR           reduce using rule 107 (expresion -> sqrt .)
    MENOR           reduce using rule 107 (expresion -> sqrt .)
    MAYORIGUAL      reduce using rule 107 (expresion -> sqrt .)
    MENORIGUAL      reduce using rule 107 (expresion -> sqrt .)
    IGUALIGUAL      reduce using rule 107 (expresion -> sqrt .)
    DIFERENTE       reduce using rule 107 (expresion -> sqrt .)
    AND             reduce using rule 107 (expresion -> sqrt .)
    OR              reduce using rule 107 (expresion -> sqrt .)
    PUNTO           reduce using rule 107 (expresion -> sqrt .)
    AS              reduce using rule 107 (expresion -> sqrt .)
    LLAVEIZQ        reduce using rule 107 (expresion -> sqrt .)
    PTCOMA          reduce using rule 107 (expresion -> sqrt .)
    COMA            reduce using rule 107 (expresion -> sqrt .)
    PDER            reduce using rule 107 (expresion -> sqrt .)
    CORDER          reduce using rule 107 (expresion -> sqrt .)
    IGUAL           reduce using rule 107 (expresion -> sqrt .)
    LLAVEDER        reduce using rule 107 (expresion -> sqrt .)


state 97

    (108) expresion -> if_e .

    MAS             reduce using rule 108 (expresion -> if_e .)
    MENOS           reduce using rule 108 (expresion -> if_e .)
    MULTIPLICACION  reduce using rule 108 (expresion -> if_e .)
    DIVISION        reduce using rule 108 (expresion -> if_e .)
    MODULO          reduce using rule 108 (expresion -> if_e .)
    MAYOR           reduce using rule 108 (expresion -> if_e .)
    MENOR           reduce using rule 108 (expresion -> if_e .)
    MAYORIGUAL      reduce using rule 108 (expresion -> if_e .)
    MENORIGUAL      reduce using rule 108 (expresion -> if_e .)
    IGUALIGUAL      reduce using rule 108 (expresion -> if_e .)
    DIFERENTE       reduce using rule 108 (expresion -> if_e .)
    AND             reduce using rule 108 (expresion -> if_e .)
    OR              reduce using rule 108 (expresion -> if_e .)
    PUNTO           reduce using rule 108 (expresion -> if_e .)
    AS              reduce using rule 108 (expresion -> if_e .)
    LLAVEIZQ        reduce using rule 108 (expresion -> if_e .)
    PTCOMA          reduce using rule 108 (expresion -> if_e .)
    COMA            reduce using rule 108 (expresion -> if_e .)
    PDER            reduce using rule 108 (expresion -> if_e .)
    CORDER          reduce using rule 108 (expresion -> if_e .)
    IGUAL           reduce using rule 108 (expresion -> if_e .)
    LLAVEDER        reduce using rule 108 (expresion -> if_e .)


state 98

    (109) expresion -> llamadaF .

    MAS             reduce using rule 109 (expresion -> llamadaF .)
    MENOS           reduce using rule 109 (expresion -> llamadaF .)
    MULTIPLICACION  reduce using rule 109 (expresion -> llamadaF .)
    DIVISION        reduce using rule 109 (expresion -> llamadaF .)
    MODULO          reduce using rule 109 (expresion -> llamadaF .)
    MAYOR           reduce using rule 109 (expresion -> llamadaF .)
    MENOR           reduce using rule 109 (expresion -> llamadaF .)
    MAYORIGUAL      reduce using rule 109 (expresion -> llamadaF .)
    MENORIGUAL      reduce using rule 109 (expresion -> llamadaF .)
    IGUALIGUAL      reduce using rule 109 (expresion -> llamadaF .)
    DIFERENTE       reduce using rule 109 (expresion -> llamadaF .)
    AND             reduce using rule 109 (expresion -> llamadaF .)
    OR              reduce using rule 109 (expresion -> llamadaF .)
    PUNTO           reduce using rule 109 (expresion -> llamadaF .)
    AS              reduce using rule 109 (expresion -> llamadaF .)
    LLAVEIZQ        reduce using rule 109 (expresion -> llamadaF .)
    PTCOMA          reduce using rule 109 (expresion -> llamadaF .)
    COMA            reduce using rule 109 (expresion -> llamadaF .)
    PDER            reduce using rule 109 (expresion -> llamadaF .)
    CORDER          reduce using rule 109 (expresion -> llamadaF .)
    IGUAL           reduce using rule 109 (expresion -> llamadaF .)
    LLAVEDER        reduce using rule 109 (expresion -> llamadaF .)


state 99

    (110) expresion -> loop .

    MAS             reduce using rule 110 (expresion -> loop .)
    MENOS           reduce using rule 110 (expresion -> loop .)
    MULTIPLICACION  reduce using rule 110 (expresion -> loop .)
    DIVISION        reduce using rule 110 (expresion -> loop .)
    MODULO          reduce using rule 110 (expresion -> loop .)
    MAYOR           reduce using rule 110 (expresion -> loop .)
    MENOR           reduce using rule 110 (expresion -> loop .)
    MAYORIGUAL      reduce using rule 110 (expresion -> loop .)
    MENORIGUAL      reduce using rule 110 (expresion -> loop .)
    IGUALIGUAL      reduce using rule 110 (expresion -> loop .)
    DIFERENTE       reduce using rule 110 (expresion -> loop .)
    AND             reduce using rule 110 (expresion -> loop .)
    OR              reduce using rule 110 (expresion -> loop .)
    PUNTO           reduce using rule 110 (expresion -> loop .)
    AS              reduce using rule 110 (expresion -> loop .)
    LLAVEIZQ        reduce using rule 110 (expresion -> loop .)
    PTCOMA          reduce using rule 110 (expresion -> loop .)
    COMA            reduce using rule 110 (expresion -> loop .)
    PDER            reduce using rule 110 (expresion -> loop .)
    CORDER          reduce using rule 110 (expresion -> loop .)
    IGUAL           reduce using rule 110 (expresion -> loop .)
    LLAVEDER        reduce using rule 110 (expresion -> loop .)


state 100

    (111) expresion -> arraycontenido .

    MAS             reduce using rule 111 (expresion -> arraycontenido .)
    MENOS           reduce using rule 111 (expresion -> arraycontenido .)
    MULTIPLICACION  reduce using rule 111 (expresion -> arraycontenido .)
    DIVISION        reduce using rule 111 (expresion -> arraycontenido .)
    MODULO          reduce using rule 111 (expresion -> arraycontenido .)
    MAYOR           reduce using rule 111 (expresion -> arraycontenido .)
    MENOR           reduce using rule 111 (expresion -> arraycontenido .)
    MAYORIGUAL      reduce using rule 111 (expresion -> arraycontenido .)
    MENORIGUAL      reduce using rule 111 (expresion -> arraycontenido .)
    IGUALIGUAL      reduce using rule 111 (expresion -> arraycontenido .)
    DIFERENTE       reduce using rule 111 (expresion -> arraycontenido .)
    AND             reduce using rule 111 (expresion -> arraycontenido .)
    OR              reduce using rule 111 (expresion -> arraycontenido .)
    PUNTO           reduce using rule 111 (expresion -> arraycontenido .)
    AS              reduce using rule 111 (expresion -> arraycontenido .)
    LLAVEIZQ        reduce using rule 111 (expresion -> arraycontenido .)
    PTCOMA          reduce using rule 111 (expresion -> arraycontenido .)
    COMA            reduce using rule 111 (expresion -> arraycontenido .)
    PDER            reduce using rule 111 (expresion -> arraycontenido .)
    CORDER          reduce using rule 111 (expresion -> arraycontenido .)
    IGUAL           reduce using rule 111 (expresion -> arraycontenido .)
    LLAVEDER        reduce using rule 111 (expresion -> arraycontenido .)


state 101

    (112) expresion -> accesoarray .

    MAS             reduce using rule 112 (expresion -> accesoarray .)
    MENOS           reduce using rule 112 (expresion -> accesoarray .)
    MULTIPLICACION  reduce using rule 112 (expresion -> accesoarray .)
    DIVISION        reduce using rule 112 (expresion -> accesoarray .)
    MODULO          reduce using rule 112 (expresion -> accesoarray .)
    MAYOR           reduce using rule 112 (expresion -> accesoarray .)
    MENOR           reduce using rule 112 (expresion -> accesoarray .)
    MAYORIGUAL      reduce using rule 112 (expresion -> accesoarray .)
    MENORIGUAL      reduce using rule 112 (expresion -> accesoarray .)
    IGUALIGUAL      reduce using rule 112 (expresion -> accesoarray .)
    DIFERENTE       reduce using rule 112 (expresion -> accesoarray .)
    AND             reduce using rule 112 (expresion -> accesoarray .)
    OR              reduce using rule 112 (expresion -> accesoarray .)
    PUNTO           reduce using rule 112 (expresion -> accesoarray .)
    AS              reduce using rule 112 (expresion -> accesoarray .)
    LLAVEIZQ        reduce using rule 112 (expresion -> accesoarray .)
    PTCOMA          reduce using rule 112 (expresion -> accesoarray .)
    COMA            reduce using rule 112 (expresion -> accesoarray .)
    PDER            reduce using rule 112 (expresion -> accesoarray .)
    CORDER          reduce using rule 112 (expresion -> accesoarray .)
    IGUAL           reduce using rule 112 (expresion -> accesoarray .)
    LLAVEDER        reduce using rule 112 (expresion -> accesoarray .)


state 102

    (113) expresion -> referencia .

    MAS             reduce using rule 113 (expresion -> referencia .)
    MENOS           reduce using rule 113 (expresion -> referencia .)
    MULTIPLICACION  reduce using rule 113 (expresion -> referencia .)
    DIVISION        reduce using rule 113 (expresion -> referencia .)
    MODULO          reduce using rule 113 (expresion -> referencia .)
    MAYOR           reduce using rule 113 (expresion -> referencia .)
    MENOR           reduce using rule 113 (expresion -> referencia .)
    MAYORIGUAL      reduce using rule 113 (expresion -> referencia .)
    MENORIGUAL      reduce using rule 113 (expresion -> referencia .)
    IGUALIGUAL      reduce using rule 113 (expresion -> referencia .)
    DIFERENTE       reduce using rule 113 (expresion -> referencia .)
    AND             reduce using rule 113 (expresion -> referencia .)
    OR              reduce using rule 113 (expresion -> referencia .)
    PUNTO           reduce using rule 113 (expresion -> referencia .)
    AS              reduce using rule 113 (expresion -> referencia .)
    LLAVEIZQ        reduce using rule 113 (expresion -> referencia .)
    PTCOMA          reduce using rule 113 (expresion -> referencia .)
    COMA            reduce using rule 113 (expresion -> referencia .)
    PDER            reduce using rule 113 (expresion -> referencia .)
    CORDER          reduce using rule 113 (expresion -> referencia .)
    IGUAL           reduce using rule 113 (expresion -> referencia .)
    LLAVEDER        reduce using rule 113 (expresion -> referencia .)


state 103

    (114) expresion -> len .

    MAS             reduce using rule 114 (expresion -> len .)
    MENOS           reduce using rule 114 (expresion -> len .)
    MULTIPLICACION  reduce using rule 114 (expresion -> len .)
    DIVISION        reduce using rule 114 (expresion -> len .)
    MODULO          reduce using rule 114 (expresion -> len .)
    MAYOR           reduce using rule 114 (expresion -> len .)
    MENOR           reduce using rule 114 (expresion -> len .)
    MAYORIGUAL      reduce using rule 114 (expresion -> len .)
    MENORIGUAL      reduce using rule 114 (expresion -> len .)
    IGUALIGUAL      reduce using rule 114 (expresion -> len .)
    DIFERENTE       reduce using rule 114 (expresion -> len .)
    AND             reduce using rule 114 (expresion -> len .)
    OR              reduce using rule 114 (expresion -> len .)
    PUNTO           reduce using rule 114 (expresion -> len .)
    AS              reduce using rule 114 (expresion -> len .)
    LLAVEIZQ        reduce using rule 114 (expresion -> len .)
    PTCOMA          reduce using rule 114 (expresion -> len .)
    COMA            reduce using rule 114 (expresion -> len .)
    PDER            reduce using rule 114 (expresion -> len .)
    CORDER          reduce using rule 114 (expresion -> len .)
    IGUAL           reduce using rule 114 (expresion -> len .)
    LLAVEDER        reduce using rule 114 (expresion -> len .)


state 104

    (115) expresion -> capacity .

    MAS             reduce using rule 115 (expresion -> capacity .)
    MENOS           reduce using rule 115 (expresion -> capacity .)
    MULTIPLICACION  reduce using rule 115 (expresion -> capacity .)
    DIVISION        reduce using rule 115 (expresion -> capacity .)
    MODULO          reduce using rule 115 (expresion -> capacity .)
    MAYOR           reduce using rule 115 (expresion -> capacity .)
    MENOR           reduce using rule 115 (expresion -> capacity .)
    MAYORIGUAL      reduce using rule 115 (expresion -> capacity .)
    MENORIGUAL      reduce using rule 115 (expresion -> capacity .)
    IGUALIGUAL      reduce using rule 115 (expresion -> capacity .)
    DIFERENTE       reduce using rule 115 (expresion -> capacity .)
    AND             reduce using rule 115 (expresion -> capacity .)
    OR              reduce using rule 115 (expresion -> capacity .)
    PUNTO           reduce using rule 115 (expresion -> capacity .)
    AS              reduce using rule 115 (expresion -> capacity .)
    LLAVEIZQ        reduce using rule 115 (expresion -> capacity .)
    PTCOMA          reduce using rule 115 (expresion -> capacity .)
    COMA            reduce using rule 115 (expresion -> capacity .)
    PDER            reduce using rule 115 (expresion -> capacity .)
    CORDER          reduce using rule 115 (expresion -> capacity .)
    IGUAL           reduce using rule 115 (expresion -> capacity .)
    LLAVEDER        reduce using rule 115 (expresion -> capacity .)


state 105

    (116) expresion -> contains .

    MAS             reduce using rule 116 (expresion -> contains .)
    MENOS           reduce using rule 116 (expresion -> contains .)
    MULTIPLICACION  reduce using rule 116 (expresion -> contains .)
    DIVISION        reduce using rule 116 (expresion -> contains .)
    MODULO          reduce using rule 116 (expresion -> contains .)
    MAYOR           reduce using rule 116 (expresion -> contains .)
    MENOR           reduce using rule 116 (expresion -> contains .)
    MAYORIGUAL      reduce using rule 116 (expresion -> contains .)
    MENORIGUAL      reduce using rule 116 (expresion -> contains .)
    IGUALIGUAL      reduce using rule 116 (expresion -> contains .)
    DIFERENTE       reduce using rule 116 (expresion -> contains .)
    AND             reduce using rule 116 (expresion -> contains .)
    OR              reduce using rule 116 (expresion -> contains .)
    PUNTO           reduce using rule 116 (expresion -> contains .)
    AS              reduce using rule 116 (expresion -> contains .)
    LLAVEIZQ        reduce using rule 116 (expresion -> contains .)
    PTCOMA          reduce using rule 116 (expresion -> contains .)
    COMA            reduce using rule 116 (expresion -> contains .)
    PDER            reduce using rule 116 (expresion -> contains .)
    CORDER          reduce using rule 116 (expresion -> contains .)
    IGUAL           reduce using rule 116 (expresion -> contains .)
    LLAVEDER        reduce using rule 116 (expresion -> contains .)


state 106

    (117) expresion -> clone .

    MAS             reduce using rule 117 (expresion -> clone .)
    MENOS           reduce using rule 117 (expresion -> clone .)
    MULTIPLICACION  reduce using rule 117 (expresion -> clone .)
    DIVISION        reduce using rule 117 (expresion -> clone .)
    MODULO          reduce using rule 117 (expresion -> clone .)
    MAYOR           reduce using rule 117 (expresion -> clone .)
    MENOR           reduce using rule 117 (expresion -> clone .)
    MAYORIGUAL      reduce using rule 117 (expresion -> clone .)
    MENORIGUAL      reduce using rule 117 (expresion -> clone .)
    IGUALIGUAL      reduce using rule 117 (expresion -> clone .)
    DIFERENTE       reduce using rule 117 (expresion -> clone .)
    AND             reduce using rule 117 (expresion -> clone .)
    OR              reduce using rule 117 (expresion -> clone .)
    PUNTO           reduce using rule 117 (expresion -> clone .)
    AS              reduce using rule 117 (expresion -> clone .)
    LLAVEIZQ        reduce using rule 117 (expresion -> clone .)
    PTCOMA          reduce using rule 117 (expresion -> clone .)
    COMA            reduce using rule 117 (expresion -> clone .)
    PDER            reduce using rule 117 (expresion -> clone .)
    CORDER          reduce using rule 117 (expresion -> clone .)
    IGUAL           reduce using rule 117 (expresion -> clone .)
    LLAVEDER        reduce using rule 117 (expresion -> clone .)


state 107

    (118) expresion -> vector .

    MAS             reduce using rule 118 (expresion -> vector .)
    MENOS           reduce using rule 118 (expresion -> vector .)
    MULTIPLICACION  reduce using rule 118 (expresion -> vector .)
    DIVISION        reduce using rule 118 (expresion -> vector .)
    MODULO          reduce using rule 118 (expresion -> vector .)
    MAYOR           reduce using rule 118 (expresion -> vector .)
    MENOR           reduce using rule 118 (expresion -> vector .)
    MAYORIGUAL      reduce using rule 118 (expresion -> vector .)
    MENORIGUAL      reduce using rule 118 (expresion -> vector .)
    IGUALIGUAL      reduce using rule 118 (expresion -> vector .)
    DIFERENTE       reduce using rule 118 (expresion -> vector .)
    AND             reduce using rule 118 (expresion -> vector .)
    OR              reduce using rule 118 (expresion -> vector .)
    PUNTO           reduce using rule 118 (expresion -> vector .)
    AS              reduce using rule 118 (expresion -> vector .)
    LLAVEIZQ        reduce using rule 118 (expresion -> vector .)
    PTCOMA          reduce using rule 118 (expresion -> vector .)
    COMA            reduce using rule 118 (expresion -> vector .)
    PDER            reduce using rule 118 (expresion -> vector .)
    CORDER          reduce using rule 118 (expresion -> vector .)
    IGUAL           reduce using rule 118 (expresion -> vector .)
    LLAVEDER        reduce using rule 118 (expresion -> vector .)


state 108

    (119) expresion -> remove .

    MAS             reduce using rule 119 (expresion -> remove .)
    MENOS           reduce using rule 119 (expresion -> remove .)
    MULTIPLICACION  reduce using rule 119 (expresion -> remove .)
    DIVISION        reduce using rule 119 (expresion -> remove .)
    MODULO          reduce using rule 119 (expresion -> remove .)
    MAYOR           reduce using rule 119 (expresion -> remove .)
    MENOR           reduce using rule 119 (expresion -> remove .)
    MAYORIGUAL      reduce using rule 119 (expresion -> remove .)
    MENORIGUAL      reduce using rule 119 (expresion -> remove .)
    IGUALIGUAL      reduce using rule 119 (expresion -> remove .)
    DIFERENTE       reduce using rule 119 (expresion -> remove .)
    AND             reduce using rule 119 (expresion -> remove .)
    OR              reduce using rule 119 (expresion -> remove .)
    PUNTO           reduce using rule 119 (expresion -> remove .)
    AS              reduce using rule 119 (expresion -> remove .)
    LLAVEIZQ        reduce using rule 119 (expresion -> remove .)
    PTCOMA          reduce using rule 119 (expresion -> remove .)
    COMA            reduce using rule 119 (expresion -> remove .)
    PDER            reduce using rule 119 (expresion -> remove .)
    CORDER          reduce using rule 119 (expresion -> remove .)
    IGUAL           reduce using rule 119 (expresion -> remove .)
    LLAVEDER        reduce using rule 119 (expresion -> remove .)


state 109

    (149) expresion -> ENTERO .

    MAS             reduce using rule 149 (expresion -> ENTERO .)
    MENOS           reduce using rule 149 (expresion -> ENTERO .)
    MULTIPLICACION  reduce using rule 149 (expresion -> ENTERO .)
    DIVISION        reduce using rule 149 (expresion -> ENTERO .)
    MODULO          reduce using rule 149 (expresion -> ENTERO .)
    MAYOR           reduce using rule 149 (expresion -> ENTERO .)
    MENOR           reduce using rule 149 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 149 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 149 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 149 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 149 (expresion -> ENTERO .)
    AND             reduce using rule 149 (expresion -> ENTERO .)
    OR              reduce using rule 149 (expresion -> ENTERO .)
    PUNTO           reduce using rule 149 (expresion -> ENTERO .)
    AS              reduce using rule 149 (expresion -> ENTERO .)
    LLAVEIZQ        reduce using rule 149 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 149 (expresion -> ENTERO .)
    COMA            reduce using rule 149 (expresion -> ENTERO .)
    PDER            reduce using rule 149 (expresion -> ENTERO .)
    CORDER          reduce using rule 149 (expresion -> ENTERO .)
    IGUAL           reduce using rule 149 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 149 (expresion -> ENTERO .)


state 110

    (150) expresion -> DECIMAL .

    MAS             reduce using rule 150 (expresion -> DECIMAL .)
    MENOS           reduce using rule 150 (expresion -> DECIMAL .)
    MULTIPLICACION  reduce using rule 150 (expresion -> DECIMAL .)
    DIVISION        reduce using rule 150 (expresion -> DECIMAL .)
    MODULO          reduce using rule 150 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 150 (expresion -> DECIMAL .)
    MENOR           reduce using rule 150 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 150 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 150 (expresion -> DECIMAL .)
    IGUALIGUAL      reduce using rule 150 (expresion -> DECIMAL .)
    DIFERENTE       reduce using rule 150 (expresion -> DECIMAL .)
    AND             reduce using rule 150 (expresion -> DECIMAL .)
    OR              reduce using rule 150 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 150 (expresion -> DECIMAL .)
    AS              reduce using rule 150 (expresion -> DECIMAL .)
    LLAVEIZQ        reduce using rule 150 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 150 (expresion -> DECIMAL .)
    COMA            reduce using rule 150 (expresion -> DECIMAL .)
    PDER            reduce using rule 150 (expresion -> DECIMAL .)
    CORDER          reduce using rule 150 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 150 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 150 (expresion -> DECIMAL .)


state 111

    (151) expresion -> ID .
    (14) llamadaF -> ID . PIZQ PDER
    (15) llamadaF -> ID . PIZQ lista_expresiones PDER
    (130) accesoarray -> ID . ubicaciones
    (131) ubicaciones -> . ubicaciones ubicacion
    (132) ubicaciones -> . ubicacion
    (133) ubicacion -> . CORIZQ expresion CORDER

    MAS             reduce using rule 151 (expresion -> ID .)
    MENOS           reduce using rule 151 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 151 (expresion -> ID .)
    DIVISION        reduce using rule 151 (expresion -> ID .)
    MODULO          reduce using rule 151 (expresion -> ID .)
    MAYOR           reduce using rule 151 (expresion -> ID .)
    MENOR           reduce using rule 151 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 151 (expresion -> ID .)
    MENORIGUAL      reduce using rule 151 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 151 (expresion -> ID .)
    DIFERENTE       reduce using rule 151 (expresion -> ID .)
    AND             reduce using rule 151 (expresion -> ID .)
    OR              reduce using rule 151 (expresion -> ID .)
    PUNTO           reduce using rule 151 (expresion -> ID .)
    AS              reduce using rule 151 (expresion -> ID .)
    LLAVEIZQ        reduce using rule 151 (expresion -> ID .)
    PTCOMA          reduce using rule 151 (expresion -> ID .)
    COMA            reduce using rule 151 (expresion -> ID .)
    PDER            reduce using rule 151 (expresion -> ID .)
    CORDER          reduce using rule 151 (expresion -> ID .)
    IGUAL           reduce using rule 151 (expresion -> ID .)
    LLAVEDER        reduce using rule 151 (expresion -> ID .)
    PIZQ            shift and go to state 81
    CORIZQ          shift and go to state 85

    ubicaciones                    shift and go to state 165
    ubicacion                      shift and go to state 84

state 112

    (152) expresion -> CARACTER .

    MAS             reduce using rule 152 (expresion -> CARACTER .)
    MENOS           reduce using rule 152 (expresion -> CARACTER .)
    MULTIPLICACION  reduce using rule 152 (expresion -> CARACTER .)
    DIVISION        reduce using rule 152 (expresion -> CARACTER .)
    MODULO          reduce using rule 152 (expresion -> CARACTER .)
    MAYOR           reduce using rule 152 (expresion -> CARACTER .)
    MENOR           reduce using rule 152 (expresion -> CARACTER .)
    MAYORIGUAL      reduce using rule 152 (expresion -> CARACTER .)
    MENORIGUAL      reduce using rule 152 (expresion -> CARACTER .)
    IGUALIGUAL      reduce using rule 152 (expresion -> CARACTER .)
    DIFERENTE       reduce using rule 152 (expresion -> CARACTER .)
    AND             reduce using rule 152 (expresion -> CARACTER .)
    OR              reduce using rule 152 (expresion -> CARACTER .)
    PUNTO           reduce using rule 152 (expresion -> CARACTER .)
    AS              reduce using rule 152 (expresion -> CARACTER .)
    LLAVEIZQ        reduce using rule 152 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 152 (expresion -> CARACTER .)
    COMA            reduce using rule 152 (expresion -> CARACTER .)
    PDER            reduce using rule 152 (expresion -> CARACTER .)
    CORDER          reduce using rule 152 (expresion -> CARACTER .)
    IGUAL           reduce using rule 152 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 152 (expresion -> CARACTER .)


state 113

    (153) expresion -> CADENA .

    MAS             reduce using rule 153 (expresion -> CADENA .)
    MENOS           reduce using rule 153 (expresion -> CADENA .)
    MULTIPLICACION  reduce using rule 153 (expresion -> CADENA .)
    DIVISION        reduce using rule 153 (expresion -> CADENA .)
    MODULO          reduce using rule 153 (expresion -> CADENA .)
    MAYOR           reduce using rule 153 (expresion -> CADENA .)
    MENOR           reduce using rule 153 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 153 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 153 (expresion -> CADENA .)
    IGUALIGUAL      reduce using rule 153 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 153 (expresion -> CADENA .)
    AND             reduce using rule 153 (expresion -> CADENA .)
    OR              reduce using rule 153 (expresion -> CADENA .)
    PUNTO           reduce using rule 153 (expresion -> CADENA .)
    AS              reduce using rule 153 (expresion -> CADENA .)
    LLAVEIZQ        reduce using rule 153 (expresion -> CADENA .)
    PTCOMA          reduce using rule 153 (expresion -> CADENA .)
    COMA            reduce using rule 153 (expresion -> CADENA .)
    PDER            reduce using rule 153 (expresion -> CADENA .)
    CORDER          reduce using rule 153 (expresion -> CADENA .)
    IGUAL           reduce using rule 153 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 153 (expresion -> CADENA .)


state 114

    (154) expresion -> TRUE .

    MAS             reduce using rule 154 (expresion -> TRUE .)
    MENOS           reduce using rule 154 (expresion -> TRUE .)
    MULTIPLICACION  reduce using rule 154 (expresion -> TRUE .)
    DIVISION        reduce using rule 154 (expresion -> TRUE .)
    MODULO          reduce using rule 154 (expresion -> TRUE .)
    MAYOR           reduce using rule 154 (expresion -> TRUE .)
    MENOR           reduce using rule 154 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 154 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 154 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 154 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 154 (expresion -> TRUE .)
    AND             reduce using rule 154 (expresion -> TRUE .)
    OR              reduce using rule 154 (expresion -> TRUE .)
    PUNTO           reduce using rule 154 (expresion -> TRUE .)
    AS              reduce using rule 154 (expresion -> TRUE .)
    LLAVEIZQ        reduce using rule 154 (expresion -> TRUE .)
    PTCOMA          reduce using rule 154 (expresion -> TRUE .)
    COMA            reduce using rule 154 (expresion -> TRUE .)
    PDER            reduce using rule 154 (expresion -> TRUE .)
    CORDER          reduce using rule 154 (expresion -> TRUE .)
    IGUAL           reduce using rule 154 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 154 (expresion -> TRUE .)


state 115

    (155) expresion -> FALSE .

    MAS             reduce using rule 155 (expresion -> FALSE .)
    MENOS           reduce using rule 155 (expresion -> FALSE .)
    MULTIPLICACION  reduce using rule 155 (expresion -> FALSE .)
    DIVISION        reduce using rule 155 (expresion -> FALSE .)
    MODULO          reduce using rule 155 (expresion -> FALSE .)
    MAYOR           reduce using rule 155 (expresion -> FALSE .)
    MENOR           reduce using rule 155 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 155 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 155 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 155 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 155 (expresion -> FALSE .)
    AND             reduce using rule 155 (expresion -> FALSE .)
    OR              reduce using rule 155 (expresion -> FALSE .)
    PUNTO           reduce using rule 155 (expresion -> FALSE .)
    AS              reduce using rule 155 (expresion -> FALSE .)
    LLAVEIZQ        reduce using rule 155 (expresion -> FALSE .)
    PTCOMA          reduce using rule 155 (expresion -> FALSE .)
    COMA            reduce using rule 155 (expresion -> FALSE .)
    PDER            reduce using rule 155 (expresion -> FALSE .)
    CORDER          reduce using rule 155 (expresion -> FALSE .)
    IGUAL           reduce using rule 155 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 155 (expresion -> FALSE .)


state 116

    (134) arraycontenido -> CORIZQ . lista_expresiones CORDER
    (16) lista_expresiones -> . lista_expresiones COMA expresion
    (17) lista_expresiones -> . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    lista_expresiones              shift and go to state 166
    expresion                      shift and go to state 137
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 117

    (129) referencia -> Y . MUT ID

    MUT             shift and go to state 167


state 118

    (122) vector -> VEC . NOT CORIZQ lista_expresiones CORDER
    (123) vector -> VEC . NOT CORIZQ expresion PTCOMA expresion CORDER

    NOT             shift and go to state 168


state 119

    (124) vector -> VECM . DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> VECM . DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER

    DOBLEPT         shift and go to state 169


state 120

    (53) return -> RETURN expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 53 (return -> RETURN expresion .)
    COMA            reduce using rule 53 (return -> RETURN expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 121

    (76) loop -> LOOP bloque .

    LLAVEDER        reduce using rule 76 (loop -> LOOP bloque .)
    PRINTLN         reduce using rule 76 (loop -> LOOP bloque .)
    LET             reduce using rule 76 (loop -> LOOP bloque .)
    ID              reduce using rule 76 (loop -> LOOP bloque .)
    IF              reduce using rule 76 (loop -> LOOP bloque .)
    RETURN          reduce using rule 76 (loop -> LOOP bloque .)
    LOOP            reduce using rule 76 (loop -> LOOP bloque .)
    BREAK           reduce using rule 76 (loop -> LOOP bloque .)
    WHILE           reduce using rule 76 (loop -> LOOP bloque .)
    CONTINUE        reduce using rule 76 (loop -> LOOP bloque .)
    FOR             reduce using rule 76 (loop -> LOOP bloque .)
    MATCH           reduce using rule 76 (loop -> LOOP bloque .)
    MAS             reduce using rule 76 (loop -> LOOP bloque .)
    MENOS           reduce using rule 76 (loop -> LOOP bloque .)
    MULTIPLICACION  reduce using rule 76 (loop -> LOOP bloque .)
    DIVISION        reduce using rule 76 (loop -> LOOP bloque .)
    MODULO          reduce using rule 76 (loop -> LOOP bloque .)
    MAYOR           reduce using rule 76 (loop -> LOOP bloque .)
    MENOR           reduce using rule 76 (loop -> LOOP bloque .)
    MAYORIGUAL      reduce using rule 76 (loop -> LOOP bloque .)
    MENORIGUAL      reduce using rule 76 (loop -> LOOP bloque .)
    IGUALIGUAL      reduce using rule 76 (loop -> LOOP bloque .)
    DIFERENTE       reduce using rule 76 (loop -> LOOP bloque .)
    AND             reduce using rule 76 (loop -> LOOP bloque .)
    OR              reduce using rule 76 (loop -> LOOP bloque .)
    PUNTO           reduce using rule 76 (loop -> LOOP bloque .)
    AS              reduce using rule 76 (loop -> LOOP bloque .)
    LLAVEIZQ        reduce using rule 76 (loop -> LOOP bloque .)
    PTCOMA          reduce using rule 76 (loop -> LOOP bloque .)
    COMA            reduce using rule 76 (loop -> LOOP bloque .)
    PDER            reduce using rule 76 (loop -> LOOP bloque .)
    CORDER          reduce using rule 76 (loop -> LOOP bloque .)
    IGUAL           reduce using rule 76 (loop -> LOOP bloque .)
    I64             reduce using rule 76 (loop -> LOOP bloque .)
    F64             reduce using rule 76 (loop -> LOOP bloque .)
    PIZQ            reduce using rule 76 (loop -> LOOP bloque .)
    NOT             reduce using rule 76 (loop -> LOOP bloque .)
    ENTERO          reduce using rule 76 (loop -> LOOP bloque .)
    DECIMAL         reduce using rule 76 (loop -> LOOP bloque .)
    CARACTER        reduce using rule 76 (loop -> LOOP bloque .)
    CADENA          reduce using rule 76 (loop -> LOOP bloque .)
    TRUE            reduce using rule 76 (loop -> LOOP bloque .)
    FALSE           reduce using rule 76 (loop -> LOOP bloque .)
    CORIZQ          reduce using rule 76 (loop -> LOOP bloque .)
    Y               reduce using rule 76 (loop -> LOOP bloque .)
    VEC             reduce using rule 76 (loop -> LOOP bloque .)
    VECM            reduce using rule 76 (loop -> LOOP bloque .)


state 122

    (78) break -> BREAK expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 78 (break -> BREAK expresion .)
    COMA            reduce using rule 78 (break -> BREAK expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 123

    (79) while -> WHILE expresion . bloque
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 170

state 124

    (81) for -> FOR ID . IN expresion PUNTO PUNTO expresion bloque
    (82) for -> FOR ID . IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> FOR ID . IN expresion bloque

    IN              shift and go to state 171


state 125

    (75) match -> MATCH expresion . LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEIZQ        shift and go to state 172
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 126

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato . bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 173

state 127

    (12) parametro -> ID DOBLEPT Y MUT dimensiones .

    PDER            reduce using rule 12 (parametro -> ID DOBLEPT Y MUT dimensiones .)
    COMA            reduce using rule 12 (parametro -> ID DOBLEPT Y MUT dimensiones .)


state 128

    (13) parametro -> ID DOBLEPT Y MUT VECM . MENOR tipo_dato MAYOR

    MENOR           shift and go to state 174


state 129

    (63) dimensiones -> CORIZQ . tipo_dato CORDER
    (64) dimensiones -> CORIZQ . tipo_dato PTCOMA expresion CORDER
    (65) dimensiones -> CORIZQ . CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (66) dimensiones -> CORIZQ . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (163) str -> . Y STR

    CORIZQ          shift and go to state 175
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 176
    str                            shift and go to state 25

state 130

    (51) print -> PRINTLN NOT PIZQ . lista_expresiones PDER
    (16) lista_expresiones -> . lista_expresiones COMA expresion
    (17) lista_expresiones -> . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    lista_expresiones              shift and go to state 177
    expresion                      shift and go to state 137
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 131

    (55) declaracion -> LET MUT ID . DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> LET MUT ID . IGUAL expresion
    (59) declaracion -> LET MUT ID . DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> LET MUT ID . DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion

    DOBLEPT         shift and go to state 178
    IGUAL           shift and go to state 179


state 132

    (56) declaracion -> LET ID DOBLEPT . tipo_dato IGUAL expresion
    (60) declaracion -> LET ID DOBLEPT . dimensiones IGUAL expresion
    (62) declaracion -> LET ID DOBLEPT . VECM MENOR tipo_dato MAYOR IGUAL expresion
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (63) dimensiones -> . CORIZQ tipo_dato CORDER
    (64) dimensiones -> . CORIZQ tipo_dato PTCOMA expresion CORDER
    (65) dimensiones -> . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (66) dimensiones -> . CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (163) str -> . Y STR

    VECM            shift and go to state 182
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    CORIZQ          shift and go to state 129
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 180
    dimensiones                    shift and go to state 181
    str                            shift and go to state 25

state 133

    (58) declaracion -> LET ID IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 183
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 134

    (67) asignacion -> ID IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 67 (asignacion -> ID IGUAL expresion .)
    COMA            reduce using rule 67 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 135

    (14) llamadaF -> ID PIZQ PDER .

    PTCOMA          reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MAS             reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MENOS           reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MULTIPLICACION  reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    DIVISION        reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MODULO          reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MAYOR           reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MENOR           reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    IGUALIGUAL      reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    DIFERENTE       reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    AND             reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    OR              reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    PUNTO           reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    AS              reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    LLAVEIZQ        reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    COMA            reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    PDER            reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    CORDER          reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    IGUAL           reduce using rule 14 (llamadaF -> ID PIZQ PDER .)
    LLAVEDER        reduce using rule 14 (llamadaF -> ID PIZQ PDER .)


state 136

    (15) llamadaF -> ID PIZQ lista_expresiones . PDER
    (16) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 184
    COMA            shift and go to state 185


state 137

    (17) lista_expresiones -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            reduce using rule 17 (lista_expresiones -> expresion .)
    COMA            reduce using rule 17 (lista_expresiones -> expresion .)
    CORDER          reduce using rule 17 (lista_expresiones -> expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 138

    (85) insert -> ID PUNTO INSERT . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 186


state 139

    (84) push -> ID PUNTO PUSH . PIZQ expresion PDER

    PIZQ            shift and go to state 187


state 140

    (54) asignacionA -> ID ubicaciones IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 188
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 141

    (131) ubicaciones -> ubicaciones ubicacion .

    IGUAL           reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    CORIZQ          reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    MAS             reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    MENOS           reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    MULTIPLICACION  reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    DIVISION        reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    MODULO          reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    MAYOR           reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    MENOR           reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    MAYORIGUAL      reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    MENORIGUAL      reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    IGUALIGUAL      reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    DIFERENTE       reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    AND             reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    OR              reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    PUNTO           reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    AS              reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    LLAVEIZQ        reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    PTCOMA          reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    COMA            reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    PDER            reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    CORDER          reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)
    LLAVEDER        reduce using rule 131 (ubicaciones -> ubicaciones ubicacion .)


state 142

    (133) ubicacion -> CORIZQ expresion . CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 189
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 143

    (142) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEIZQ        shift and go to state 190
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 144

    (68) if_i -> IF expresion bloque .
    (69) if_i -> IF expresion bloque . ELSE bloque
    (70) if_i -> IF expresion bloque . listaelseI
    (71) if_i -> IF expresion bloque . listaelseI ELSE bloque
    (72) listaelseI -> . listaelseI elseifI
    (73) listaelseI -> . elseifI
    (74) elseifI -> . ELSE IF expresion bloque

    LLAVEDER        reduce using rule 68 (if_i -> IF expresion bloque .)
    PRINTLN         reduce using rule 68 (if_i -> IF expresion bloque .)
    LET             reduce using rule 68 (if_i -> IF expresion bloque .)
    ID              reduce using rule 68 (if_i -> IF expresion bloque .)
    IF              reduce using rule 68 (if_i -> IF expresion bloque .)
    RETURN          reduce using rule 68 (if_i -> IF expresion bloque .)
    LOOP            reduce using rule 68 (if_i -> IF expresion bloque .)
    BREAK           reduce using rule 68 (if_i -> IF expresion bloque .)
    WHILE           reduce using rule 68 (if_i -> IF expresion bloque .)
    CONTINUE        reduce using rule 68 (if_i -> IF expresion bloque .)
    FOR             reduce using rule 68 (if_i -> IF expresion bloque .)
    MATCH           reduce using rule 68 (if_i -> IF expresion bloque .)
    MENOS           reduce using rule 68 (if_i -> IF expresion bloque .)
    I64             reduce using rule 68 (if_i -> IF expresion bloque .)
    F64             reduce using rule 68 (if_i -> IF expresion bloque .)
    PIZQ            reduce using rule 68 (if_i -> IF expresion bloque .)
    NOT             reduce using rule 68 (if_i -> IF expresion bloque .)
    ENTERO          reduce using rule 68 (if_i -> IF expresion bloque .)
    DECIMAL         reduce using rule 68 (if_i -> IF expresion bloque .)
    CARACTER        reduce using rule 68 (if_i -> IF expresion bloque .)
    CADENA          reduce using rule 68 (if_i -> IF expresion bloque .)
    TRUE            reduce using rule 68 (if_i -> IF expresion bloque .)
    FALSE           reduce using rule 68 (if_i -> IF expresion bloque .)
    CORIZQ          reduce using rule 68 (if_i -> IF expresion bloque .)
    Y               reduce using rule 68 (if_i -> IF expresion bloque .)
    VEC             reduce using rule 68 (if_i -> IF expresion bloque .)
    VECM            reduce using rule 68 (if_i -> IF expresion bloque .)
    COMA            reduce using rule 68 (if_i -> IF expresion bloque .)
    ELSE            shift and go to state 191

    listaelseI                     shift and go to state 192
    elseifI                        shift and go to state 193

state 145

    (87) expresion -> expresion MAS . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 194
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 146

    (88) expresion -> expresion MENOS . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 195
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 147

    (89) expresion -> expresion MULTIPLICACION . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 196
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 148

    (90) expresion -> expresion DIVISION . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 197
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 149

    (91) expresion -> expresion MODULO . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 198
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 150

    (95) expresion -> expresion MAYOR . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 199
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 151

    (96) expresion -> expresion MENOR . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 200
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 152

    (97) expresion -> expresion MAYORIGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 201
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 153

    (98) expresion -> expresion MENORIGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 202
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 154

    (99) expresion -> expresion IGUALIGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 203
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 155

    (100) expresion -> expresion DIFERENTE . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 204
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 156

    (101) expresion -> expresion AND . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 205
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 157

    (102) expresion -> expresion OR . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 206
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 158

    (135) tostring -> expresion PUNTO . TOSTRING PIZQ PDER
    (136) tostring -> expresion PUNTO . TOOWNED PIZQ PDER
    (140) abs -> expresion PUNTO . ABS PIZQ PDER
    (141) sqrt -> expresion PUNTO . SQRT PIZQ PDER
    (127) len -> expresion PUNTO . LEN PIZQ PDER
    (128) capacity -> expresion PUNTO . CAPACITY PIZQ PDER
    (121) contains -> expresion PUNTO . CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion PUNTO . CLONE PIZQ PDER
    (120) remove -> expresion PUNTO . REMOVE PIZQ expresion PDER

    TOSTRING        shift and go to state 207
    TOOWNED         shift and go to state 208
    ABS             shift and go to state 209
    SQRT            shift and go to state 210
    LEN             shift and go to state 211
    CAPACITY        shift and go to state 212
    CONTAINS        shift and go to state 213
    CLONE           shift and go to state 214
    REMOVE          shift and go to state 215


state 159

    (137) as -> expresion AS . I64
    (138) as -> expresion AS . F64
    (139) as -> expresion AS . USIZE

    I64             shift and go to state 216
    F64             shift and go to state 217
    USIZE           shift and go to state 218


state 160

    (86) expresion -> MENOS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 86 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 86 (expresion -> MENOS expresion .)
    MULTIPLICACION  reduce using rule 86 (expresion -> MENOS expresion .)
    DIVISION        reduce using rule 86 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 86 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 86 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 86 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 86 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 86 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 86 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 86 (expresion -> MENOS expresion .)
    AND             reduce using rule 86 (expresion -> MENOS expresion .)
    OR              reduce using rule 86 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 86 (expresion -> MENOS expresion .)
    AS              reduce using rule 86 (expresion -> MENOS expresion .)
    LLAVEIZQ        reduce using rule 86 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 86 (expresion -> MENOS expresion .)
    COMA            reduce using rule 86 (expresion -> MENOS expresion .)
    PDER            reduce using rule 86 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 86 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 86 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 86 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 145 ]
  ! MENOS           [ shift and go to state 146 ]
  ! MULTIPLICACION  [ shift and go to state 147 ]
  ! DIVISION        [ shift and go to state 148 ]
  ! MODULO          [ shift and go to state 149 ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! PUNTO           [ shift and go to state 158 ]
  ! AS              [ shift and go to state 159 ]


state 161

    (92) expresion -> I64 DOBLEPT . DOBLEPT POW PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 219


state 162

    (94) expresion -> PIZQ expresion . PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 220
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 163

    (93) expresion -> F64 DOBLEPT . DOBLEPT POWF PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 221


state 164

    (103) expresion -> NOT expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 103 (expresion -> NOT expresion .)
    MENOS           reduce using rule 103 (expresion -> NOT expresion .)
    MULTIPLICACION  reduce using rule 103 (expresion -> NOT expresion .)
    DIVISION        reduce using rule 103 (expresion -> NOT expresion .)
    MODULO          reduce using rule 103 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 103 (expresion -> NOT expresion .)
    MENOR           reduce using rule 103 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 103 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 103 (expresion -> NOT expresion .)
    IGUALIGUAL      reduce using rule 103 (expresion -> NOT expresion .)
    DIFERENTE       reduce using rule 103 (expresion -> NOT expresion .)
    AND             reduce using rule 103 (expresion -> NOT expresion .)
    OR              reduce using rule 103 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 103 (expresion -> NOT expresion .)
    AS              reduce using rule 103 (expresion -> NOT expresion .)
    LLAVEIZQ        reduce using rule 103 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 103 (expresion -> NOT expresion .)
    COMA            reduce using rule 103 (expresion -> NOT expresion .)
    PDER            reduce using rule 103 (expresion -> NOT expresion .)
    CORDER          reduce using rule 103 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 103 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 103 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 145 ]
  ! MENOS           [ shift and go to state 146 ]
  ! MULTIPLICACION  [ shift and go to state 147 ]
  ! DIVISION        [ shift and go to state 148 ]
  ! MODULO          [ shift and go to state 149 ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! PUNTO           [ shift and go to state 158 ]
  ! AS              [ shift and go to state 159 ]


state 165

    (130) accesoarray -> ID ubicaciones .
    (131) ubicaciones -> ubicaciones . ubicacion
    (133) ubicacion -> . CORIZQ expresion CORDER

    MAS             reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MENOS           reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MULTIPLICACION  reduce using rule 130 (accesoarray -> ID ubicaciones .)
    DIVISION        reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MODULO          reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MAYOR           reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MENOR           reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MAYORIGUAL      reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MENORIGUAL      reduce using rule 130 (accesoarray -> ID ubicaciones .)
    IGUALIGUAL      reduce using rule 130 (accesoarray -> ID ubicaciones .)
    DIFERENTE       reduce using rule 130 (accesoarray -> ID ubicaciones .)
    AND             reduce using rule 130 (accesoarray -> ID ubicaciones .)
    OR              reduce using rule 130 (accesoarray -> ID ubicaciones .)
    PUNTO           reduce using rule 130 (accesoarray -> ID ubicaciones .)
    AS              reduce using rule 130 (accesoarray -> ID ubicaciones .)
    LLAVEIZQ        reduce using rule 130 (accesoarray -> ID ubicaciones .)
    PTCOMA          reduce using rule 130 (accesoarray -> ID ubicaciones .)
    COMA            reduce using rule 130 (accesoarray -> ID ubicaciones .)
    PDER            reduce using rule 130 (accesoarray -> ID ubicaciones .)
    CORDER          reduce using rule 130 (accesoarray -> ID ubicaciones .)
    IGUAL           reduce using rule 130 (accesoarray -> ID ubicaciones .)
    LLAVEDER        reduce using rule 130 (accesoarray -> ID ubicaciones .)
    CORIZQ          shift and go to state 85

    ubicacion                      shift and go to state 141

state 166

    (134) arraycontenido -> CORIZQ lista_expresiones . CORDER
    (16) lista_expresiones -> lista_expresiones . COMA expresion

    CORDER          shift and go to state 222
    COMA            shift and go to state 185


state 167

    (129) referencia -> Y MUT . ID

    ID              shift and go to state 223


state 168

    (122) vector -> VEC NOT . CORIZQ lista_expresiones CORDER
    (123) vector -> VEC NOT . CORIZQ expresion PTCOMA expresion CORDER

    CORIZQ          shift and go to state 224


state 169

    (124) vector -> VECM DOBLEPT . DOBLEPT NEW PIZQ PDER
    (125) vector -> VECM DOBLEPT . DOBLEPT WCAPACITY PIZQ expresion PDER

    DOBLEPT         shift and go to state 225


state 170

    (79) while -> WHILE expresion bloque .

    LLAVEDER        reduce using rule 79 (while -> WHILE expresion bloque .)
    PRINTLN         reduce using rule 79 (while -> WHILE expresion bloque .)
    LET             reduce using rule 79 (while -> WHILE expresion bloque .)
    ID              reduce using rule 79 (while -> WHILE expresion bloque .)
    IF              reduce using rule 79 (while -> WHILE expresion bloque .)
    RETURN          reduce using rule 79 (while -> WHILE expresion bloque .)
    LOOP            reduce using rule 79 (while -> WHILE expresion bloque .)
    BREAK           reduce using rule 79 (while -> WHILE expresion bloque .)
    WHILE           reduce using rule 79 (while -> WHILE expresion bloque .)
    CONTINUE        reduce using rule 79 (while -> WHILE expresion bloque .)
    FOR             reduce using rule 79 (while -> WHILE expresion bloque .)
    MATCH           reduce using rule 79 (while -> WHILE expresion bloque .)
    MENOS           reduce using rule 79 (while -> WHILE expresion bloque .)
    I64             reduce using rule 79 (while -> WHILE expresion bloque .)
    F64             reduce using rule 79 (while -> WHILE expresion bloque .)
    PIZQ            reduce using rule 79 (while -> WHILE expresion bloque .)
    NOT             reduce using rule 79 (while -> WHILE expresion bloque .)
    ENTERO          reduce using rule 79 (while -> WHILE expresion bloque .)
    DECIMAL         reduce using rule 79 (while -> WHILE expresion bloque .)
    CARACTER        reduce using rule 79 (while -> WHILE expresion bloque .)
    CADENA          reduce using rule 79 (while -> WHILE expresion bloque .)
    TRUE            reduce using rule 79 (while -> WHILE expresion bloque .)
    FALSE           reduce using rule 79 (while -> WHILE expresion bloque .)
    CORIZQ          reduce using rule 79 (while -> WHILE expresion bloque .)
    Y               reduce using rule 79 (while -> WHILE expresion bloque .)
    VEC             reduce using rule 79 (while -> WHILE expresion bloque .)
    VECM            reduce using rule 79 (while -> WHILE expresion bloque .)
    COMA            reduce using rule 79 (while -> WHILE expresion bloque .)


state 171

    (81) for -> FOR ID IN . expresion PUNTO PUNTO expresion bloque
    (82) for -> FOR ID IN . expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> FOR ID IN . expresion bloque
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 226
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 172

    (75) match -> MATCH expresion LLAVEIZQ . expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 227
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 173

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .

    FN              reduce using rule 8 (funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .)
    $end            reduce using rule 8 (funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .)


state 174

    (13) parametro -> ID DOBLEPT Y MUT VECM MENOR . tipo_dato MAYOR
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (163) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 228
    str                            shift and go to state 25

state 175

    (65) dimensiones -> CORIZQ CORIZQ . tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (66) dimensiones -> CORIZQ CORIZQ . CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (163) str -> . Y STR

    CORIZQ          shift and go to state 229
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 230
    str                            shift and go to state 25

state 176

    (63) dimensiones -> CORIZQ tipo_dato . CORDER
    (64) dimensiones -> CORIZQ tipo_dato . PTCOMA expresion CORDER

    CORDER          shift and go to state 231
    PTCOMA          shift and go to state 232


state 177

    (51) print -> PRINTLN NOT PIZQ lista_expresiones . PDER
    (16) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 233
    COMA            shift and go to state 185


state 178

    (55) declaracion -> LET MUT ID DOBLEPT . tipo_dato IGUAL expresion
    (59) declaracion -> LET MUT ID DOBLEPT . dimensiones IGUAL expresion
    (61) declaracion -> LET MUT ID DOBLEPT . VECM MENOR tipo_dato MAYOR IGUAL expresion
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (63) dimensiones -> . CORIZQ tipo_dato CORDER
    (64) dimensiones -> . CORIZQ tipo_dato PTCOMA expresion CORDER
    (65) dimensiones -> . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (66) dimensiones -> . CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (163) str -> . Y STR

    VECM            shift and go to state 236
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    CORIZQ          shift and go to state 129
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 234
    dimensiones                    shift and go to state 235
    str                            shift and go to state 25

state 179

    (57) declaracion -> LET MUT ID IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 237
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 180

    (56) declaracion -> LET ID DOBLEPT tipo_dato . IGUAL expresion

    IGUAL           shift and go to state 238


state 181

    (60) declaracion -> LET ID DOBLEPT dimensiones . IGUAL expresion

    IGUAL           shift and go to state 239


state 182

    (62) declaracion -> LET ID DOBLEPT VECM . MENOR tipo_dato MAYOR IGUAL expresion

    MENOR           shift and go to state 240


state 183

    (58) declaracion -> LET ID IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 58 (declaracion -> LET ID IGUAL expresion .)
    COMA            reduce using rule 58 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 184

    (15) llamadaF -> ID PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAS             reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENOS           reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MULTIPLICACION  reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    DIVISION        reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MODULO          reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAYOR           reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENOR           reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAYORIGUAL      reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENORIGUAL      reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    IGUALIGUAL      reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    DIFERENTE       reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    AND             reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    OR              reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    PUNTO           reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    AS              reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    LLAVEIZQ        reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    COMA            reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    PDER            reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    CORDER          reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    IGUAL           reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    LLAVEDER        reduce using rule 15 (llamadaF -> ID PIZQ lista_expresiones PDER .)


state 185

    (16) lista_expresiones -> lista_expresiones COMA . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 241
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 186

    (85) insert -> ID PUNTO INSERT PIZQ . expresion COMA expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 242
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 187

    (84) push -> ID PUNTO PUSH PIZQ . expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 243
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 188

    (54) asignacionA -> ID ubicaciones IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 54 (asignacionA -> ID ubicaciones IGUAL expresion .)
    COMA            reduce using rule 54 (asignacionA -> ID ubicaciones IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 189

    (133) ubicacion -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    MULTIPLICACION  reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    DIVISION        reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    IGUALIGUAL      reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    AND             reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    OR              reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    AS              reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    PDER            reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 133 (ubicacion -> CORIZQ expresion CORDER .)


state 190

    (142) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER
    (143) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER listaelse
    (145) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    instrucciones                  shift and go to state 244
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 191

    (69) if_i -> IF expresion bloque ELSE . bloque
    (74) elseifI -> ELSE . IF expresion bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF              shift and go to state 245
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 246

state 192

    (70) if_i -> IF expresion bloque listaelseI .
    (71) if_i -> IF expresion bloque listaelseI . ELSE bloque
    (72) listaelseI -> listaelseI . elseifI
    (74) elseifI -> . ELSE IF expresion bloque

    LLAVEDER        reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    PRINTLN         reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    LET             reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    ID              reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    IF              reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    RETURN          reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    LOOP            reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    BREAK           reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    WHILE           reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    CONTINUE        reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    FOR             reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    MATCH           reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    MENOS           reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    I64             reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    F64             reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    PIZQ            reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    NOT             reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    ENTERO          reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    DECIMAL         reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    CARACTER        reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    CADENA          reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    TRUE            reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    FALSE           reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    CORIZQ          reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    Y               reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    VEC             reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    VECM            reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    COMA            reduce using rule 70 (if_i -> IF expresion bloque listaelseI .)
    ELSE            shift and go to state 247

    elseifI                        shift and go to state 248

state 193

    (73) listaelseI -> elseifI .

    ELSE            reduce using rule 73 (listaelseI -> elseifI .)
    LLAVEDER        reduce using rule 73 (listaelseI -> elseifI .)
    PRINTLN         reduce using rule 73 (listaelseI -> elseifI .)
    LET             reduce using rule 73 (listaelseI -> elseifI .)
    ID              reduce using rule 73 (listaelseI -> elseifI .)
    IF              reduce using rule 73 (listaelseI -> elseifI .)
    RETURN          reduce using rule 73 (listaelseI -> elseifI .)
    LOOP            reduce using rule 73 (listaelseI -> elseifI .)
    BREAK           reduce using rule 73 (listaelseI -> elseifI .)
    WHILE           reduce using rule 73 (listaelseI -> elseifI .)
    CONTINUE        reduce using rule 73 (listaelseI -> elseifI .)
    FOR             reduce using rule 73 (listaelseI -> elseifI .)
    MATCH           reduce using rule 73 (listaelseI -> elseifI .)
    MENOS           reduce using rule 73 (listaelseI -> elseifI .)
    I64             reduce using rule 73 (listaelseI -> elseifI .)
    F64             reduce using rule 73 (listaelseI -> elseifI .)
    PIZQ            reduce using rule 73 (listaelseI -> elseifI .)
    NOT             reduce using rule 73 (listaelseI -> elseifI .)
    ENTERO          reduce using rule 73 (listaelseI -> elseifI .)
    DECIMAL         reduce using rule 73 (listaelseI -> elseifI .)
    CARACTER        reduce using rule 73 (listaelseI -> elseifI .)
    CADENA          reduce using rule 73 (listaelseI -> elseifI .)
    TRUE            reduce using rule 73 (listaelseI -> elseifI .)
    FALSE           reduce using rule 73 (listaelseI -> elseifI .)
    CORIZQ          reduce using rule 73 (listaelseI -> elseifI .)
    Y               reduce using rule 73 (listaelseI -> elseifI .)
    VEC             reduce using rule 73 (listaelseI -> elseifI .)
    VECM            reduce using rule 73 (listaelseI -> elseifI .)
    COMA            reduce using rule 73 (listaelseI -> elseifI .)


state 194

    (87) expresion -> expresion MAS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 87 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 87 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 87 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 87 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 87 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 87 (expresion -> expresion MAS expresion .)
    LLAVEIZQ        reduce using rule 87 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 87 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 87 (expresion -> expresion MAS expresion .)
    PDER            reduce using rule 87 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 87 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 87 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 87 (expresion -> expresion MAS expresion .)
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149

  ! MULTIPLICACION  [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! DIVISION        [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 145 ]
  ! MENOS           [ shift and go to state 146 ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! PUNTO           [ shift and go to state 158 ]
  ! AS              [ shift and go to state 159 ]


state 195

    (88) expresion -> expresion MENOS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 88 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 88 (expresion -> expresion MENOS expresion .)
    LLAVEIZQ        reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PDER            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149

  ! MULTIPLICACION  [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! DIVISION        [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 145 ]
  ! MENOS           [ shift and go to state 146 ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! PUNTO           [ shift and go to state 158 ]
  ! AS              [ shift and go to state 159 ]


state 196

    (89) expresion -> expresion MULTIPLICACION expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    MENOS           reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    MULTIPLICACION  reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    DIVISION        reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    MODULO          reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    MAYOR           reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    MENOR           reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    MAYORIGUAL      reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    MENORIGUAL      reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    IGUALIGUAL      reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    DIFERENTE       reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    AND             reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    OR              reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    PUNTO           reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    AS              reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVEIZQ        reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    PTCOMA          reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    COMA            reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    PDER            reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    CORDER          reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    IGUAL           reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVEDER        reduce using rule 89 (expresion -> expresion MULTIPLICACION expresion .)

  ! MAS             [ shift and go to state 145 ]
  ! MENOS           [ shift and go to state 146 ]
  ! MULTIPLICACION  [ shift and go to state 147 ]
  ! DIVISION        [ shift and go to state 148 ]
  ! MODULO          [ shift and go to state 149 ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! PUNTO           [ shift and go to state 158 ]
  ! AS              [ shift and go to state 159 ]


state 197

    (90) expresion -> expresion DIVISION expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MENOS           reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MULTIPLICACION  reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MODULO          reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MAYOR           reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MENOR           reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MAYORIGUAL      reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MENORIGUAL      reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    IGUALIGUAL      reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    DIFERENTE       reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    PUNTO           reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    AS              reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    LLAVEIZQ        reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    PTCOMA          reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    COMA            reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    PDER            reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    CORDER          reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    LLAVEDER        reduce using rule 90 (expresion -> expresion DIVISION expresion .)

  ! MAS             [ shift and go to state 145 ]
  ! MENOS           [ shift and go to state 146 ]
  ! MULTIPLICACION  [ shift and go to state 147 ]
  ! DIVISION        [ shift and go to state 148 ]
  ! MODULO          [ shift and go to state 149 ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! PUNTO           [ shift and go to state 158 ]
  ! AS              [ shift and go to state 159 ]


state 198

    (91) expresion -> expresion MODULO expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAS             reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MULTIPLICACION  reduce using rule 91 (expresion -> expresion MODULO expresion .)
    DIVISION        reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 91 (expresion -> expresion MODULO expresion .)
    IGUALIGUAL      reduce using rule 91 (expresion -> expresion MODULO expresion .)
    DIFERENTE       reduce using rule 91 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 91 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 91 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 91 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 91 (expresion -> expresion MODULO expresion .)
    LLAVEIZQ        reduce using rule 91 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 91 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 91 (expresion -> expresion MODULO expresion .)
    PDER            reduce using rule 91 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 91 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 91 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 91 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 145 ]
  ! MENOS           [ shift and go to state 146 ]
  ! MULTIPLICACION  [ shift and go to state 147 ]
  ! DIVISION        [ shift and go to state 148 ]
  ! MODULO          [ shift and go to state 149 ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! PUNTO           [ shift and go to state 158 ]
  ! AS              [ shift and go to state 159 ]


state 199

    (95) expresion -> expresion MAYOR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    IGUALIGUAL      reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    DIFERENTE       reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    AS              reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    LLAVEIZQ        reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    PTCOMA          reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    PDER            reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    IGUAL           reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    LLAVEDER        reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    PUNTO           shift and go to state 158

  ! MAS             [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! DIVISION        [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! PUNTO           [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! AS              [ shift and go to state 159 ]


state 200

    (96) expresion -> expresion MENOR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 96 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 96 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 96 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 96 (expresion -> expresion MENOR expresion .)
    IGUALIGUAL      reduce using rule 96 (expresion -> expresion MENOR expresion .)
    DIFERENTE       reduce using rule 96 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 96 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 96 (expresion -> expresion MENOR expresion .)
    AS              reduce using rule 96 (expresion -> expresion MENOR expresion .)
    LLAVEIZQ        reduce using rule 96 (expresion -> expresion MENOR expresion .)
    PTCOMA          reduce using rule 96 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 96 (expresion -> expresion MENOR expresion .)
    PDER            reduce using rule 96 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 96 (expresion -> expresion MENOR expresion .)
    IGUAL           reduce using rule 96 (expresion -> expresion MENOR expresion .)
    LLAVEDER        reduce using rule 96 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    PUNTO           shift and go to state 158

  ! MAS             [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! DIVISION        [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! PUNTO           [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! AS              [ shift and go to state 159 ]


state 201

    (97) expresion -> expresion MAYORIGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    DIFERENTE       reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    AS              reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEIZQ        reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    PDER            reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    IGUAL           reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEDER        reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    PUNTO           shift and go to state 158

  ! MAS             [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! AS              [ shift and go to state 159 ]


state 202

    (98) expresion -> expresion MENORIGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    DIFERENTE       reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    AS              reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEIZQ        reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    PDER            reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    IGUAL           reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEDER        reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    PUNTO           shift and go to state 158

  ! MAS             [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! AS              [ shift and go to state 159 ]


state 203

    (99) expresion -> expresion IGUALIGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    MENOR           reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    MAYORIGUAL      reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    MENORIGUAL      reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    IGUALIGUAL      reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    DIFERENTE       reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    AS              reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    LLAVEIZQ        reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    PTCOMA          reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    PDER            reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    CORDER          reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    IGUAL           reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    LLAVEDER        reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    PUNTO           shift and go to state 158

  ! MAS             [ reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 99 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! AS              [ shift and go to state 159 ]


state 204

    (100) expresion -> expresion DIFERENTE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    MAYOR           reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    MENOR           reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    MAYORIGUAL      reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    MENORIGUAL      reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    IGUALIGUAL      reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    DIFERENTE       reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    AS              reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    LLAVEIZQ        reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    PTCOMA          reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    PDER            reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    IGUAL           reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    LLAVEDER        reduce using rule 100 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    PUNTO           shift and go to state 158

  ! MAS             [ reduce using rule 100 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 100 (expresion -> expresion DIFERENTE expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 100 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVISION        [ reduce using rule 100 (expresion -> expresion DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 100 (expresion -> expresion DIFERENTE expresion .) ]
  ! PUNTO           [ reduce using rule 100 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ shift and go to state 150 ]
  ! MENOR           [ shift and go to state 151 ]
  ! MAYORIGUAL      [ shift and go to state 152 ]
  ! MENORIGUAL      [ shift and go to state 153 ]
  ! IGUALIGUAL      [ shift and go to state 154 ]
  ! DIFERENTE       [ shift and go to state 155 ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! AS              [ shift and go to state 159 ]


state 205

    (101) expresion -> expresion AND expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    AND             reduce using rule 101 (expresion -> expresion AND expresion .)
    OR              reduce using rule 101 (expresion -> expresion AND expresion .)
    AS              reduce using rule 101 (expresion -> expresion AND expresion .)
    LLAVEIZQ        reduce using rule 101 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 101 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 101 (expresion -> expresion AND expresion .)
    PDER            reduce using rule 101 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 101 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 101 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 101 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    PUNTO           shift and go to state 158

  ! MAS             [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! DIVISION        [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! PUNTO           [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 156 ]
  ! OR              [ shift and go to state 157 ]
  ! AS              [ shift and go to state 159 ]


state 206

    (102) expresion -> expresion OR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    OR              reduce using rule 102 (expresion -> expresion OR expresion .)
    AS              reduce using rule 102 (expresion -> expresion OR expresion .)
    LLAVEIZQ        reduce using rule 102 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 102 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 102 (expresion -> expresion OR expresion .)
    PDER            reduce using rule 102 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 102 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 102 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 102 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    PUNTO           shift and go to state 158

  ! MAS             [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! DIVISION        [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! PUNTO           [ reduce using rule 102 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 157 ]
  ! AS              [ shift and go to state 159 ]


state 207

    (135) tostring -> expresion PUNTO TOSTRING . PIZQ PDER

    PIZQ            shift and go to state 249


state 208

    (136) tostring -> expresion PUNTO TOOWNED . PIZQ PDER

    PIZQ            shift and go to state 250


state 209

    (140) abs -> expresion PUNTO ABS . PIZQ PDER

    PIZQ            shift and go to state 251


state 210

    (141) sqrt -> expresion PUNTO SQRT . PIZQ PDER

    PIZQ            shift and go to state 252


state 211

    (127) len -> expresion PUNTO LEN . PIZQ PDER

    PIZQ            shift and go to state 253


state 212

    (128) capacity -> expresion PUNTO CAPACITY . PIZQ PDER

    PIZQ            shift and go to state 254


state 213

    (121) contains -> expresion PUNTO CONTAINS . PIZQ Y expresion PDER

    PIZQ            shift and go to state 255


state 214

    (126) clone -> expresion PUNTO CLONE . PIZQ PDER

    PIZQ            shift and go to state 256


state 215

    (120) remove -> expresion PUNTO REMOVE . PIZQ expresion PDER

    PIZQ            shift and go to state 257


state 216

    (137) as -> expresion AS I64 .

    MAS             reduce using rule 137 (as -> expresion AS I64 .)
    MENOS           reduce using rule 137 (as -> expresion AS I64 .)
    MULTIPLICACION  reduce using rule 137 (as -> expresion AS I64 .)
    DIVISION        reduce using rule 137 (as -> expresion AS I64 .)
    MODULO          reduce using rule 137 (as -> expresion AS I64 .)
    MAYOR           reduce using rule 137 (as -> expresion AS I64 .)
    MENOR           reduce using rule 137 (as -> expresion AS I64 .)
    MAYORIGUAL      reduce using rule 137 (as -> expresion AS I64 .)
    MENORIGUAL      reduce using rule 137 (as -> expresion AS I64 .)
    IGUALIGUAL      reduce using rule 137 (as -> expresion AS I64 .)
    DIFERENTE       reduce using rule 137 (as -> expresion AS I64 .)
    AND             reduce using rule 137 (as -> expresion AS I64 .)
    OR              reduce using rule 137 (as -> expresion AS I64 .)
    PUNTO           reduce using rule 137 (as -> expresion AS I64 .)
    AS              reduce using rule 137 (as -> expresion AS I64 .)
    LLAVEIZQ        reduce using rule 137 (as -> expresion AS I64 .)
    PTCOMA          reduce using rule 137 (as -> expresion AS I64 .)
    COMA            reduce using rule 137 (as -> expresion AS I64 .)
    PDER            reduce using rule 137 (as -> expresion AS I64 .)
    CORDER          reduce using rule 137 (as -> expresion AS I64 .)
    IGUAL           reduce using rule 137 (as -> expresion AS I64 .)
    LLAVEDER        reduce using rule 137 (as -> expresion AS I64 .)


state 217

    (138) as -> expresion AS F64 .

    MAS             reduce using rule 138 (as -> expresion AS F64 .)
    MENOS           reduce using rule 138 (as -> expresion AS F64 .)
    MULTIPLICACION  reduce using rule 138 (as -> expresion AS F64 .)
    DIVISION        reduce using rule 138 (as -> expresion AS F64 .)
    MODULO          reduce using rule 138 (as -> expresion AS F64 .)
    MAYOR           reduce using rule 138 (as -> expresion AS F64 .)
    MENOR           reduce using rule 138 (as -> expresion AS F64 .)
    MAYORIGUAL      reduce using rule 138 (as -> expresion AS F64 .)
    MENORIGUAL      reduce using rule 138 (as -> expresion AS F64 .)
    IGUALIGUAL      reduce using rule 138 (as -> expresion AS F64 .)
    DIFERENTE       reduce using rule 138 (as -> expresion AS F64 .)
    AND             reduce using rule 138 (as -> expresion AS F64 .)
    OR              reduce using rule 138 (as -> expresion AS F64 .)
    PUNTO           reduce using rule 138 (as -> expresion AS F64 .)
    AS              reduce using rule 138 (as -> expresion AS F64 .)
    LLAVEIZQ        reduce using rule 138 (as -> expresion AS F64 .)
    PTCOMA          reduce using rule 138 (as -> expresion AS F64 .)
    COMA            reduce using rule 138 (as -> expresion AS F64 .)
    PDER            reduce using rule 138 (as -> expresion AS F64 .)
    CORDER          reduce using rule 138 (as -> expresion AS F64 .)
    IGUAL           reduce using rule 138 (as -> expresion AS F64 .)
    LLAVEDER        reduce using rule 138 (as -> expresion AS F64 .)


state 218

    (139) as -> expresion AS USIZE .

    MAS             reduce using rule 139 (as -> expresion AS USIZE .)
    MENOS           reduce using rule 139 (as -> expresion AS USIZE .)
    MULTIPLICACION  reduce using rule 139 (as -> expresion AS USIZE .)
    DIVISION        reduce using rule 139 (as -> expresion AS USIZE .)
    MODULO          reduce using rule 139 (as -> expresion AS USIZE .)
    MAYOR           reduce using rule 139 (as -> expresion AS USIZE .)
    MENOR           reduce using rule 139 (as -> expresion AS USIZE .)
    MAYORIGUAL      reduce using rule 139 (as -> expresion AS USIZE .)
    MENORIGUAL      reduce using rule 139 (as -> expresion AS USIZE .)
    IGUALIGUAL      reduce using rule 139 (as -> expresion AS USIZE .)
    DIFERENTE       reduce using rule 139 (as -> expresion AS USIZE .)
    AND             reduce using rule 139 (as -> expresion AS USIZE .)
    OR              reduce using rule 139 (as -> expresion AS USIZE .)
    PUNTO           reduce using rule 139 (as -> expresion AS USIZE .)
    AS              reduce using rule 139 (as -> expresion AS USIZE .)
    LLAVEIZQ        reduce using rule 139 (as -> expresion AS USIZE .)
    PTCOMA          reduce using rule 139 (as -> expresion AS USIZE .)
    COMA            reduce using rule 139 (as -> expresion AS USIZE .)
    PDER            reduce using rule 139 (as -> expresion AS USIZE .)
    CORDER          reduce using rule 139 (as -> expresion AS USIZE .)
    IGUAL           reduce using rule 139 (as -> expresion AS USIZE .)
    LLAVEDER        reduce using rule 139 (as -> expresion AS USIZE .)


state 219

    (92) expresion -> I64 DOBLEPT DOBLEPT . POW PIZQ expresion COMA expresion PDER

    POW             shift and go to state 258


state 220

    (94) expresion -> PIZQ expresion PDER .

    MAS             reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    MENOS           reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    DIVISION        reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    MODULO          reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    MAYOR           reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    MENOR           reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    AND             reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    OR              reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    PUNTO           reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    AS              reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    LLAVEIZQ        reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    PTCOMA          reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    COMA            reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    PDER            reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    CORDER          reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    IGUAL           reduce using rule 94 (expresion -> PIZQ expresion PDER .)
    LLAVEDER        reduce using rule 94 (expresion -> PIZQ expresion PDER .)


state 221

    (93) expresion -> F64 DOBLEPT DOBLEPT . POWF PIZQ expresion COMA expresion PDER

    POWF            shift and go to state 259


state 222

    (134) arraycontenido -> CORIZQ lista_expresiones CORDER .

    MAS             reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MENOS           reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MULTIPLICACION  reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    DIVISION        reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MODULO          reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MAYOR           reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MENOR           reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MAYORIGUAL      reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MENORIGUAL      reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    IGUALIGUAL      reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    DIFERENTE       reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    AND             reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    OR              reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    PUNTO           reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    AS              reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    LLAVEIZQ        reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    PTCOMA          reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    COMA            reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    PDER            reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    CORDER          reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    IGUAL           reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    LLAVEDER        reduce using rule 134 (arraycontenido -> CORIZQ lista_expresiones CORDER .)


state 223

    (129) referencia -> Y MUT ID .

    MAS             reduce using rule 129 (referencia -> Y MUT ID .)
    MENOS           reduce using rule 129 (referencia -> Y MUT ID .)
    MULTIPLICACION  reduce using rule 129 (referencia -> Y MUT ID .)
    DIVISION        reduce using rule 129 (referencia -> Y MUT ID .)
    MODULO          reduce using rule 129 (referencia -> Y MUT ID .)
    MAYOR           reduce using rule 129 (referencia -> Y MUT ID .)
    MENOR           reduce using rule 129 (referencia -> Y MUT ID .)
    MAYORIGUAL      reduce using rule 129 (referencia -> Y MUT ID .)
    MENORIGUAL      reduce using rule 129 (referencia -> Y MUT ID .)
    IGUALIGUAL      reduce using rule 129 (referencia -> Y MUT ID .)
    DIFERENTE       reduce using rule 129 (referencia -> Y MUT ID .)
    AND             reduce using rule 129 (referencia -> Y MUT ID .)
    OR              reduce using rule 129 (referencia -> Y MUT ID .)
    PUNTO           reduce using rule 129 (referencia -> Y MUT ID .)
    AS              reduce using rule 129 (referencia -> Y MUT ID .)
    LLAVEIZQ        reduce using rule 129 (referencia -> Y MUT ID .)
    PTCOMA          reduce using rule 129 (referencia -> Y MUT ID .)
    COMA            reduce using rule 129 (referencia -> Y MUT ID .)
    PDER            reduce using rule 129 (referencia -> Y MUT ID .)
    CORDER          reduce using rule 129 (referencia -> Y MUT ID .)
    IGUAL           reduce using rule 129 (referencia -> Y MUT ID .)
    LLAVEDER        reduce using rule 129 (referencia -> Y MUT ID .)


state 224

    (122) vector -> VEC NOT CORIZQ . lista_expresiones CORDER
    (123) vector -> VEC NOT CORIZQ . expresion PTCOMA expresion CORDER
    (16) lista_expresiones -> . lista_expresiones COMA expresion
    (17) lista_expresiones -> . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    lista_expresiones              shift and go to state 260
    expresion                      shift and go to state 261
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 225

    (124) vector -> VECM DOBLEPT DOBLEPT . NEW PIZQ PDER
    (125) vector -> VECM DOBLEPT DOBLEPT . WCAPACITY PIZQ expresion PDER

    NEW             shift and go to state 262
    WCAPACITY       shift and go to state 263


state 226

    (81) for -> FOR ID IN expresion . PUNTO PUNTO expresion bloque
    (82) for -> FOR ID IN expresion . PUNTO CHARS PIZQ PDER bloque
    (83) for -> FOR ID IN expresion . bloque
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    PUNTO           shift and go to state 264
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    AS              shift and go to state 159
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 265

state 227

    (75) match -> MATCH expresion LLAVEIZQ expresion . IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    IGUAL           shift and go to state 266
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 228

    (13) parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato . MAYOR

    MAYOR           shift and go to state 267


state 229

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ . tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (163) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 268
    str                            shift and go to state 25

state 230

    (65) dimensiones -> CORIZQ CORIZQ tipo_dato . PTCOMA expresion CORDER PTCOMA expresion CORDER

    PTCOMA          shift and go to state 269


state 231

    (63) dimensiones -> CORIZQ tipo_dato CORDER .

    PDER            reduce using rule 63 (dimensiones -> CORIZQ tipo_dato CORDER .)
    COMA            reduce using rule 63 (dimensiones -> CORIZQ tipo_dato CORDER .)
    IGUAL           reduce using rule 63 (dimensiones -> CORIZQ tipo_dato CORDER .)


state 232

    (64) dimensiones -> CORIZQ tipo_dato PTCOMA . expresion CORDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 270
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 233

    (51) print -> PRINTLN NOT PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 51 (print -> PRINTLN NOT PIZQ lista_expresiones PDER .)
    COMA            reduce using rule 51 (print -> PRINTLN NOT PIZQ lista_expresiones PDER .)


state 234

    (55) declaracion -> LET MUT ID DOBLEPT tipo_dato . IGUAL expresion

    IGUAL           shift and go to state 271


state 235

    (59) declaracion -> LET MUT ID DOBLEPT dimensiones . IGUAL expresion

    IGUAL           shift and go to state 272


state 236

    (61) declaracion -> LET MUT ID DOBLEPT VECM . MENOR tipo_dato MAYOR IGUAL expresion

    MENOR           shift and go to state 273


state 237

    (57) declaracion -> LET MUT ID IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion .)
    COMA            reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 238

    (56) declaracion -> LET ID DOBLEPT tipo_dato IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 274
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 239

    (60) declaracion -> LET ID DOBLEPT dimensiones IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 275
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 240

    (62) declaracion -> LET ID DOBLEPT VECM MENOR . tipo_dato MAYOR IGUAL expresion
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (163) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 276
    str                            shift and go to state 25

state 241

    (16) lista_expresiones -> lista_expresiones COMA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            reduce using rule 16 (lista_expresiones -> lista_expresiones COMA expresion .)
    COMA            reduce using rule 16 (lista_expresiones -> lista_expresiones COMA expresion .)
    CORDER          reduce using rule 16 (lista_expresiones -> lista_expresiones COMA expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 242

    (85) insert -> ID PUNTO INSERT PIZQ expresion . COMA expresion PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    COMA            shift and go to state 277
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 243

    (84) push -> ID PUNTO PUSH PIZQ expresion . PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 278
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 244

    (142) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER
    (143) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER listaelse
    (145) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 283
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 279
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119
    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    RETURN          shift and go to state 52
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    expresion                      shift and go to state 280
    instruccion                    shift and go to state 66
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 281
    loop                           shift and go to state 282
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 245

    (74) elseifI -> ELSE IF . expresion bloque
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 284
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 246

    (69) if_i -> IF expresion bloque ELSE bloque .

    LLAVEDER        reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    PRINTLN         reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    LET             reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    ID              reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    IF              reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    RETURN          reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    LOOP            reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    BREAK           reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    WHILE           reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    CONTINUE        reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    FOR             reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    MATCH           reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    MENOS           reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    I64             reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    F64             reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    PIZQ            reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    NOT             reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    ENTERO          reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    DECIMAL         reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    CARACTER        reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    CADENA          reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    TRUE            reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    FALSE           reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    CORIZQ          reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    Y               reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    VEC             reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    VECM            reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)
    COMA            reduce using rule 69 (if_i -> IF expresion bloque ELSE bloque .)


state 247

    (71) if_i -> IF expresion bloque listaelseI ELSE . bloque
    (74) elseifI -> ELSE . IF expresion bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF              shift and go to state 245
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 285

state 248

    (72) listaelseI -> listaelseI elseifI .

    ELSE            reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    LLAVEDER        reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    PRINTLN         reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    LET             reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    ID              reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    IF              reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    RETURN          reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    LOOP            reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    BREAK           reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    WHILE           reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    CONTINUE        reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    FOR             reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    MATCH           reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    MENOS           reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    I64             reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    F64             reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    PIZQ            reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    NOT             reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    ENTERO          reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    DECIMAL         reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    CARACTER        reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    CADENA          reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    TRUE            reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    FALSE           reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    CORIZQ          reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    Y               reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    VEC             reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    VECM            reduce using rule 72 (listaelseI -> listaelseI elseifI .)
    COMA            reduce using rule 72 (listaelseI -> listaelseI elseifI .)


state 249

    (135) tostring -> expresion PUNTO TOSTRING PIZQ . PDER

    PDER            shift and go to state 286


state 250

    (136) tostring -> expresion PUNTO TOOWNED PIZQ . PDER

    PDER            shift and go to state 287


state 251

    (140) abs -> expresion PUNTO ABS PIZQ . PDER

    PDER            shift and go to state 288


state 252

    (141) sqrt -> expresion PUNTO SQRT PIZQ . PDER

    PDER            shift and go to state 289


state 253

    (127) len -> expresion PUNTO LEN PIZQ . PDER

    PDER            shift and go to state 290


state 254

    (128) capacity -> expresion PUNTO CAPACITY PIZQ . PDER

    PDER            shift and go to state 291


state 255

    (121) contains -> expresion PUNTO CONTAINS PIZQ . Y expresion PDER

    Y               shift and go to state 292


state 256

    (126) clone -> expresion PUNTO CLONE PIZQ . PDER

    PDER            shift and go to state 293


state 257

    (120) remove -> expresion PUNTO REMOVE PIZQ . expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 294
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 258

    (92) expresion -> I64 DOBLEPT DOBLEPT POW . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 295


state 259

    (93) expresion -> F64 DOBLEPT DOBLEPT POWF . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 296


state 260

    (122) vector -> VEC NOT CORIZQ lista_expresiones . CORDER
    (16) lista_expresiones -> lista_expresiones . COMA expresion

    CORDER          shift and go to state 297
    COMA            shift and go to state 185


state 261

    (123) vector -> VEC NOT CORIZQ expresion . PTCOMA expresion CORDER
    (17) lista_expresiones -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          shift and go to state 298
    CORDER          reduce using rule 17 (lista_expresiones -> expresion .)
    COMA            reduce using rule 17 (lista_expresiones -> expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 262

    (124) vector -> VECM DOBLEPT DOBLEPT NEW . PIZQ PDER

    PIZQ            shift and go to state 299


state 263

    (125) vector -> VECM DOBLEPT DOBLEPT WCAPACITY . PIZQ expresion PDER

    PIZQ            shift and go to state 300


state 264

    (81) for -> FOR ID IN expresion PUNTO . PUNTO expresion bloque
    (82) for -> FOR ID IN expresion PUNTO . CHARS PIZQ PDER bloque
    (135) tostring -> expresion PUNTO . TOSTRING PIZQ PDER
    (136) tostring -> expresion PUNTO . TOOWNED PIZQ PDER
    (140) abs -> expresion PUNTO . ABS PIZQ PDER
    (141) sqrt -> expresion PUNTO . SQRT PIZQ PDER
    (127) len -> expresion PUNTO . LEN PIZQ PDER
    (128) capacity -> expresion PUNTO . CAPACITY PIZQ PDER
    (121) contains -> expresion PUNTO . CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion PUNTO . CLONE PIZQ PDER
    (120) remove -> expresion PUNTO . REMOVE PIZQ expresion PDER

    PUNTO           shift and go to state 301
    CHARS           shift and go to state 302
    TOSTRING        shift and go to state 207
    TOOWNED         shift and go to state 208
    ABS             shift and go to state 209
    SQRT            shift and go to state 210
    LEN             shift and go to state 211
    CAPACITY        shift and go to state 212
    CONTAINS        shift and go to state 213
    CLONE           shift and go to state 214
    REMOVE          shift and go to state 215


state 265

    (83) for -> FOR ID IN expresion bloque .

    LLAVEDER        reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    PRINTLN         reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    LET             reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    ID              reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    IF              reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    RETURN          reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    LOOP            reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    BREAK           reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    WHILE           reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    CONTINUE        reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    FOR             reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    MATCH           reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    MENOS           reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    I64             reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    F64             reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    PIZQ            reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    NOT             reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    ENTERO          reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    DECIMAL         reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    CARACTER        reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    CADENA          reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    TRUE            reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    FALSE           reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    CORIZQ          reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    Y               reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    VEC             reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    VECM            reduce using rule 83 (for -> FOR ID IN expresion bloque .)
    COMA            reduce using rule 83 (for -> FOR ID IN expresion bloque .)


state 266

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL . MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER

    MAYOR           shift and go to state 303


state 267

    (13) parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR .

    PDER            reduce using rule 13 (parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR .)
    COMA            reduce using rule 13 (parametro -> ID DOBLEPT Y MUT VECM MENOR tipo_dato MAYOR .)


state 268

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato . PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER

    PTCOMA          shift and go to state 304


state 269

    (65) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA . expresion CORDER PTCOMA expresion CORDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 305
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 270

    (64) dimensiones -> CORIZQ tipo_dato PTCOMA expresion . CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 306
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 271

    (55) declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 307
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 272

    (59) declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 308
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 273

    (61) declaracion -> LET MUT ID DOBLEPT VECM MENOR . tipo_dato MAYOR IGUAL expresion
    (156) tipo_dato -> . I64
    (157) tipo_dato -> . F64
    (158) tipo_dato -> . BOOL
    (159) tipo_dato -> . CHAR
    (160) tipo_dato -> . str
    (161) tipo_dato -> . STRING
    (162) tipo_dato -> . USIZE
    (163) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 309
    str                            shift and go to state 25

state 274

    (56) declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 56 (declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion .)
    COMA            reduce using rule 56 (declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 275

    (60) declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 60 (declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion .)
    COMA            reduce using rule 60 (declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 276

    (62) declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato . MAYOR IGUAL expresion

    MAYOR           shift and go to state 310


state 277

    (85) insert -> ID PUNTO INSERT PIZQ expresion COMA . expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 311
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 278

    (84) push -> ID PUNTO PUSH PIZQ expresion PDER .

    PTCOMA          reduce using rule 84 (push -> ID PUNTO PUSH PIZQ expresion PDER .)
    COMA            reduce using rule 84 (push -> ID PUNTO PUSH PIZQ expresion PDER .)


state 279

    (142) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (68) if_i -> IF . expresion bloque
    (69) if_i -> IF . expresion bloque ELSE bloque
    (70) if_i -> IF . expresion bloque listaelseI
    (71) if_i -> IF . expresion bloque listaelseI ELSE bloque
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 312
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 280

    (142) if_e -> IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER
    (143) if_e -> IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER listaelse
    (145) if_e -> IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEDER        shift and go to state 313
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 281

    (109) expresion -> llamadaF .
    (26) instruccion -> llamadaF . PTCOMA

    LLAVEDER        reduce using rule 109 (expresion -> llamadaF .)
    MAS             reduce using rule 109 (expresion -> llamadaF .)
    MENOS           reduce using rule 109 (expresion -> llamadaF .)
    MULTIPLICACION  reduce using rule 109 (expresion -> llamadaF .)
    DIVISION        reduce using rule 109 (expresion -> llamadaF .)
    MODULO          reduce using rule 109 (expresion -> llamadaF .)
    MAYOR           reduce using rule 109 (expresion -> llamadaF .)
    MENOR           reduce using rule 109 (expresion -> llamadaF .)
    MAYORIGUAL      reduce using rule 109 (expresion -> llamadaF .)
    MENORIGUAL      reduce using rule 109 (expresion -> llamadaF .)
    IGUALIGUAL      reduce using rule 109 (expresion -> llamadaF .)
    DIFERENTE       reduce using rule 109 (expresion -> llamadaF .)
    AND             reduce using rule 109 (expresion -> llamadaF .)
    OR              reduce using rule 109 (expresion -> llamadaF .)
    PUNTO           reduce using rule 109 (expresion -> llamadaF .)
    AS              reduce using rule 109 (expresion -> llamadaF .)
    PTCOMA          shift and go to state 70


state 282

    (110) expresion -> loop .
    (28) instruccion -> loop .

  ! reduce/reduce conflict for MENOS resolved using rule 28 (instruccion -> loop .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 28 (instruccion -> loop .)
    MAS             reduce using rule 110 (expresion -> loop .)
    MULTIPLICACION  reduce using rule 110 (expresion -> loop .)
    DIVISION        reduce using rule 110 (expresion -> loop .)
    MODULO          reduce using rule 110 (expresion -> loop .)
    MAYOR           reduce using rule 110 (expresion -> loop .)
    MENOR           reduce using rule 110 (expresion -> loop .)
    MAYORIGUAL      reduce using rule 110 (expresion -> loop .)
    MENORIGUAL      reduce using rule 110 (expresion -> loop .)
    IGUALIGUAL      reduce using rule 110 (expresion -> loop .)
    DIFERENTE       reduce using rule 110 (expresion -> loop .)
    AND             reduce using rule 110 (expresion -> loop .)
    OR              reduce using rule 110 (expresion -> loop .)
    PUNTO           reduce using rule 110 (expresion -> loop .)
    AS              reduce using rule 110 (expresion -> loop .)
    MENOS           reduce using rule 28 (instruccion -> loop .)
    I64             reduce using rule 28 (instruccion -> loop .)
    F64             reduce using rule 28 (instruccion -> loop .)
    PIZQ            reduce using rule 28 (instruccion -> loop .)
    NOT             reduce using rule 28 (instruccion -> loop .)
    ENTERO          reduce using rule 28 (instruccion -> loop .)
    DECIMAL         reduce using rule 28 (instruccion -> loop .)
    ID              reduce using rule 28 (instruccion -> loop .)
    CARACTER        reduce using rule 28 (instruccion -> loop .)
    CADENA          reduce using rule 28 (instruccion -> loop .)
    TRUE            reduce using rule 28 (instruccion -> loop .)
    FALSE           reduce using rule 28 (instruccion -> loop .)
    IF              reduce using rule 28 (instruccion -> loop .)
    LOOP            reduce using rule 28 (instruccion -> loop .)
    CORIZQ          reduce using rule 28 (instruccion -> loop .)
    Y               reduce using rule 28 (instruccion -> loop .)
    VEC             reduce using rule 28 (instruccion -> loop .)
    VECM            reduce using rule 28 (instruccion -> loop .)
    PRINTLN         reduce using rule 28 (instruccion -> loop .)
    LET             reduce using rule 28 (instruccion -> loop .)
    RETURN          reduce using rule 28 (instruccion -> loop .)
    BREAK           reduce using rule 28 (instruccion -> loop .)
    WHILE           reduce using rule 28 (instruccion -> loop .)
    CONTINUE        reduce using rule 28 (instruccion -> loop .)
    FOR             reduce using rule 28 (instruccion -> loop .)
    MATCH           reduce using rule 28 (instruccion -> loop .)
    LLAVEDER        reduce using rule 28 (instruccion -> loop .)

  ! LLAVEDER        [ reduce using rule 110 (expresion -> loop .) ]
  ! MENOS           [ reduce using rule 110 (expresion -> loop .) ]


state 283

    (151) expresion -> ID .
    (14) llamadaF -> ID . PIZQ PDER
    (15) llamadaF -> ID . PIZQ lista_expresiones PDER
    (130) accesoarray -> ID . ubicaciones
    (67) asignacion -> ID . IGUAL expresion
    (85) insert -> ID . PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> ID . ubicaciones IGUAL expresion
    (84) push -> ID . PUNTO PUSH PIZQ expresion PDER
    (131) ubicaciones -> . ubicaciones ubicacion
    (132) ubicaciones -> . ubicacion
    (133) ubicacion -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for PUNTO resolved as shift
    LLAVEDER        reduce using rule 151 (expresion -> ID .)
    MAS             reduce using rule 151 (expresion -> ID .)
    MENOS           reduce using rule 151 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 151 (expresion -> ID .)
    DIVISION        reduce using rule 151 (expresion -> ID .)
    MODULO          reduce using rule 151 (expresion -> ID .)
    MAYOR           reduce using rule 151 (expresion -> ID .)
    MENOR           reduce using rule 151 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 151 (expresion -> ID .)
    MENORIGUAL      reduce using rule 151 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 151 (expresion -> ID .)
    DIFERENTE       reduce using rule 151 (expresion -> ID .)
    AND             reduce using rule 151 (expresion -> ID .)
    OR              reduce using rule 151 (expresion -> ID .)
    AS              reduce using rule 151 (expresion -> ID .)
    PIZQ            shift and go to state 81
    IGUAL           shift and go to state 80
    PUNTO           shift and go to state 82
    CORIZQ          shift and go to state 85

  ! PUNTO           [ reduce using rule 151 (expresion -> ID .) ]

    ubicaciones                    shift and go to state 314
    ubicacion                      shift and go to state 84

state 284

    (74) elseifI -> ELSE IF expresion . bloque
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 315

state 285

    (71) if_i -> IF expresion bloque listaelseI ELSE bloque .

    LLAVEDER        reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    PRINTLN         reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    LET             reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    ID              reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    IF              reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    RETURN          reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    LOOP            reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    BREAK           reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    WHILE           reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    CONTINUE        reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    FOR             reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    MATCH           reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    MENOS           reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    I64             reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    F64             reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    PIZQ            reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    NOT             reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    ENTERO          reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    DECIMAL         reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    CARACTER        reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    CADENA          reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    TRUE            reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    FALSE           reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    CORIZQ          reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    Y               reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    VEC             reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    VECM            reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)
    COMA            reduce using rule 71 (if_i -> IF expresion bloque listaelseI ELSE bloque .)


state 286

    (135) tostring -> expresion PUNTO TOSTRING PIZQ PDER .

    MAS             reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENOS           reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MULTIPLICACION  reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    DIVISION        reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MODULO          reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MAYOR           reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENOR           reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MAYORIGUAL      reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENORIGUAL      reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    IGUALIGUAL      reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    DIFERENTE       reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    AND             reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    OR              reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PUNTO           reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    AS              reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    LLAVEIZQ        reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PTCOMA          reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    COMA            reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PDER            reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    CORDER          reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    IGUAL           reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    LLAVEDER        reduce using rule 135 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)


state 287

    (136) tostring -> expresion PUNTO TOOWNED PIZQ PDER .

    MAS             reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENOS           reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MULTIPLICACION  reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    DIVISION        reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MODULO          reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MAYOR           reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENOR           reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MAYORIGUAL      reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENORIGUAL      reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    IGUALIGUAL      reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    DIFERENTE       reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    AND             reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    OR              reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PUNTO           reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    AS              reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    LLAVEIZQ        reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PTCOMA          reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    COMA            reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PDER            reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    CORDER          reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    IGUAL           reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    LLAVEDER        reduce using rule 136 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)


state 288

    (140) abs -> expresion PUNTO ABS PIZQ PDER .

    MAS             reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MENOS           reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MULTIPLICACION  reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    DIVISION        reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MODULO          reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MAYOR           reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MENOR           reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MAYORIGUAL      reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MENORIGUAL      reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    IGUALIGUAL      reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    DIFERENTE       reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    AND             reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    OR              reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    PUNTO           reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    AS              reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    LLAVEIZQ        reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    PTCOMA          reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    COMA            reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    PDER            reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    CORDER          reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    IGUAL           reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)
    LLAVEDER        reduce using rule 140 (abs -> expresion PUNTO ABS PIZQ PDER .)


state 289

    (141) sqrt -> expresion PUNTO SQRT PIZQ PDER .

    MAS             reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MENOS           reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MULTIPLICACION  reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    DIVISION        reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MODULO          reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MAYOR           reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MENOR           reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MAYORIGUAL      reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MENORIGUAL      reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    IGUALIGUAL      reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    DIFERENTE       reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    AND             reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    OR              reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    PUNTO           reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    AS              reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    LLAVEIZQ        reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    PTCOMA          reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    COMA            reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    PDER            reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    CORDER          reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    IGUAL           reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    LLAVEDER        reduce using rule 141 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)


state 290

    (127) len -> expresion PUNTO LEN PIZQ PDER .

    MAS             reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    MENOS           reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    MULTIPLICACION  reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    DIVISION        reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    MODULO          reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    MAYOR           reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    MENOR           reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    MAYORIGUAL      reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    MENORIGUAL      reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    IGUALIGUAL      reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    DIFERENTE       reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    AND             reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    OR              reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    PUNTO           reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    AS              reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    LLAVEIZQ        reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    PTCOMA          reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    COMA            reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    PDER            reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    CORDER          reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    IGUAL           reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)
    LLAVEDER        reduce using rule 127 (len -> expresion PUNTO LEN PIZQ PDER .)


state 291

    (128) capacity -> expresion PUNTO CAPACITY PIZQ PDER .

    MAS             reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MENOS           reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MULTIPLICACION  reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    DIVISION        reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MODULO          reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MAYOR           reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MENOR           reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MAYORIGUAL      reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    MENORIGUAL      reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    IGUALIGUAL      reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    DIFERENTE       reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    AND             reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    OR              reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    PUNTO           reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    AS              reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    LLAVEIZQ        reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    PTCOMA          reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    COMA            reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    PDER            reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    CORDER          reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    IGUAL           reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)
    LLAVEDER        reduce using rule 128 (capacity -> expresion PUNTO CAPACITY PIZQ PDER .)


state 292

    (121) contains -> expresion PUNTO CONTAINS PIZQ Y . expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 316
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 293

    (126) clone -> expresion PUNTO CLONE PIZQ PDER .

    MAS             reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MENOS           reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MULTIPLICACION  reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    DIVISION        reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MODULO          reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MAYOR           reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MENOR           reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MAYORIGUAL      reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MENORIGUAL      reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    IGUALIGUAL      reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    DIFERENTE       reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    AND             reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    OR              reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    PUNTO           reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    AS              reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    LLAVEIZQ        reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    PTCOMA          reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    COMA            reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    PDER            reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    CORDER          reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    IGUAL           reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    LLAVEDER        reduce using rule 126 (clone -> expresion PUNTO CLONE PIZQ PDER .)


state 294

    (120) remove -> expresion PUNTO REMOVE PIZQ expresion . PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 317
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 295

    (92) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ . expresion COMA expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 318
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 296

    (93) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ . expresion COMA expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 319
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 297

    (122) vector -> VEC NOT CORIZQ lista_expresiones CORDER .

    MAS             reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MENOS           reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MULTIPLICACION  reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    DIVISION        reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MODULO          reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MAYOR           reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MENOR           reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MAYORIGUAL      reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    MENORIGUAL      reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    IGUALIGUAL      reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    DIFERENTE       reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    AND             reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    OR              reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    PUNTO           reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    AS              reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    LLAVEIZQ        reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    PTCOMA          reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    COMA            reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    PDER            reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    CORDER          reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    IGUAL           reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)
    LLAVEDER        reduce using rule 122 (vector -> VEC NOT CORIZQ lista_expresiones CORDER .)


state 298

    (123) vector -> VEC NOT CORIZQ expresion PTCOMA . expresion CORDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 320
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 299

    (124) vector -> VECM DOBLEPT DOBLEPT NEW PIZQ . PDER

    PDER            shift and go to state 321


state 300

    (125) vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ . expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 322
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 301

    (81) for -> FOR ID IN expresion PUNTO PUNTO . expresion bloque
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 323
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 302

    (82) for -> FOR ID IN expresion PUNTO CHARS . PIZQ PDER bloque

    PIZQ            shift and go to state 324


state 303

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR . instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (37) instruccion1 -> . print COMA
    (38) instruccion1 -> . declaracion COMA
    (39) instruccion1 -> . asignacion COMA
    (40) instruccion1 -> . if_i COMA
    (41) instruccion1 -> . llamadaF COMA
    (42) instruccion1 -> . return COMA
    (43) instruccion1 -> . loop COMA
    (44) instruccion1 -> . break COMA
    (45) instruccion1 -> . while COMA
    (46) instruccion1 -> . continue COMA
    (47) instruccion1 -> . for COMA
    (48) instruccion1 -> . insert COMA
    (49) instruccion1 -> . asignacionA COMA
    (50) instruccion1 -> . push COMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57

    instruccion1                   shift and go to state 325
    print                          shift and go to state 326
    declaracion                    shift and go to state 327
    asignacion                     shift and go to state 328
    if_i                           shift and go to state 329
    llamadaF                       shift and go to state 330
    return                         shift and go to state 331
    loop                           shift and go to state 332
    break                          shift and go to state 333
    while                          shift and go to state 334
    continue                       shift and go to state 335
    for                            shift and go to state 336
    insert                         shift and go to state 337
    asignacionA                    shift and go to state 338
    push                           shift and go to state 339

state 304

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA . expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 340
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 305

    (65) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion . CORDER PTCOMA expresion CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 341
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 306

    (64) dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .

    PDER            reduce using rule 64 (dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .)
    COMA            reduce using rule 64 (dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 64 (dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .)


state 307

    (55) declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 55 (declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion .)
    COMA            reduce using rule 55 (declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 308

    (59) declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 59 (declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion .)
    COMA            reduce using rule 59 (declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 309

    (61) declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato . MAYOR IGUAL expresion

    MAYOR           shift and go to state 342


state 310

    (62) declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR . IGUAL expresion

    IGUAL           shift and go to state 343


state 311

    (85) insert -> ID PUNTO INSERT PIZQ expresion COMA expresion . PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 344
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 312

    (142) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (68) if_i -> IF expresion . bloque
    (69) if_i -> IF expresion . bloque ELSE bloque
    (70) if_i -> IF expresion . bloque listaelseI
    (71) if_i -> IF expresion . bloque listaelseI ELSE bloque
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 345
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159

    bloque                         shift and go to state 144

state 313

    (142) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .
    (143) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER . ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER . listaelse
    (145) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER . listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (146) listaelse -> . listaelse elseif
    (147) listaelse -> . elseif
    (148) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER

    MAS             reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOS           reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIVISION        reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MODULO          reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYOR           reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOR           reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIFERENTE       reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    AND             reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    OR              reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PUNTO           reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    AS              reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PTCOMA          reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    COMA            reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PDER            reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    CORDER          reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUAL           reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEDER        reduce using rule 142 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    ELSE            shift and go to state 346

    listaelse                      shift and go to state 347
    elseif                         shift and go to state 348

state 314

    (130) accesoarray -> ID ubicaciones .
    (54) asignacionA -> ID ubicaciones . IGUAL expresion
    (131) ubicaciones -> ubicaciones . ubicacion
    (133) ubicacion -> . CORIZQ expresion CORDER

    LLAVEDER        reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MAS             reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MENOS           reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MULTIPLICACION  reduce using rule 130 (accesoarray -> ID ubicaciones .)
    DIVISION        reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MODULO          reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MAYOR           reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MENOR           reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MAYORIGUAL      reduce using rule 130 (accesoarray -> ID ubicaciones .)
    MENORIGUAL      reduce using rule 130 (accesoarray -> ID ubicaciones .)
    IGUALIGUAL      reduce using rule 130 (accesoarray -> ID ubicaciones .)
    DIFERENTE       reduce using rule 130 (accesoarray -> ID ubicaciones .)
    AND             reduce using rule 130 (accesoarray -> ID ubicaciones .)
    OR              reduce using rule 130 (accesoarray -> ID ubicaciones .)
    PUNTO           reduce using rule 130 (accesoarray -> ID ubicaciones .)
    AS              reduce using rule 130 (accesoarray -> ID ubicaciones .)
    IGUAL           shift and go to state 140
    CORIZQ          shift and go to state 85

    ubicacion                      shift and go to state 141

state 315

    (74) elseifI -> ELSE IF expresion bloque .

    ELSE            reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    LLAVEDER        reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    PRINTLN         reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    LET             reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    ID              reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    IF              reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    RETURN          reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    LOOP            reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    BREAK           reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    WHILE           reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    CONTINUE        reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    FOR             reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    MATCH           reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    MENOS           reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    I64             reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    F64             reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    PIZQ            reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    NOT             reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    ENTERO          reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    DECIMAL         reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    CARACTER        reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    CADENA          reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    TRUE            reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    FALSE           reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    CORIZQ          reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    Y               reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    VEC             reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    VECM            reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)
    COMA            reduce using rule 74 (elseifI -> ELSE IF expresion bloque .)


state 316

    (121) contains -> expresion PUNTO CONTAINS PIZQ Y expresion . PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 349
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 317

    (120) remove -> expresion PUNTO REMOVE PIZQ expresion PDER .

    MAS             reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MENOS           reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    DIVISION        reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MODULO          reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MAYOR           reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MENOR           reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    AND             reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    OR              reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    PUNTO           reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    AS              reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    LLAVEIZQ        reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    PTCOMA          reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    COMA            reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    PDER            reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    CORDER          reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    IGUAL           reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)
    LLAVEDER        reduce using rule 120 (remove -> expresion PUNTO REMOVE PIZQ expresion PDER .)


state 318

    (92) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion . COMA expresion PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    COMA            shift and go to state 350
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 319

    (93) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion . COMA expresion PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    COMA            shift and go to state 351
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 320

    (123) vector -> VEC NOT CORIZQ expresion PTCOMA expresion . CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 352
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 321

    (124) vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .

    MAS             reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MENOS           reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MULTIPLICACION  reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    DIVISION        reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MODULO          reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MAYOR           reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MENOR           reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MAYORIGUAL      reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    MENORIGUAL      reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    IGUALIGUAL      reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    DIFERENTE       reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    AND             reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    OR              reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    PUNTO           reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    AS              reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    LLAVEIZQ        reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    PTCOMA          reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    COMA            reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    PDER            reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    CORDER          reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    IGUAL           reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)
    LLAVEDER        reduce using rule 124 (vector -> VECM DOBLEPT DOBLEPT NEW PIZQ PDER .)


state 322

    (125) vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion . PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 353
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 323

    (81) for -> FOR ID IN expresion PUNTO PUNTO expresion . bloque
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 354

state 324

    (82) for -> FOR ID IN expresion PUNTO CHARS PIZQ . PDER bloque

    PDER            shift and go to state 355


state 325

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 . expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 356
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 326

    (37) instruccion1 -> print . COMA

    COMA            shift and go to state 357


state 327

    (38) instruccion1 -> declaracion . COMA

    COMA            shift and go to state 358


state 328

    (39) instruccion1 -> asignacion . COMA

    COMA            shift and go to state 359


state 329

    (40) instruccion1 -> if_i . COMA

    COMA            shift and go to state 360


state 330

    (41) instruccion1 -> llamadaF . COMA

    COMA            shift and go to state 361


state 331

    (42) instruccion1 -> return . COMA

    COMA            shift and go to state 362


state 332

    (43) instruccion1 -> loop . COMA

    COMA            shift and go to state 363


state 333

    (44) instruccion1 -> break . COMA

    COMA            shift and go to state 364


state 334

    (45) instruccion1 -> while . COMA

    COMA            shift and go to state 365


state 335

    (46) instruccion1 -> continue . COMA

    COMA            shift and go to state 366


state 336

    (47) instruccion1 -> for . COMA

    COMA            shift and go to state 367


state 337

    (48) instruccion1 -> insert . COMA

    COMA            shift and go to state 368


state 338

    (49) instruccion1 -> asignacionA . COMA

    COMA            shift and go to state 369


state 339

    (50) instruccion1 -> push . COMA

    COMA            shift and go to state 370


state 340

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion . CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 371
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 341

    (65) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 372


state 342

    (61) declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR . IGUAL expresion

    IGUAL           shift and go to state 373


state 343

    (62) declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 374
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 344

    (85) insert -> ID PUNTO INSERT PIZQ expresion COMA expresion PDER .

    PTCOMA          reduce using rule 85 (insert -> ID PUNTO INSERT PIZQ expresion COMA expresion PDER .)
    COMA            reduce using rule 85 (insert -> ID PUNTO INSERT PIZQ expresion COMA expresion PDER .)


state 345

    (142) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER
    (143) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER listaelse
    (145) if_e -> IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (18) bloque -> LLAVEIZQ . LLAVEDER
    (19) bloque -> LLAVEIZQ . instrucciones LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    LLAVEDER        shift and go to state 30
    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    instrucciones                  shift and go to state 375
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 346

    (143) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE . LLAVEIZQ instrucciones expresion LLAVEDER
    (148) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER

    LLAVEIZQ        shift and go to state 377
    IF              shift and go to state 376


state 347

    (144) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .
    (145) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse . ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (146) listaelse -> listaelse . elseif
    (148) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER

    MAS             reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MENOS           reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MULTIPLICACION  reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    DIVISION        reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MODULO          reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MAYOR           reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MENOR           reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MAYORIGUAL      reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    MENORIGUAL      reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    IGUALIGUAL      reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    DIFERENTE       reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    AND             reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    OR              reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    PUNTO           reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    AS              reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    LLAVEIZQ        reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    PTCOMA          reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    COMA            reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    PDER            reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    CORDER          reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    IGUAL           reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    LLAVEDER        reduce using rule 144 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse .)
    ELSE            shift and go to state 378

    elseif                         shift and go to state 379

state 348

    (147) listaelse -> elseif .

    ELSE            reduce using rule 147 (listaelse -> elseif .)
    MAS             reduce using rule 147 (listaelse -> elseif .)
    MENOS           reduce using rule 147 (listaelse -> elseif .)
    MULTIPLICACION  reduce using rule 147 (listaelse -> elseif .)
    DIVISION        reduce using rule 147 (listaelse -> elseif .)
    MODULO          reduce using rule 147 (listaelse -> elseif .)
    MAYOR           reduce using rule 147 (listaelse -> elseif .)
    MENOR           reduce using rule 147 (listaelse -> elseif .)
    MAYORIGUAL      reduce using rule 147 (listaelse -> elseif .)
    MENORIGUAL      reduce using rule 147 (listaelse -> elseif .)
    IGUALIGUAL      reduce using rule 147 (listaelse -> elseif .)
    DIFERENTE       reduce using rule 147 (listaelse -> elseif .)
    AND             reduce using rule 147 (listaelse -> elseif .)
    OR              reduce using rule 147 (listaelse -> elseif .)
    PUNTO           reduce using rule 147 (listaelse -> elseif .)
    AS              reduce using rule 147 (listaelse -> elseif .)
    LLAVEIZQ        reduce using rule 147 (listaelse -> elseif .)
    PTCOMA          reduce using rule 147 (listaelse -> elseif .)
    COMA            reduce using rule 147 (listaelse -> elseif .)
    PDER            reduce using rule 147 (listaelse -> elseif .)
    CORDER          reduce using rule 147 (listaelse -> elseif .)
    IGUAL           reduce using rule 147 (listaelse -> elseif .)
    LLAVEDER        reduce using rule 147 (listaelse -> elseif .)


state 349

    (121) contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .

    MAS             reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MENOS           reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MULTIPLICACION  reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    DIVISION        reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MODULO          reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MAYOR           reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MENOR           reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MAYORIGUAL      reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    MENORIGUAL      reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    IGUALIGUAL      reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    DIFERENTE       reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    AND             reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    OR              reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    PUNTO           reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    AS              reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    LLAVEIZQ        reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    PTCOMA          reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    COMA            reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    PDER            reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    CORDER          reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    IGUAL           reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)
    LLAVEDER        reduce using rule 121 (contains -> expresion PUNTO CONTAINS PIZQ Y expresion PDER .)


state 350

    (92) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA . expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 380
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 351

    (93) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA . expresion PDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 381
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 352

    (123) vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .

    MAS             reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MENOS           reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MULTIPLICACION  reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    DIVISION        reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MODULO          reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MAYOR           reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MENOR           reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MAYORIGUAL      reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    MENORIGUAL      reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    IGUALIGUAL      reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    DIFERENTE       reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    AND             reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    OR              reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    PUNTO           reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    AS              reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    LLAVEIZQ        reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    COMA            reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    PDER            reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    CORDER          reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)
    LLAVEDER        reduce using rule 123 (vector -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER .)


state 353

    (125) vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .

    MAS             reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MENOS           reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    DIVISION        reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MODULO          reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MAYOR           reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MENOR           reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    AND             reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    OR              reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    PUNTO           reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    AS              reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    LLAVEIZQ        reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    PTCOMA          reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    COMA            reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    PDER            reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    CORDER          reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    IGUAL           reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)
    LLAVEDER        reduce using rule 125 (vector -> VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER .)


state 354

    (81) for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .

    LLAVEDER        reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    PRINTLN         reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    LET             reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    ID              reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    IF              reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    RETURN          reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    LOOP            reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    BREAK           reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    WHILE           reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CONTINUE        reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    FOR             reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    MATCH           reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    MENOS           reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    I64             reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    F64             reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    PIZQ            reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    NOT             reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    ENTERO          reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    DECIMAL         reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CARACTER        reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CADENA          reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    TRUE            reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    FALSE           reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CORIZQ          reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    Y               reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    VEC             reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    VECM            reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    COMA            reduce using rule 81 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)


state 355

    (82) for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER . bloque
    (18) bloque -> . LLAVEIZQ LLAVEDER
    (19) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 382

state 356

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion . IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    IGUAL           shift and go to state 383
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 357

    (37) instruccion1 -> print COMA .

    MENOS           reduce using rule 37 (instruccion1 -> print COMA .)
    I64             reduce using rule 37 (instruccion1 -> print COMA .)
    F64             reduce using rule 37 (instruccion1 -> print COMA .)
    PIZQ            reduce using rule 37 (instruccion1 -> print COMA .)
    NOT             reduce using rule 37 (instruccion1 -> print COMA .)
    ENTERO          reduce using rule 37 (instruccion1 -> print COMA .)
    DECIMAL         reduce using rule 37 (instruccion1 -> print COMA .)
    ID              reduce using rule 37 (instruccion1 -> print COMA .)
    CARACTER        reduce using rule 37 (instruccion1 -> print COMA .)
    CADENA          reduce using rule 37 (instruccion1 -> print COMA .)
    TRUE            reduce using rule 37 (instruccion1 -> print COMA .)
    FALSE           reduce using rule 37 (instruccion1 -> print COMA .)
    IF              reduce using rule 37 (instruccion1 -> print COMA .)
    LOOP            reduce using rule 37 (instruccion1 -> print COMA .)
    CORIZQ          reduce using rule 37 (instruccion1 -> print COMA .)
    Y               reduce using rule 37 (instruccion1 -> print COMA .)
    VEC             reduce using rule 37 (instruccion1 -> print COMA .)
    VECM            reduce using rule 37 (instruccion1 -> print COMA .)
    LLAVEDER        reduce using rule 37 (instruccion1 -> print COMA .)


state 358

    (38) instruccion1 -> declaracion COMA .

    MENOS           reduce using rule 38 (instruccion1 -> declaracion COMA .)
    I64             reduce using rule 38 (instruccion1 -> declaracion COMA .)
    F64             reduce using rule 38 (instruccion1 -> declaracion COMA .)
    PIZQ            reduce using rule 38 (instruccion1 -> declaracion COMA .)
    NOT             reduce using rule 38 (instruccion1 -> declaracion COMA .)
    ENTERO          reduce using rule 38 (instruccion1 -> declaracion COMA .)
    DECIMAL         reduce using rule 38 (instruccion1 -> declaracion COMA .)
    ID              reduce using rule 38 (instruccion1 -> declaracion COMA .)
    CARACTER        reduce using rule 38 (instruccion1 -> declaracion COMA .)
    CADENA          reduce using rule 38 (instruccion1 -> declaracion COMA .)
    TRUE            reduce using rule 38 (instruccion1 -> declaracion COMA .)
    FALSE           reduce using rule 38 (instruccion1 -> declaracion COMA .)
    IF              reduce using rule 38 (instruccion1 -> declaracion COMA .)
    LOOP            reduce using rule 38 (instruccion1 -> declaracion COMA .)
    CORIZQ          reduce using rule 38 (instruccion1 -> declaracion COMA .)
    Y               reduce using rule 38 (instruccion1 -> declaracion COMA .)
    VEC             reduce using rule 38 (instruccion1 -> declaracion COMA .)
    VECM            reduce using rule 38 (instruccion1 -> declaracion COMA .)
    LLAVEDER        reduce using rule 38 (instruccion1 -> declaracion COMA .)


state 359

    (39) instruccion1 -> asignacion COMA .

    MENOS           reduce using rule 39 (instruccion1 -> asignacion COMA .)
    I64             reduce using rule 39 (instruccion1 -> asignacion COMA .)
    F64             reduce using rule 39 (instruccion1 -> asignacion COMA .)
    PIZQ            reduce using rule 39 (instruccion1 -> asignacion COMA .)
    NOT             reduce using rule 39 (instruccion1 -> asignacion COMA .)
    ENTERO          reduce using rule 39 (instruccion1 -> asignacion COMA .)
    DECIMAL         reduce using rule 39 (instruccion1 -> asignacion COMA .)
    ID              reduce using rule 39 (instruccion1 -> asignacion COMA .)
    CARACTER        reduce using rule 39 (instruccion1 -> asignacion COMA .)
    CADENA          reduce using rule 39 (instruccion1 -> asignacion COMA .)
    TRUE            reduce using rule 39 (instruccion1 -> asignacion COMA .)
    FALSE           reduce using rule 39 (instruccion1 -> asignacion COMA .)
    IF              reduce using rule 39 (instruccion1 -> asignacion COMA .)
    LOOP            reduce using rule 39 (instruccion1 -> asignacion COMA .)
    CORIZQ          reduce using rule 39 (instruccion1 -> asignacion COMA .)
    Y               reduce using rule 39 (instruccion1 -> asignacion COMA .)
    VEC             reduce using rule 39 (instruccion1 -> asignacion COMA .)
    VECM            reduce using rule 39 (instruccion1 -> asignacion COMA .)
    LLAVEDER        reduce using rule 39 (instruccion1 -> asignacion COMA .)


state 360

    (40) instruccion1 -> if_i COMA .

    MENOS           reduce using rule 40 (instruccion1 -> if_i COMA .)
    I64             reduce using rule 40 (instruccion1 -> if_i COMA .)
    F64             reduce using rule 40 (instruccion1 -> if_i COMA .)
    PIZQ            reduce using rule 40 (instruccion1 -> if_i COMA .)
    NOT             reduce using rule 40 (instruccion1 -> if_i COMA .)
    ENTERO          reduce using rule 40 (instruccion1 -> if_i COMA .)
    DECIMAL         reduce using rule 40 (instruccion1 -> if_i COMA .)
    ID              reduce using rule 40 (instruccion1 -> if_i COMA .)
    CARACTER        reduce using rule 40 (instruccion1 -> if_i COMA .)
    CADENA          reduce using rule 40 (instruccion1 -> if_i COMA .)
    TRUE            reduce using rule 40 (instruccion1 -> if_i COMA .)
    FALSE           reduce using rule 40 (instruccion1 -> if_i COMA .)
    IF              reduce using rule 40 (instruccion1 -> if_i COMA .)
    LOOP            reduce using rule 40 (instruccion1 -> if_i COMA .)
    CORIZQ          reduce using rule 40 (instruccion1 -> if_i COMA .)
    Y               reduce using rule 40 (instruccion1 -> if_i COMA .)
    VEC             reduce using rule 40 (instruccion1 -> if_i COMA .)
    VECM            reduce using rule 40 (instruccion1 -> if_i COMA .)
    LLAVEDER        reduce using rule 40 (instruccion1 -> if_i COMA .)


state 361

    (41) instruccion1 -> llamadaF COMA .

    MENOS           reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    I64             reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    F64             reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    PIZQ            reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    NOT             reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    ENTERO          reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    DECIMAL         reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    ID              reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    CARACTER        reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    CADENA          reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    TRUE            reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    FALSE           reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    IF              reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    LOOP            reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    CORIZQ          reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    Y               reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    VEC             reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    VECM            reduce using rule 41 (instruccion1 -> llamadaF COMA .)
    LLAVEDER        reduce using rule 41 (instruccion1 -> llamadaF COMA .)


state 362

    (42) instruccion1 -> return COMA .

    MENOS           reduce using rule 42 (instruccion1 -> return COMA .)
    I64             reduce using rule 42 (instruccion1 -> return COMA .)
    F64             reduce using rule 42 (instruccion1 -> return COMA .)
    PIZQ            reduce using rule 42 (instruccion1 -> return COMA .)
    NOT             reduce using rule 42 (instruccion1 -> return COMA .)
    ENTERO          reduce using rule 42 (instruccion1 -> return COMA .)
    DECIMAL         reduce using rule 42 (instruccion1 -> return COMA .)
    ID              reduce using rule 42 (instruccion1 -> return COMA .)
    CARACTER        reduce using rule 42 (instruccion1 -> return COMA .)
    CADENA          reduce using rule 42 (instruccion1 -> return COMA .)
    TRUE            reduce using rule 42 (instruccion1 -> return COMA .)
    FALSE           reduce using rule 42 (instruccion1 -> return COMA .)
    IF              reduce using rule 42 (instruccion1 -> return COMA .)
    LOOP            reduce using rule 42 (instruccion1 -> return COMA .)
    CORIZQ          reduce using rule 42 (instruccion1 -> return COMA .)
    Y               reduce using rule 42 (instruccion1 -> return COMA .)
    VEC             reduce using rule 42 (instruccion1 -> return COMA .)
    VECM            reduce using rule 42 (instruccion1 -> return COMA .)
    LLAVEDER        reduce using rule 42 (instruccion1 -> return COMA .)


state 363

    (43) instruccion1 -> loop COMA .

    MENOS           reduce using rule 43 (instruccion1 -> loop COMA .)
    I64             reduce using rule 43 (instruccion1 -> loop COMA .)
    F64             reduce using rule 43 (instruccion1 -> loop COMA .)
    PIZQ            reduce using rule 43 (instruccion1 -> loop COMA .)
    NOT             reduce using rule 43 (instruccion1 -> loop COMA .)
    ENTERO          reduce using rule 43 (instruccion1 -> loop COMA .)
    DECIMAL         reduce using rule 43 (instruccion1 -> loop COMA .)
    ID              reduce using rule 43 (instruccion1 -> loop COMA .)
    CARACTER        reduce using rule 43 (instruccion1 -> loop COMA .)
    CADENA          reduce using rule 43 (instruccion1 -> loop COMA .)
    TRUE            reduce using rule 43 (instruccion1 -> loop COMA .)
    FALSE           reduce using rule 43 (instruccion1 -> loop COMA .)
    IF              reduce using rule 43 (instruccion1 -> loop COMA .)
    LOOP            reduce using rule 43 (instruccion1 -> loop COMA .)
    CORIZQ          reduce using rule 43 (instruccion1 -> loop COMA .)
    Y               reduce using rule 43 (instruccion1 -> loop COMA .)
    VEC             reduce using rule 43 (instruccion1 -> loop COMA .)
    VECM            reduce using rule 43 (instruccion1 -> loop COMA .)
    LLAVEDER        reduce using rule 43 (instruccion1 -> loop COMA .)


state 364

    (44) instruccion1 -> break COMA .

    MENOS           reduce using rule 44 (instruccion1 -> break COMA .)
    I64             reduce using rule 44 (instruccion1 -> break COMA .)
    F64             reduce using rule 44 (instruccion1 -> break COMA .)
    PIZQ            reduce using rule 44 (instruccion1 -> break COMA .)
    NOT             reduce using rule 44 (instruccion1 -> break COMA .)
    ENTERO          reduce using rule 44 (instruccion1 -> break COMA .)
    DECIMAL         reduce using rule 44 (instruccion1 -> break COMA .)
    ID              reduce using rule 44 (instruccion1 -> break COMA .)
    CARACTER        reduce using rule 44 (instruccion1 -> break COMA .)
    CADENA          reduce using rule 44 (instruccion1 -> break COMA .)
    TRUE            reduce using rule 44 (instruccion1 -> break COMA .)
    FALSE           reduce using rule 44 (instruccion1 -> break COMA .)
    IF              reduce using rule 44 (instruccion1 -> break COMA .)
    LOOP            reduce using rule 44 (instruccion1 -> break COMA .)
    CORIZQ          reduce using rule 44 (instruccion1 -> break COMA .)
    Y               reduce using rule 44 (instruccion1 -> break COMA .)
    VEC             reduce using rule 44 (instruccion1 -> break COMA .)
    VECM            reduce using rule 44 (instruccion1 -> break COMA .)
    LLAVEDER        reduce using rule 44 (instruccion1 -> break COMA .)


state 365

    (45) instruccion1 -> while COMA .

    MENOS           reduce using rule 45 (instruccion1 -> while COMA .)
    I64             reduce using rule 45 (instruccion1 -> while COMA .)
    F64             reduce using rule 45 (instruccion1 -> while COMA .)
    PIZQ            reduce using rule 45 (instruccion1 -> while COMA .)
    NOT             reduce using rule 45 (instruccion1 -> while COMA .)
    ENTERO          reduce using rule 45 (instruccion1 -> while COMA .)
    DECIMAL         reduce using rule 45 (instruccion1 -> while COMA .)
    ID              reduce using rule 45 (instruccion1 -> while COMA .)
    CARACTER        reduce using rule 45 (instruccion1 -> while COMA .)
    CADENA          reduce using rule 45 (instruccion1 -> while COMA .)
    TRUE            reduce using rule 45 (instruccion1 -> while COMA .)
    FALSE           reduce using rule 45 (instruccion1 -> while COMA .)
    IF              reduce using rule 45 (instruccion1 -> while COMA .)
    LOOP            reduce using rule 45 (instruccion1 -> while COMA .)
    CORIZQ          reduce using rule 45 (instruccion1 -> while COMA .)
    Y               reduce using rule 45 (instruccion1 -> while COMA .)
    VEC             reduce using rule 45 (instruccion1 -> while COMA .)
    VECM            reduce using rule 45 (instruccion1 -> while COMA .)
    LLAVEDER        reduce using rule 45 (instruccion1 -> while COMA .)


state 366

    (46) instruccion1 -> continue COMA .

    MENOS           reduce using rule 46 (instruccion1 -> continue COMA .)
    I64             reduce using rule 46 (instruccion1 -> continue COMA .)
    F64             reduce using rule 46 (instruccion1 -> continue COMA .)
    PIZQ            reduce using rule 46 (instruccion1 -> continue COMA .)
    NOT             reduce using rule 46 (instruccion1 -> continue COMA .)
    ENTERO          reduce using rule 46 (instruccion1 -> continue COMA .)
    DECIMAL         reduce using rule 46 (instruccion1 -> continue COMA .)
    ID              reduce using rule 46 (instruccion1 -> continue COMA .)
    CARACTER        reduce using rule 46 (instruccion1 -> continue COMA .)
    CADENA          reduce using rule 46 (instruccion1 -> continue COMA .)
    TRUE            reduce using rule 46 (instruccion1 -> continue COMA .)
    FALSE           reduce using rule 46 (instruccion1 -> continue COMA .)
    IF              reduce using rule 46 (instruccion1 -> continue COMA .)
    LOOP            reduce using rule 46 (instruccion1 -> continue COMA .)
    CORIZQ          reduce using rule 46 (instruccion1 -> continue COMA .)
    Y               reduce using rule 46 (instruccion1 -> continue COMA .)
    VEC             reduce using rule 46 (instruccion1 -> continue COMA .)
    VECM            reduce using rule 46 (instruccion1 -> continue COMA .)
    LLAVEDER        reduce using rule 46 (instruccion1 -> continue COMA .)


state 367

    (47) instruccion1 -> for COMA .

    MENOS           reduce using rule 47 (instruccion1 -> for COMA .)
    I64             reduce using rule 47 (instruccion1 -> for COMA .)
    F64             reduce using rule 47 (instruccion1 -> for COMA .)
    PIZQ            reduce using rule 47 (instruccion1 -> for COMA .)
    NOT             reduce using rule 47 (instruccion1 -> for COMA .)
    ENTERO          reduce using rule 47 (instruccion1 -> for COMA .)
    DECIMAL         reduce using rule 47 (instruccion1 -> for COMA .)
    ID              reduce using rule 47 (instruccion1 -> for COMA .)
    CARACTER        reduce using rule 47 (instruccion1 -> for COMA .)
    CADENA          reduce using rule 47 (instruccion1 -> for COMA .)
    TRUE            reduce using rule 47 (instruccion1 -> for COMA .)
    FALSE           reduce using rule 47 (instruccion1 -> for COMA .)
    IF              reduce using rule 47 (instruccion1 -> for COMA .)
    LOOP            reduce using rule 47 (instruccion1 -> for COMA .)
    CORIZQ          reduce using rule 47 (instruccion1 -> for COMA .)
    Y               reduce using rule 47 (instruccion1 -> for COMA .)
    VEC             reduce using rule 47 (instruccion1 -> for COMA .)
    VECM            reduce using rule 47 (instruccion1 -> for COMA .)
    LLAVEDER        reduce using rule 47 (instruccion1 -> for COMA .)


state 368

    (48) instruccion1 -> insert COMA .

    MENOS           reduce using rule 48 (instruccion1 -> insert COMA .)
    I64             reduce using rule 48 (instruccion1 -> insert COMA .)
    F64             reduce using rule 48 (instruccion1 -> insert COMA .)
    PIZQ            reduce using rule 48 (instruccion1 -> insert COMA .)
    NOT             reduce using rule 48 (instruccion1 -> insert COMA .)
    ENTERO          reduce using rule 48 (instruccion1 -> insert COMA .)
    DECIMAL         reduce using rule 48 (instruccion1 -> insert COMA .)
    ID              reduce using rule 48 (instruccion1 -> insert COMA .)
    CARACTER        reduce using rule 48 (instruccion1 -> insert COMA .)
    CADENA          reduce using rule 48 (instruccion1 -> insert COMA .)
    TRUE            reduce using rule 48 (instruccion1 -> insert COMA .)
    FALSE           reduce using rule 48 (instruccion1 -> insert COMA .)
    IF              reduce using rule 48 (instruccion1 -> insert COMA .)
    LOOP            reduce using rule 48 (instruccion1 -> insert COMA .)
    CORIZQ          reduce using rule 48 (instruccion1 -> insert COMA .)
    Y               reduce using rule 48 (instruccion1 -> insert COMA .)
    VEC             reduce using rule 48 (instruccion1 -> insert COMA .)
    VECM            reduce using rule 48 (instruccion1 -> insert COMA .)
    LLAVEDER        reduce using rule 48 (instruccion1 -> insert COMA .)


state 369

    (49) instruccion1 -> asignacionA COMA .

    MENOS           reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    I64             reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    F64             reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    PIZQ            reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    NOT             reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    ENTERO          reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    DECIMAL         reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    ID              reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    CARACTER        reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    CADENA          reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    TRUE            reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    FALSE           reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    IF              reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    LOOP            reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    CORIZQ          reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    Y               reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    VEC             reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    VECM            reduce using rule 49 (instruccion1 -> asignacionA COMA .)
    LLAVEDER        reduce using rule 49 (instruccion1 -> asignacionA COMA .)


state 370

    (50) instruccion1 -> push COMA .

    MENOS           reduce using rule 50 (instruccion1 -> push COMA .)
    I64             reduce using rule 50 (instruccion1 -> push COMA .)
    F64             reduce using rule 50 (instruccion1 -> push COMA .)
    PIZQ            reduce using rule 50 (instruccion1 -> push COMA .)
    NOT             reduce using rule 50 (instruccion1 -> push COMA .)
    ENTERO          reduce using rule 50 (instruccion1 -> push COMA .)
    DECIMAL         reduce using rule 50 (instruccion1 -> push COMA .)
    ID              reduce using rule 50 (instruccion1 -> push COMA .)
    CARACTER        reduce using rule 50 (instruccion1 -> push COMA .)
    CADENA          reduce using rule 50 (instruccion1 -> push COMA .)
    TRUE            reduce using rule 50 (instruccion1 -> push COMA .)
    FALSE           reduce using rule 50 (instruccion1 -> push COMA .)
    IF              reduce using rule 50 (instruccion1 -> push COMA .)
    LOOP            reduce using rule 50 (instruccion1 -> push COMA .)
    CORIZQ          reduce using rule 50 (instruccion1 -> push COMA .)
    Y               reduce using rule 50 (instruccion1 -> push COMA .)
    VEC             reduce using rule 50 (instruccion1 -> push COMA .)
    VECM            reduce using rule 50 (instruccion1 -> push COMA .)
    LLAVEDER        reduce using rule 50 (instruccion1 -> push COMA .)


state 371

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER . PTCOMA expresion CORDER PTCOMA expresion CORDER

    PTCOMA          shift and go to state 384


state 372

    (65) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA . expresion CORDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 385
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 373

    (61) declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL . expresion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 386
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 374

    (62) declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 62 (declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .)
    COMA            reduce using rule 62 (declaracion -> LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 375

    (142) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER
    (143) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER listaelse
    (145) if_e -> IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (19) bloque -> LLAVEIZQ instrucciones . LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    LLAVEDER        shift and go to state 65
    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 283
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 279
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119
    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    RETURN          shift and go to state 52
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    expresion                      shift and go to state 280
    instruccion                    shift and go to state 66
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 281
    loop                           shift and go to state 282
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 376

    (148) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 387
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 377

    (143) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ . instrucciones expresion LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    instrucciones                  shift and go to state 388
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 378

    (145) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE . LLAVEIZQ instrucciones expresion LLAVEDER
    (148) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER

    LLAVEIZQ        shift and go to state 389
    IF              shift and go to state 376


state 379

    (146) listaelse -> listaelse elseif .

    ELSE            reduce using rule 146 (listaelse -> listaelse elseif .)
    MAS             reduce using rule 146 (listaelse -> listaelse elseif .)
    MENOS           reduce using rule 146 (listaelse -> listaelse elseif .)
    MULTIPLICACION  reduce using rule 146 (listaelse -> listaelse elseif .)
    DIVISION        reduce using rule 146 (listaelse -> listaelse elseif .)
    MODULO          reduce using rule 146 (listaelse -> listaelse elseif .)
    MAYOR           reduce using rule 146 (listaelse -> listaelse elseif .)
    MENOR           reduce using rule 146 (listaelse -> listaelse elseif .)
    MAYORIGUAL      reduce using rule 146 (listaelse -> listaelse elseif .)
    MENORIGUAL      reduce using rule 146 (listaelse -> listaelse elseif .)
    IGUALIGUAL      reduce using rule 146 (listaelse -> listaelse elseif .)
    DIFERENTE       reduce using rule 146 (listaelse -> listaelse elseif .)
    AND             reduce using rule 146 (listaelse -> listaelse elseif .)
    OR              reduce using rule 146 (listaelse -> listaelse elseif .)
    PUNTO           reduce using rule 146 (listaelse -> listaelse elseif .)
    AS              reduce using rule 146 (listaelse -> listaelse elseif .)
    LLAVEIZQ        reduce using rule 146 (listaelse -> listaelse elseif .)
    PTCOMA          reduce using rule 146 (listaelse -> listaelse elseif .)
    COMA            reduce using rule 146 (listaelse -> listaelse elseif .)
    PDER            reduce using rule 146 (listaelse -> listaelse elseif .)
    CORDER          reduce using rule 146 (listaelse -> listaelse elseif .)
    IGUAL           reduce using rule 146 (listaelse -> listaelse elseif .)
    LLAVEDER        reduce using rule 146 (listaelse -> listaelse elseif .)


state 380

    (92) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion . PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 390
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 381

    (93) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion . PDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PDER            shift and go to state 391
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 382

    (82) for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .

    LLAVEDER        reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    PRINTLN         reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    LET             reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    ID              reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    IF              reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    RETURN          reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    LOOP            reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    BREAK           reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    WHILE           reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CONTINUE        reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    FOR             reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    MATCH           reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    MENOS           reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    I64             reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    F64             reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    PIZQ            reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    NOT             reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    ENTERO          reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    DECIMAL         reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CARACTER        reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CADENA          reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    TRUE            reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    FALSE           reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CORIZQ          reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    Y               reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    VEC             reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    VECM            reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    COMA            reduce using rule 82 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)


state 383

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL . MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER

    MAYOR           shift and go to state 392


state 384

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA . expresion CORDER PTCOMA expresion CORDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 393
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 385

    (65) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion . CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 394
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 386

    (61) declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    PTCOMA          reduce using rule 61 (declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .)
    COMA            reduce using rule 61 (declaracion -> LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion .)
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 387

    (148) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones expresion LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEIZQ        shift and go to state 395
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 388

    (143) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones . expresion LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 283
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 279
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119
    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    RETURN          shift and go to state 52
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    expresion                      shift and go to state 396
    instruccion                    shift and go to state 66
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 281
    loop                           shift and go to state 282
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 389

    (145) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ . instrucciones expresion LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    instrucciones                  shift and go to state 397
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 390

    (92) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .

    MAS             reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENOS           reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MULTIPLICACION  reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    DIVISION        reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MODULO          reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MAYOR           reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENOR           reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MAYORIGUAL      reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENORIGUAL      reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    IGUALIGUAL      reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    DIFERENTE       reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    AND             reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    OR              reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PUNTO           reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    AS              reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    LLAVEIZQ        reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PTCOMA          reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    COMA            reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PDER            reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    CORDER          reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    IGUAL           reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    LLAVEDER        reduce using rule 92 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)


state 391

    (93) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .

    MAS             reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENOS           reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MULTIPLICACION  reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    DIVISION        reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MODULO          reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MAYOR           reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENOR           reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MAYORIGUAL      reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENORIGUAL      reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    IGUALIGUAL      reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    DIFERENTE       reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    AND             reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    OR              reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PUNTO           reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    AS              reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    LLAVEIZQ        reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PTCOMA          reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    COMA            reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PDER            reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    CORDER          reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    IGUAL           reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    LLAVEDER        reduce using rule 93 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)


state 392

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR . instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (37) instruccion1 -> . print COMA
    (38) instruccion1 -> . declaracion COMA
    (39) instruccion1 -> . asignacion COMA
    (40) instruccion1 -> . if_i COMA
    (41) instruccion1 -> . llamadaF COMA
    (42) instruccion1 -> . return COMA
    (43) instruccion1 -> . loop COMA
    (44) instruccion1 -> . break COMA
    (45) instruccion1 -> . while COMA
    (46) instruccion1 -> . continue COMA
    (47) instruccion1 -> . for COMA
    (48) instruccion1 -> . insert COMA
    (49) instruccion1 -> . asignacionA COMA
    (50) instruccion1 -> . push COMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57

    instruccion1                   shift and go to state 398
    print                          shift and go to state 326
    declaracion                    shift and go to state 327
    asignacion                     shift and go to state 328
    if_i                           shift and go to state 329
    llamadaF                       shift and go to state 330
    return                         shift and go to state 331
    loop                           shift and go to state 332
    break                          shift and go to state 333
    while                          shift and go to state 334
    continue                       shift and go to state 335
    for                            shift and go to state 336
    insert                         shift and go to state 337
    asignacionA                    shift and go to state 338
    push                           shift and go to state 339

state 393

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion . CORDER PTCOMA expresion CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 399
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 394

    (65) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .

    PDER            reduce using rule 65 (dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    COMA            reduce using rule 65 (dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 65 (dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .)


state 395

    (148) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones expresion LLAVEDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    instrucciones                  shift and go to state 400
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 396

    (143) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion . LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEDER        shift and go to state 401
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 397

    (145) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones . expresion LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 283
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 279
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119
    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    RETURN          shift and go to state 52
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    expresion                      shift and go to state 402
    instruccion                    shift and go to state 66
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 281
    loop                           shift and go to state 282
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 398

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 . ID IGUAL MAYOR instruccion1 LLAVEDER

    ID              shift and go to state 403


state 399

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 404


state 400

    (148) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . expresion LLAVEDER
    (20) instrucciones -> instrucciones . instruccion
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (22) instruccion -> . print PTCOMA
    (23) instruccion -> . declaracion PTCOMA
    (24) instruccion -> . asignacion PTCOMA
    (25) instruccion -> . if_i
    (26) instruccion -> . llamadaF PTCOMA
    (27) instruccion -> . return PTCOMA
    (28) instruccion -> . loop
    (29) instruccion -> . break PTCOMA
    (30) instruccion -> . while
    (31) instruccion -> . continue PTCOMA
    (32) instruccion -> . for
    (33) instruccion -> . match
    (34) instruccion -> . insert PTCOMA
    (35) instruccion -> . asignacionA PTCOMA
    (36) instruccion -> . push PTCOMA
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (75) match -> . MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 283
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 279
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119
    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    RETURN          shift and go to state 52
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57
    MATCH           shift and go to state 58

    expresion                      shift and go to state 405
    instruccion                    shift and go to state 66
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 281
    loop                           shift and go to state 282
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    match                          shift and go to state 44
    insert                         shift and go to state 45
    asignacionA                    shift and go to state 46
    push                           shift and go to state 47

state 401

    (143) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .

    MAS             reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOS           reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIVISION        reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MODULO          reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYOR           reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOR           reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIFERENTE       reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    AND             reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    OR              reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PUNTO           reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    AS              reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PTCOMA          reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    COMA            reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PDER            reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    CORDER          reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUAL           reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEDER        reduce using rule 143 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)


state 402

    (145) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion . LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEDER        shift and go to state 406
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 403

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID . IGUAL MAYOR instruccion1 LLAVEDER

    IGUAL           shift and go to state 407


state 404

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA . expresion CORDER
    (86) expresion -> . MENOS expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion MULTIPLICACION expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (93) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (94) expresion -> . PIZQ expresion PDER
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion IGUALIGUAL expresion
    (100) expresion -> . expresion DIFERENTE expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . expresion OR expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . tostring
    (105) expresion -> . as
    (106) expresion -> . abs
    (107) expresion -> . sqrt
    (108) expresion -> . if_e
    (109) expresion -> . llamadaF
    (110) expresion -> . loop
    (111) expresion -> . arraycontenido
    (112) expresion -> . accesoarray
    (113) expresion -> . referencia
    (114) expresion -> . len
    (115) expresion -> . capacity
    (116) expresion -> . contains
    (117) expresion -> . clone
    (118) expresion -> . vector
    (119) expresion -> . remove
    (149) expresion -> . ENTERO
    (150) expresion -> . DECIMAL
    (151) expresion -> . ID
    (152) expresion -> . CARACTER
    (153) expresion -> . CADENA
    (154) expresion -> . TRUE
    (155) expresion -> . FALSE
    (135) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (136) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (137) as -> . expresion AS I64
    (138) as -> . expresion AS F64
    (139) as -> . expresion AS USIZE
    (140) abs -> . expresion PUNTO ABS PIZQ PDER
    (141) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (142) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER
    (143) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (144) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse
    (145) if_e -> . IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (76) loop -> . LOOP bloque
    (134) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (130) accesoarray -> . ID ubicaciones
    (129) referencia -> . Y MUT ID
    (127) len -> . expresion PUNTO LEN PIZQ PDER
    (128) capacity -> . expresion PUNTO CAPACITY PIZQ PDER
    (121) contains -> . expresion PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> . expresion PUNTO CLONE PIZQ PDER
    (122) vector -> . VEC NOT CORIZQ lista_expresiones CORDER
    (123) vector -> . VEC NOT CORIZQ expresion PTCOMA expresion CORDER
    (124) vector -> . VECM DOBLEPT DOBLEPT NEW PIZQ PDER
    (125) vector -> . VECM DOBLEPT DOBLEPT WCAPACITY PIZQ expresion PDER
    (120) remove -> . expresion PUNTO REMOVE PIZQ expresion PDER

    MENOS           shift and go to state 88
    I64             shift and go to state 89
    F64             shift and go to state 91
    PIZQ            shift and go to state 90
    NOT             shift and go to state 92
    ENTERO          shift and go to state 109
    DECIMAL         shift and go to state 110
    ID              shift and go to state 111
    CARACTER        shift and go to state 112
    CADENA          shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    IF              shift and go to state 86
    LOOP            shift and go to state 53
    CORIZQ          shift and go to state 116
    Y               shift and go to state 117
    VEC             shift and go to state 118
    VECM            shift and go to state 119

    expresion                      shift and go to state 408
    tostring                       shift and go to state 93
    as                             shift and go to state 94
    abs                            shift and go to state 95
    sqrt                           shift and go to state 96
    if_e                           shift and go to state 97
    llamadaF                       shift and go to state 98
    loop                           shift and go to state 99
    arraycontenido                 shift and go to state 100
    accesoarray                    shift and go to state 101
    referencia                     shift and go to state 102
    len                            shift and go to state 103
    capacity                       shift and go to state 104
    contains                       shift and go to state 105
    clone                          shift and go to state 106
    vector                         shift and go to state 107
    remove                         shift and go to state 108

state 405

    (148) elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion . LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    LLAVEDER        shift and go to state 409
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 406

    (145) if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .

    MAS             reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOS           reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIVISION        reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MODULO          reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYOR           reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOR           reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIFERENTE       reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    AND             reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    OR              reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PUNTO           reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    AS              reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PTCOMA          reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    COMA            reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    PDER            reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    CORDER          reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUAL           reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEDER        reduce using rule 145 (if_e -> IF expresion LLAVEIZQ instrucciones expresion LLAVEDER listaelse ELSE LLAVEIZQ instrucciones expresion LLAVEDER .)


state 407

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL . MAYOR instruccion1 LLAVEDER

    MAYOR           shift and go to state 410


state 408

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion . CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . MULTIPLICACION expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . IGUALIGUAL expresion
    (100) expresion -> expresion . DIFERENTE expresion
    (101) expresion -> expresion . AND expresion
    (102) expresion -> expresion . OR expresion
    (135) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (136) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (137) as -> expresion . AS I64
    (138) as -> expresion . AS F64
    (139) as -> expresion . AS USIZE
    (140) abs -> expresion . PUNTO ABS PIZQ PDER
    (141) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (127) len -> expresion . PUNTO LEN PIZQ PDER
    (128) capacity -> expresion . PUNTO CAPACITY PIZQ PDER
    (121) contains -> expresion . PUNTO CONTAINS PIZQ Y expresion PDER
    (126) clone -> expresion . PUNTO CLONE PIZQ PDER
    (120) remove -> expresion . PUNTO REMOVE PIZQ expresion PDER

    CORDER          shift and go to state 411
    MAS             shift and go to state 145
    MENOS           shift and go to state 146
    MULTIPLICACION  shift and go to state 147
    DIVISION        shift and go to state 148
    MODULO          shift and go to state 149
    MAYOR           shift and go to state 150
    MENOR           shift and go to state 151
    MAYORIGUAL      shift and go to state 152
    MENORIGUAL      shift and go to state 153
    IGUALIGUAL      shift and go to state 154
    DIFERENTE       shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    PUNTO           shift and go to state 158
    AS              shift and go to state 159


state 409

    (148) elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .

    ELSE            reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAS             reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOS           reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIVISION        reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MODULO          reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYOR           reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENOR           reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    DIFERENTE       reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    AND             reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    OR              reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PUNTO           reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    AS              reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PTCOMA          reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    COMA            reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    PDER            reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    CORDER          reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    IGUAL           reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)
    LLAVEDER        reduce using rule 148 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones expresion LLAVEDER .)


state 410

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR . instruccion1 LLAVEDER
    (37) instruccion1 -> . print COMA
    (38) instruccion1 -> . declaracion COMA
    (39) instruccion1 -> . asignacion COMA
    (40) instruccion1 -> . if_i COMA
    (41) instruccion1 -> . llamadaF COMA
    (42) instruccion1 -> . return COMA
    (43) instruccion1 -> . loop COMA
    (44) instruccion1 -> . break COMA
    (45) instruccion1 -> . while COMA
    (46) instruccion1 -> . continue COMA
    (47) instruccion1 -> . for COMA
    (48) instruccion1 -> . insert COMA
    (49) instruccion1 -> . asignacionA COMA
    (50) instruccion1 -> . push COMA
    (51) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (55) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (56) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (57) declaracion -> . LET MUT ID IGUAL expresion
    (58) declaracion -> . LET ID IGUAL expresion
    (59) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (60) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (61) declaracion -> . LET MUT ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (62) declaracion -> . LET ID DOBLEPT VECM MENOR tipo_dato MAYOR IGUAL expresion
    (67) asignacion -> . ID IGUAL expresion
    (68) if_i -> . IF expresion bloque
    (69) if_i -> . IF expresion bloque ELSE bloque
    (70) if_i -> . IF expresion bloque listaelseI
    (71) if_i -> . IF expresion bloque listaelseI ELSE bloque
    (14) llamadaF -> . ID PIZQ PDER
    (15) llamadaF -> . ID PIZQ lista_expresiones PDER
    (52) return -> . RETURN
    (53) return -> . RETURN expresion
    (76) loop -> . LOOP bloque
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) while -> . WHILE expresion bloque
    (80) continue -> . CONTINUE
    (81) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (82) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (83) for -> . FOR ID IN expresion bloque
    (85) insert -> . ID PUNTO INSERT PIZQ expresion COMA expresion PDER
    (54) asignacionA -> . ID ubicaciones IGUAL expresion
    (84) push -> . ID PUNTO PUSH PIZQ expresion PDER

    PRINTLN         shift and go to state 48
    LET             shift and go to state 49
    ID              shift and go to state 50
    IF              shift and go to state 51
    RETURN          shift and go to state 52
    LOOP            shift and go to state 53
    BREAK           shift and go to state 54
    WHILE           shift and go to state 55
    CONTINUE        shift and go to state 56
    FOR             shift and go to state 57

    instruccion1                   shift and go to state 412
    print                          shift and go to state 326
    declaracion                    shift and go to state 327
    asignacion                     shift and go to state 328
    if_i                           shift and go to state 329
    llamadaF                       shift and go to state 330
    return                         shift and go to state 331
    loop                           shift and go to state 332
    break                          shift and go to state 333
    while                          shift and go to state 334
    continue                       shift and go to state 335
    for                            shift and go to state 336
    insert                         shift and go to state 337
    asignacionA                    shift and go to state 338
    push                           shift and go to state 339

state 411

    (66) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .

    PDER            reduce using rule 66 (dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    COMA            reduce using rule 66 (dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 66 (dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .)


state 412

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 . LLAVEDER

    LLAVEDER        shift and go to state 413


state 413

    (75) match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .

    LLAVEDER        reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    PRINTLN         reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    LET             reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    ID              reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    IF              reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    RETURN          reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    LOOP            reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    BREAK           reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    WHILE           reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    CONTINUE        reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    FOR             reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    MATCH           reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    MENOS           reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    I64             reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    F64             reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    PIZQ            reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    NOT             reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    ENTERO          reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    DECIMAL         reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    CARACTER        reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    CADENA          reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    TRUE            reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    FALSE           reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    CORIZQ          reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    Y               reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    VEC             reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)
    VECM            reduce using rule 75 (match -> MATCH expresion LLAVEIZQ expresion IGUAL MAYOR instruccion1 expresion IGUAL MAYOR instruccion1 ID IGUAL MAYOR instruccion1 LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 283 resolved as shift
WARNING: reduce/reduce conflict in state 282 resolved using rule (instruccion -> loop)
WARNING: rejected rule (expresion -> loop) in state 282
